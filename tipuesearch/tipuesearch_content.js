var tipuesearch = {"pages": [
                {"title": "org.apache.poi.common.usermodel.Hyperlink", "text": "Represents a hyperlink.", "tags": "INTERFACE, CONCEPT", "url": "exp/Hyperlink.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord", "text": "The BSE record is related closely to the  and stores", "tags": "CLASS, CONCEPT", "url": "exp/EscherBSERecord.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord", "text": "The escher client anchor specifies which rows and cells the shape is bound to as well as", "tags": "CLASS, CONCEPT", "url": "exp/EscherClientAnchorRecord.html"},
                {"title": "org.apache.poi.ddf.EscherComplexProperty", "text": "A complex property differs from a simple property in that the data can not fit inside a 32 bit", "tags": "CLASS, CONCEPT", "url": "exp/EscherComplexProperty.html"},
                {"title": "org.apache.poi.ddf.EscherContainerRecord", "text": "Escher container records store other escher records as children", "tags": "CLASS, CONCEPT", "url": "exp/EscherContainerRecord.html"},
                {"title": "org.apache.poi.ddf.EscherOptRecord", "text": "The opt record is used to store property values for a shape", "tags": "CLASS, CONCEPT", "url": "exp/EscherOptRecord.html"},
                {"title": "org.apache.poi.ddf.EscherProperty", "text": "This is the abstract base class for all escher properties.", "tags": "CLASS, CONCEPT", "url": "exp/EscherProperty.html"},
                {"title": "org.apache.poi.ddf.EscherRecord", "text": "The base abstract record from which all escher records are defined.  Subclasses will need to define methods for serializationdeserialization and for determining the record size.", "tags": "CLASS, CONCEPT", "url": "exp/EscherRecord.html"},
                {"title": "org.apache.poi.ddf.EscherSimpleProperty", "text": "A simple property is of fixed length and as a property number in addition", "tags": "CLASS, CONCEPT", "url": "exp/EscherSimpleProperty.html"},
                {"title": "org.apache.poi.ddf.EscherSpRecord", "text": "Together the the EscherOptRecord this record defines some of the basic properties of a shape.", "tags": "CLASS, CONCEPT", "url": "exp/EscherSpRecord.html"},
                {"title": "org.apache.poi.ddf.UnknownEscherRecord", "text": "This record is used whenever a escher record is encountered that we do not explicitly support.", "tags": "CLASS, CONCEPT", "url": "exp/UnknownEscherRecord.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation", "text": "Convenience class representing a DocumentSummary Information stream in a Microsoft Office document.", "tags": "CLASS, CONCEPT", "url": "exp/DocumentSummaryInformation.html"},
                {"title": "org.apache.poi.hpsf.HPSFPropertiesOnlyDocument", "text": "A version of {@link POIDocument} which allows access to the", "tags": "CLASS, CONCEPT", "url": "exp/HPSFPropertiesOnlyDocument.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation", "text": "Convenience class representing a Summary Information stream in a Microsoft Office document.", "tags": "CLASS, CONCEPT", "url": "exp/SummaryInformation.html"},
                {"title": "org.apache.poi.hssf.dev.BiffDrawingToXml", "text": "Utility for representing drawings contained in a binary Excel file as a XML tree", "tags": "CLASS, CONCEPT", "url": "exp/BiffDrawingToXml.html"},
                {"title": "org.apache.poi.hssf.dev.BiffDumpingStream", "text": "Utility for reading in BIFF8 records and displaying data from them.", "tags": "CLASS, CONCEPT", "url": "exp/BiffViewer.html"},
                {"title": "org.apache.poi.hssf.eventmodel.ERFListener", "text": "An ERFListener is registered with the EventRecordFactory", "tags": "INTERFACE, CONCEPT", "url": "exp/ERFListener.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.dummyrecord.LastCellOfRowDummyRecord", "text": "A dummy record to indicate that we've now had the last cell record for this row.", "tags": "CLASS, CONCEPT", "url": "exp/LastCellOfRowDummyRecord.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.dummyrecord.MissingCellDummyRecord", "text": "A dummy record for when we're missing a cell in a row, but still want to trigger something", "tags": "CLASS, CONCEPT", "url": "exp/MissingCellDummyRecord.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFEventFactory", "text": "Low level event based HSSF reader", "tags": "CLASS, CONCEPT", "url": "exp/HSSFEventFactory.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFRequest", "text": "An HSSFRequest object should be constructed registering an instance or multiple instances of HSSFListener with each Record.sid you wish to listen for.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFRequest.html"},
                {"title": "org.apache.poi.hssf.extractor.TextListener", "text": "A text extractor for Excel files, that is based", "tags": "CLASS, CONCEPT", "url": "exp/EventBasedExcelExtractor.html"},
                {"title": "org.apache.poi.hssf.extractor.CommandArgs", "text": "A text extractor for Excel files.", "tags": "CLASS, CONCEPT", "url": "exp/ExcelExtractor.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner", "text": "Low level model implementation of a Sheet (one workbook contains many sheets)", "tags": "CLASS, CONCEPT", "url": "exp/InternalSheet.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook", "text": "Low level model implementation of a Workbook", "tags": "CLASS, CONCEPT", "url": "exp/InternalWorkbook.html"},
                {"title": "org.apache.poi.hssf.model.ExternalBookBlock", "text": "Link Table (OOO pdf reference: 4", "tags": "CLASS, CONCEPT", "url": "exp/LinkTable.html"},
                {"title": "org.apache.poi.hssf.model.RecordStream", "text": "Simplifies iteration over a sequence of  objects.", "tags": "CLASS, CONCEPT", "url": "exp/RecordStream.html"},
                {"title": "org.apache.poi.hssf.record.AbstractEscherHolderRecord", "text": "The escher container record is used to hold escher records.  It is abstract and must be subclassed for maximum benefit.", "tags": "CLASS, CONCEPT", "url": "exp/AbstractEscherHolderRecord.html"},
                {"title": "org.apache.poi.hssf.record.BlankRecord", "text": "Title:        Blank cell record (0x0201) REFERENCE:  PG 287 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)<P>", "tags": "CLASS, CONCEPT", "url": "exp/BlankRecord.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord", "text": "Title: Beginning Of File (0x0809) REFERENCE:  PG 289 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)<P>", "tags": "CLASS, CONCEPT", "url": "exp/BOFRecord.html"},
                {"title": "org.apache.poi.hssf.record.BoolErrRecord", "text": "Creates new BoolErrRecord. (0x0205)", "tags": "CLASS, CONCEPT", "url": "exp/BoolErrRecord.html"},
                {"title": "org.apache.poi.hssf.record.BoundSheetRecord", "text": "Title:        Bound Sheet Record (aka BundleSheet) (0x0085) REFERENCE:  PG 291 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS, CONCEPT", "url": "exp/BoundSheetRecord.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting", "text": "Border Formatting Block of the Conditional Formatting Rule Record.", "tags": "CLASS, CONCEPT", "url": "exp/BorderFormatting.html"},
                {"title": "org.apache.poi.hssf.record.cf.FontFormatting", "text": "Font Formatting Block of the Conditional Formatting Rule Record.", "tags": "CLASS, CONCEPT", "url": "exp/FontFormatting.html"},
                {"title": "org.apache.poi.hssf.record.cf.PatternFormatting", "text": "Pattern Formatting Block of the Conditional Formatting Rule Record.", "tags": "CLASS, CONCEPT", "url": "exp/PatternFormatting.html"},
                {"title": "org.apache.poi.hssf.record.CFHeaderRecord", "text": "Conditional Formatting Header record CFHEADER (0x01B0). Used to describe a {@link CFRuleRecord}.", "tags": "CLASS, CONCEPT", "url": "exp/CFHeaderRecord.html"},
                {"title": "org.apache.poi.hssf.record.CFRuleRecord", "text": "Conditional Formatting Rule Record (0x01B1).", "tags": "CLASS, CONCEPT", "url": "exp/CFRuleRecord.html"},
                {"title": "org.apache.poi.hssf.record.common.ExtendedColor", "text": "Title: CTColor (Extended Color) record part", "tags": "CLASS, CONCEPT", "url": "exp/ExtendedColor.html"},
                {"title": "org.apache.poi.hssf.record.common.PhRun", "text": "Title: Unicode String", "tags": "CLASS, CONCEPT", "url": "exp/UnicodeString.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord", "text": "The common object data record is used to store all common preferences for an excel object.", "tags": "CLASS, CONCEPT", "url": "exp/CommonObjectDataSubRecord.html"},
                {"title": "org.apache.poi.hssf.record.DVRecord", "text": "Title:        DATAVALIDATION Record (0x01BE)<p>", "tags": "CLASS, CONCEPT", "url": "exp/DVRecord.html"},
                {"title": "org.apache.poi.hssf.record.EndSubRecord", "text": "ftEnd (0x0000)<p> The end data record is used to denote the end of the subrecords.", "tags": "CLASS, CONCEPT", "url": "exp/EndSubRecord.html"},
                {"title": "org.apache.poi.hssf.record.SpecialCachedValue", "text": "Formula Record (0x0006). REFERENCE:  PG 317444 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)<P>", "tags": "CLASS, CONCEPT", "url": "exp/FormulaRecord.html"},
                {"title": "org.apache.poi.hssf.record.GUID", "text": "The  (0x01B8) wraps an HLINK-record", "tags": "CLASS, CONCEPT", "url": "exp/HyperlinkRecord.html"},
                {"title": "org.apache.poi.hssf.record.LabelRecord", "text": "Label Record (0x0204) - read only support for strings stored directly in the cell", "tags": "CLASS, CONCEPT", "url": "exp/LabelRecord.html"},
                {"title": "org.apache.poi.hssf.record.LabelSSTRecord", "text": "Title:        Label SST Record REFERENCE:  PG 325 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS, CONCEPT", "url": "exp/LabelSSTRecord.html"},
                {"title": "org.apache.poi.hssf.record.MulBlankRecord", "text": "Title:        Multiple Blank cell record(0x00BE) REFERENCE:  PG 329 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS, CONCEPT", "url": "exp/MulBlankRecord.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord", "text": "NOTE: Comment Associated with a Cell (0x001C)", "tags": "CLASS, CONCEPT", "url": "exp/NoteRecord.html"},
                {"title": "org.apache.poi.hssf.record.NumberRecord", "text": "NUMBER (0x0203) Contains a numeric cell value.", "tags": "CLASS, CONCEPT", "url": "exp/NumberRecord.html"},
                {"title": "org.apache.poi.hssf.record.ObjRecord", "text": "OBJRECORD (0x005D)<p> The obj record is used to hold various graphic objects and controls.", "tags": "CLASS, CONCEPT", "url": "exp/ObjRecord.html"},
                {"title": "org.apache.poi.hssf.record.Break", "text": "Since both records store 2byte integers (short), no point in", "tags": "CLASS, CONCEPT", "url": "exp/Break.html"},
                {"title": "org.apache.poi.hssf.record.Record", "text": "All HSSF Records inherit from this class.", "tags": "CLASS, CONCEPT", "url": "exp/Record.html"},
                {"title": "org.apache.poi.hssf.record.ReflectionMethodRecordCreator", "text": "Title:  Record Factory<p> Description:  Takes a stream and outputs an array of Record objects.", "tags": "CLASS, CONCEPT", "url": "exp/RecordFactory.html"},
                {"title": "org.apache.poi.hssf.record.StreamEncryptionInfo", "text": "A stream based way to get at complete records, with", "tags": "CLASS, CONCEPT", "url": "exp/RecordFactoryInputStream.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput", "text": "Title:  Record Input Stream", "tags": "CLASS, CONCEPT", "url": "exp/RecordInputStream.html"},
                {"title": "org.apache.poi.hssf.record.RefreshAllRecord", "text": "Title:        Refresh All Record (0x01B7) REFERENCE:  PG 376 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS, CONCEPT", "url": "exp/RefreshAllRecord.html"},
                {"title": "org.apache.poi.hssf.record.RKRecord", "text": "Title:        RK Record (0x027E)", "tags": "CLASS, CONCEPT", "url": "exp/RKRecord.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord", "text": "Title:        Row Record (0x0208) REFERENCE:  PG 379 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS, CONCEPT", "url": "exp/RowRecord.html"},
                {"title": "org.apache.poi.hssf.record.SSTRecord", "text": "Title:        Static String Table Record (0x00FC) REFERENCE:    PG 389 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS, CONCEPT", "url": "exp/SSTRecord.html"},
                {"title": "org.apache.poi.hssf.record.StringRecord", "text": "STRING (0x0207)<p> Stores the cached result of a text formula", "tags": "CLASS, CONCEPT", "url": "exp/StringRecord.html"},
                {"title": "org.apache.poi.hssf.record.StyleRecord", "text": "Title:        Style Record (0x0293) REFERENCE:  PG 390 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS, CONCEPT", "url": "exp/StyleRecord.html"},
                {"title": "org.apache.poi.hssf.record.UnknownSubRecord", "text": "Subrecords are part of the OBJ class.", "tags": "CLASS, CONCEPT", "url": "exp/SubRecord.html"},
                {"title": "org.apache.poi.hssf.record.TextObjectRecord", "text": "The TXO record (0x01B6) is used to define the properties of a text box", "tags": "CLASS, CONCEPT", "url": "exp/TextObjectRecord.html"},
                {"title": "org.apache.poi.hssf.record.WriteAccessRecord", "text": "Title: Write Access Record (0x005C) REFERENCE: PG 424 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS, CONCEPT", "url": "exp/WriteAccessRecord.html"},
                {"title": "org.apache.poi.hssf.usermodel.FormulaValuePair", "text": "Data Validation Constraint", "tags": "CLASS, CONCEPT", "url": "exp/DVConstraint.html"},
                {"title": "org.apache.poi.hssf.usermodel.HeaderFooter", "text": "Common class for {@link HSSFHeader} and {@link HSSFFooter}.", "tags": "CLASS, CONCEPT", "url": "exp/HeaderFooter.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFAnchor", "text": "An anchor is what specifics the position of a shape within a client object or within another containing shape.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFAnchor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell", "text": "High level representation of a cell in a row of a spreadsheet", "tags": "CLASS, CONCEPT", "url": "exp/HSSFCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle", "text": "High level representation of the style of a cell in a sheet of a workbook.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFCellStyle.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFClientAnchor", "text": "A client anchor is attached to an excel worksheet.  It anchors against a top-left and buttom-right cell.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFClientAnchor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFColorScaleFormatting", "text": "High level representation for Color Scale  Color Gradient Formatting component of Conditional Formatting settings", "tags": "CLASS, CONCEPT", "url": "exp/HSSFColorScaleFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFComment", "text": "Represents a cell comment - a sticky note associated with a cell.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFComment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFConditionalFormatting", "text": "HSSFConditionalFormatting class encapsulates all settings of Conditional Formatting", "tags": "CLASS, CONCEPT", "url": "exp/HSSFConditionalFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFConditionalFormattingRule", "text": "High level representation of Conditional Formatting Rule", "tags": "CLASS, CONCEPT", "url": "exp/HSSFConditionalFormattingRule.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFDataFormat", "text": "Identifies both built-in and user defined formats within a workbook", "tags": "CLASS, CONCEPT", "url": "exp/HSSFDataFormat.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFDataFormatter", "text": "HSSFDataFormatter contains methods for formatting the value stored in an", "tags": "CLASS, CONCEPT", "url": "exp/HSSFDataFormatter.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFDataValidation", "text": "Utility class for creating data validation cells", "tags": "CLASS, CONCEPT", "url": "exp/HSSFDataValidation.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFDateUtil", "text": "Contains methods for dealing with Excel dates.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFDateUtil.html"},
                {"title": "org.apache.poi.hssf.usermodel.Name", "text": "Internal POI use only", "tags": "CLASS, CONCEPT", "url": "exp/HSSFEvaluationWorkbook.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFont", "text": "Represents a Font used in a workbook.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFFont.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFontFormatting", "text": "High level representation for Font Formatting component of Conditional Formatting settings", "tags": "CLASS, CONCEPT", "url": "exp/HSSFFontFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFooter", "text": "Class to read and manipulate the footer", "tags": "CLASS, CONCEPT", "url": "exp/HSSFFooter.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator", "text": "Evaluates formula cells", "tags": "CLASS, CONCEPT", "url": "exp/HSSFFormulaEvaluator.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHeader", "text": "Class to read and manipulate the header", "tags": "CLASS, CONCEPT", "url": "exp/HSSFHeader.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink", "text": "Represents an Excel hyperlink.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFHyperlink.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFObjectData", "text": "Represents binary object (i", "tags": "CLASS, CONCEPT", "url": "exp/HSSFObjectData.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFOptimiser", "text": "Excel can get cranky if you give it files containing too", "tags": "CLASS, CONCEPT", "url": "exp/HSSFOptimiser.html"},
                {"title": "org.apache.poi.hssf.usermodel.CustomColor", "text": "Represents a workbook color palette", "tags": "CLASS, CONCEPT", "url": "exp/HSSFPalette.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch", "text": "The patriarch is the toplevel container for shapes in a sheet.  It does little other than act as a container for other shapes and groups.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFPatriarch.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatternFormatting", "text": "High level representation for Conditional Formatting settings", "tags": "CLASS, CONCEPT", "url": "exp/HSSFPatternFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPicture", "text": "Represents a escher picture.  Eg. A GIF, JPEG etc...", "tags": "CLASS, CONCEPT", "url": "exp/HSSFPicture.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPictureData", "text": "Represents binary data stored in the file.  Eg. A GIF, JPEG etc...", "tags": "CLASS, CONCEPT", "url": "exp/HSSFPictureData.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup", "text": "Used to modify the print setup", "tags": "CLASS, CONCEPT", "url": "exp/HSSFPrintSetup.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString", "text": "Rich text unicode string", "tags": "CLASS, CONCEPT", "url": "exp/HSSFRichTextString.html"},
                {"title": "org.apache.poi.hssf.usermodel.CellIterator", "text": "An iterator over the (physical) cells in the row.", "tags": "CLASS, CONCEPT", "url": "exp/CellIterator.html"},
                {"title": "org.apache.poi.hssf.usermodel.CellIterator", "text": "High level representation of a row of a spreadsheet. Only rows that have cells should be added to a Sheet.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShape", "text": "An abstract shape", "tags": "CLASS, CONCEPT", "url": "exp/HSSFShape.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet", "text": "High level representation of a worksheet.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFSheet.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheetConditionalFormatting", "text": "The 'Conditional Formatting' facet of", "tags": "CLASS, CONCEPT", "url": "exp/HSSFSheetConditionalFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSimpleShape", "text": "Represents a simple shape such as a line, rectangle or oval.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFSimpleShape.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFTextbox", "text": "A textbox is a shape that may hold a rich text string.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFTextbox.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector", "text": "High level representation of a workbook", "tags": "CLASS, CONCEPT", "url": "exp/HSSFWorkbook.html"},
                {"title": "org.apache.poi.hssf.util.CellReference", "text": "Common conversion functions between Excel style A1, C27 style", "tags": "CLASS, CONCEPT", "url": "exp/CellReference.html"},
                {"title": "org.apache.poi.hssf.util.AUTOMATIC", "text": "Intends to provide support for the very evil index to triplet issue and", "tags": "CLASS, CONCEPT", "url": "exp/HSSFColor.html"},
                {"title": "org.apache.poi.hssf.util.HSSFRegionUtil", "text": "Various utility functions that make working with a region of cells easier.", "tags": "CLASS, CONCEPT", "url": "exp/HSSFRegionUtil.html"},
                {"title": "org.apache.poi.OldFileFormatException", "text": "Base class of all the exceptions that POI throws in the event that it's given a file that's older than currently supported.", "tags": "CLASS, CONCEPT", "url": "exp/OldFileFormatException.html"},
                {"title": "org.apache.poi.POIDocument", "text": "This holds the common functionality for all POI", "tags": "CLASS, CONCEPT", "url": "exp/POIDocument.html"},
                {"title": "org.apache.poi.poifs.crypt.EncryptionInfo", "text": "This class may require {@code poi-ooxml} to be on the classpath to load some {@link EncryptionMode}s.", "tags": "CLASS, CONCEPT", "url": "exp/EncryptionInfo.html"},
                {"title": "org.apache.poi.poifs.dev.POIFSLister", "text": "A lister of the entries in POIFS files. Much simpler than {@link POIFSViewer}", "tags": "CLASS, CONCEPT", "url": "exp/POIFSLister.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode", "text": "Simple implementation of DirectoryEntry", "tags": "CLASS, CONCEPT", "url": "exp/DirectoryNode.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentInputStream", "text": "This class provides methods to read a DocumentEntry managed by a", "tags": "CLASS, CONCEPT", "url": "exp/DocumentInputStream.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentNode", "text": "Simple implementation of DocumentEntry for OPOIFS", "tags": "CLASS, CONCEPT", "url": "exp/DocumentNode.html"},
                {"title": "org.apache.poi.poifs.filesystem.NDocumentInputStream", "text": "This class provides methods to read a DocumentEntry managed by a {@link NPOIFSFileSystem} instance.", "tags": "CLASS, CONCEPT", "url": "exp/NDocumentInputStream.html"},
                {"title": "org.apache.poi.poifs.filesystem.NDocumentOutputStream", "text": "This class provides methods to write a DocumentEntry managed by a {@link NPOIFSFileSystem} instance.", "tags": "CLASS, CONCEPT", "url": "exp/NDocumentOutputStream.html"},
                {"title": "org.apache.poi.poifs.filesystem.OfficeXmlFileException", "text": "This exception is thrown when we try to open a file that's actually", "tags": "CLASS, CONCEPT", "url": "exp/OfficeXmlFileException.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlock", "text": "The block containing the archive header", "tags": "CLASS, CONCEPT", "url": "exp/HeaderBlock.html"},
                {"title": "org.apache.poi.POITextExtractor", "text": "Common Parent for Text Extractors", "tags": "CLASS, CONCEPT", "url": "exp/POITextExtractor.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS, CONCEPT", "url": "exp/CTColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTConnection", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS, CONCEPT", "url": "exp/CTConnection.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS, CONCEPT", "url": "exp/CTHyperlink.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTOfficeArtExtension", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS, CONCEPT", "url": "exp/CTOfficeArtExtension.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTOfficeArtExtensionList", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS, CONCEPT", "url": "exp/CTOfficeArtExtensionList.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRelativeRect", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS, CONCEPT", "url": "exp/CTRelativeRect.html"},
                {"title": "org.apache.poi.sl.draw.geom.Formula", "text": "A guide formula in DrawingML. This is a base class for adjust values, geometric guides and bilt-in guides", "tags": "CLASS, CONCEPT", "url": "exp/Formula.html"},
                {"title": "org.apache.poi.sl.draw.geom.Guide", "text": "Date: 102411", "tags": "CLASS, CONCEPT", "url": "exp/Guide.html"},
                {"title": "org.apache.poi.sl.draw.geom.Outline", "text": "Date: 11611", "tags": "CLASS, CONCEPT", "url": "exp/Outline.html"},
                {"title": "org.apache.poi.sl.draw.geom.Path", "text": "Specifies a creation path consisting of a series of moves, lines and curves that when combined forms a geometric shape", "tags": "CLASS, CONCEPT", "url": "exp/Path.html"},
                {"title": "org.apache.poi.sl.draw.ImageRenderer", "text": "Classes can implement this interfaces to support other formats, for", "tags": "INTERFACE, CONCEPT", "url": "exp/ImageRenderer.html"},
                {"title": "org.apache.poi.sl.usermodel.Hyperlink", "text": "A PowerPoint hyperlink", "tags": "INTERFACE, CONCEPT", "url": "exp/Hyperlink.html"},
                {"title": "org.apache.poi.sl.usermodel.Sheet", "text": "Common parent of Slides, Notes and Masters", "tags": "INTERFACE, CONCEPT", "url": "exp/Sheet.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun", "text": "Some text.", "tags": "INTERFACE, CONCEPT", "url": "exp/TextRun.html"},
                {"title": "org.apache.poi.ss.extractor.ExcelExtractor", "text": "Common interface for Excel text extractors, covering HSSF and XSSF", "tags": "INTERFACE, CONCEPT", "url": "exp/ExcelExtractor.html"},
                {"title": "org.apache.poi.ss.format.DatePartHandler", "text": "Formats a date value.", "tags": "CLASS, CONCEPT", "url": "exp/CellDateFormatter.html"},
                {"title": "org.apache.poi.ss.format.CellFormat", "text": "Format a value according to the standard Excel behavior", "tags": "CLASS, CONCEPT", "url": "exp/CellFormat.html"},
                {"title": "org.apache.poi.ss.formula.atp.IfError", "text": "Implementation of 'Analysis Toolpak' Excel function IFERROR() IFERRORexpressionstring<b>)", "tags": "CLASS, CONCEPT", "url": "exp/IfError.html"},
                {"title": "org.apache.poi.ss.formula.atp.YearFrac", "text": "Implementation of Excel 'Analysis ToolPak' function YEARFRAC()", "tags": "CLASS, CONCEPT", "url": "exp/YearFrac.html"},
                {"title": "org.apache.poi.ss.formula.eval.EvaluationException", "text": "This class is used to simplify error handling logic  operator and function", "tags": "CLASS, CONCEPT", "url": "exp/EvaluationException.html"},
                {"title": "org.apache.poi.ss.formula.eval.FunctionID", "text": "Mappings from the Excel functions to our evaluation implementations (where available)", "tags": "CLASS, CONCEPT", "url": "exp/FunctionEval.html"},
                {"title": "org.apache.poi.ss.formula.Formula", "text": "Encapsulates an encoded formula token array.", "tags": "CLASS, CONCEPT", "url": "exp/Formula.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParsingWorkbook", "text": "Abstracts a workbook for the purpose of formula parsing.<br> For POI internal use only", "tags": "INTERFACE, CONCEPT", "url": "exp/FormulaParsingWorkbook.html"},
                {"title": "org.apache.poi.ss.formula.functions.Percentile", "text": "Returns the k-th percentile of values in a range", "tags": "CLASS, CONCEPT", "url": "exp/Percentile.html"},
                {"title": "org.apache.poi.ss.formula.functions.Code", "text": "Implementation for Excel CODE () function", "tags": "CLASS, CONCEPT", "url": "exp/Code.html"},
                {"title": "org.apache.poi.ss.formula.functions.Complex", "text": "Implementation for Excel COMPLEX () function", "tags": "CLASS, CONCEPT", "url": "exp/Complex.html"},
                {"title": "org.apache.poi.ss.formula.functions.StringMatcher", "text": "Implementation for the function COUNTIF", "tags": "CLASS, CONCEPT", "url": "exp/Countif.html"},
                {"title": "org.apache.poi.ss.formula.functions.EDate", "text": "Implementation for Excel EDATE () function.", "tags": "CLASS, CONCEPT", "url": "exp/EDate.html"},
                {"title": "org.apache.poi.ss.formula.functions.EOMonth", "text": "Implementation for the Excel EOMONTH() function", "tags": "CLASS, CONCEPT", "url": "exp/EOMonth.html"},
                {"title": "org.apache.poi.ss.formula.functions.FreeRefFunction", "text": "For most Excel functions, involving references ((cell, area), (2d, 3d)), the references are", "tags": "INTERFACE, CONCEPT", "url": "exp/FreeRefFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.Hyperlink", "text": "Implementation of Excel HYPERLINK function", "tags": "CLASS, CONCEPT", "url": "exp/Hyperlink.html"},
                {"title": "org.apache.poi.ss.formula.functions.Index", "text": "Implementation for the Excel function INDEX", "tags": "CLASS, CONCEPT", "url": "exp/Index.html"},
                {"title": "org.apache.poi.ss.formula.functions.BaseRef", "text": "Implementation for Excel function OFFSET()", "tags": "CLASS, CONCEPT", "url": "exp/Offset.html"},
                {"title": "org.apache.poi.ss.formula.functions.Quotient", "text": "Syntax (,)", "tags": "CLASS, CONCEPT", "url": "exp/Quotient.html"},
                {"title": "org.apache.poi.ss.formula.functions.Roman", "text": "Implementation for Excel WeekNum() function", "tags": "CLASS, CONCEPT", "url": "exp/Roman.html"},
                {"title": "org.apache.poi.ss.formula.functions.Substitute", "text": "An implementation of the SUBSTITUTE function:<P> Substitutes text in a text string with new text, some number of times.", "tags": "CLASS, CONCEPT", "url": "exp/Substitute.html"},
                {"title": "org.apache.poi.ss.formula.functions.Subtotal", "text": "Implementation for the Excel function SUBTOTALSyntax :", "tags": "CLASS, CONCEPT", "url": "exp/Subtotal.html"},
                {"title": "org.apache.poi.ss.formula.functions.Sumif", "text": "Implementation for the Excel function SUMIF", "tags": "CLASS, CONCEPT", "url": "exp/Sumif.html"},
                {"title": "org.apache.poi.ss.formula.functions.Sumifs", "text": "Implementation for the Excel function SUMIFS", "tags": "CLASS, CONCEPT", "url": "exp/Sumifs.html"},
                {"title": "org.apache.poi.ss.formula.functions.Sumproduct", "text": "Implementation for the Excel function SUMPRODUCT", "tags": "CLASS, CONCEPT", "url": "exp/Sumproduct.html"},
                {"title": "org.apache.poi.ss.formula.functions.TimeFunc", "text": "Implementation for the Excel function TIME Based on POI {@link DateFunc}", "tags": "CLASS, CONCEPT", "url": "exp/TimeFunc.html"},
                {"title": "org.apache.poi.ss.formula.functions.Value", "text": "Implementation for Excel VALUE() function.Syntax ()#VALUE!<b> error. Blank string converts to zero.", "tags": "CLASS, CONCEPT", "url": "exp/Value.html"},
                {"title": "org.apache.poi.ss.formula.functions.Vlookup", "text": "Implementation of the VLOOKUP() function", "tags": "CLASS, CONCEPT", "url": "exp/Vlookup.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AddPtg", "text": "Addition operator PTG the \"+\" binomial operator.  If you need more explanation than that then well...We really can't help you here.", "tags": "CLASS, CONCEPT", "url": "exp/AddPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaNPtg", "text": "Specifies a rectangular area of cells A1:A4 for instance.", "tags": "CLASS, CONCEPT", "url": "exp/AreaNPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtg", "text": "Specifies a rectangular area of cells A1:A4 for instance.", "tags": "CLASS, CONCEPT", "url": "exp/AreaPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtgBase", "text": "Specifies a rectangular area of cells A1:A4 for instance.", "tags": "CLASS, CONCEPT", "url": "exp/AreaPtgBase.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Initial", "text": "Represents the initial plain tArray token (without the constant data that trails the whole", "tags": "CLASS, CONCEPT", "url": "exp/Initial.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Ptg", "text": "represents a syntactic token in a formula", "tags": "CLASS, CONCEPT", "url": "exp/Ptg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Pxg", "text": "An XSSF only special kind of Ptg, which stores the sheet  book reference in string form.", "tags": "INTERFACE, CONCEPT", "url": "exp/Pxg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.RefPtg", "text": "ReferencePtg - handles references (such as A1, A2, IA4)", "tags": "CLASS, CONCEPT", "url": "exp/RefPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.RefPtgBase", "text": "ReferencePtgBase - handles references (such as A1, A2, IA4)", "tags": "CLASS, CONCEPT", "url": "exp/RefPtgBase.html"},
                {"title": "org.apache.poi.ss.formula.SharedFormula", "text": "Encapsulates logic to convert shared formulaa into non shared equivalent", "tags": "CLASS, CONCEPT", "url": "exp/SharedFormula.html"},
                {"title": "org.apache.poi.ss.formula.udf.AggregatingUDFFinder", "text": "Collects add-in libraries and VB macro functions together into one UDF finder", "tags": "CLASS, CONCEPT", "url": "exp/AggregatingUDFFinder.html"},
                {"title": "org.apache.poi.ss.formula.udf.DefaultUDFFinder", "text": "Default UDF finder - for adding your own user defined functions.", "tags": "CLASS, CONCEPT", "url": "exp/DefaultUDFFinder.html"},
                {"title": "org.apache.poi.ss.formula.udf.UDFFinder", "text": "Common interface for \"Add-in\" libraries and user defined function libraries.", "tags": "INTERFACE, CONCEPT", "url": "exp/UDFFinder.html"},
                {"title": "org.apache.poi.ss.usermodel.AutoFilter", "text": "Represents autofiltering for the specified worksheet", "tags": "INTERFACE, CONCEPT", "url": "exp/AutoFilter.html"},
                {"title": "org.apache.poi.ss.usermodel.BorderFormatting", "text": "High level representation for Border Formatting component of Conditional Formatting settings", "tags": "INTERFACE, CONCEPT", "url": "exp/BorderFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell", "text": "High level representation of a cell in a row of a spreadsheet.", "tags": "INTERFACE, CONCEPT", "url": "exp/Cell.html"},
                {"title": "org.apache.poi.ss.usermodel.CellRange", "text": "Represents a rectangular region of a {@link Sheet}", "tags": "INTERFACE, CONCEPT", "url": "exp/CellRange.html"},
                {"title": "org.apache.poi.ss.usermodel.CellValue", "text": "Mimics the 'data view' of a cell", "tags": "CLASS, CONCEPT", "url": "exp/CellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Chart", "text": "High level representation of a chart.", "tags": "INTERFACE, CONCEPT", "url": "exp/Chart.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartDataSource", "text": "Represents data model of the charts.", "tags": "INTERFACE, CONCEPT", "url": "exp/ChartDataSource.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout", "text": "High level representation of chart element manual layout.", "tags": "INTERFACE, CONCEPT", "url": "exp/ManualLayout.html"},
                {"title": "org.apache.poi.ss.usermodel.ChildAnchor", "text": "Common interface for anchors", "tags": "INTERFACE, CONCEPT", "url": "exp/ChildAnchor.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor", "text": "A client anchor is attached to an excel worksheet.  It anchors against a top-left and bottom-right cell.", "tags": "INTERFACE, CONCEPT", "url": "exp/ClientAnchor.html"},
                {"title": "org.apache.poi.ss.usermodel.ComparisonOperator", "text": "The conditional format operators used for \"Highlight Cells That Contain...\" rules.", "tags": "CLASS, CONCEPT", "url": "exp/ComparisonOperator.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormatting", "text": "The ConditionalFormatting class encapsulates all settings of Conditional Formatting", "tags": "INTERFACE, CONCEPT", "url": "exp/ConditionalFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingRule", "text": "Represents a description of a conditional formatting rule", "tags": "INTERFACE, CONCEPT", "url": "exp/ConditionalFormattingRule.html"},
                {"title": "org.apache.poi.ss.usermodel.CreationHelper", "text": "An object that handles instantiating concrete", "tags": "INTERFACE, CONCEPT", "url": "exp/CreationHelper.html"},
                {"title": "org.apache.poi.ss.usermodel.CellFormatResultWrapper", "text": "DataFormatter contains methods for formatting the value stored in an", "tags": "CLASS, CONCEPT", "url": "exp/DataFormatter.html"},
                {"title": "org.apache.poi.ss.usermodel.FormatException", "text": "Contains methods for dealing with Excel dates.", "tags": "CLASS, CONCEPT", "url": "exp/DateUtil.html"},
                {"title": "org.apache.poi.ss.usermodel.Drawing", "text": "High level representation of spreadsheet drawing.", "tags": "INTERFACE, CONCEPT", "url": "exp/Drawing.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor", "text": "Represents a XSSF-style color (based on either a", "tags": "CLASS, CONCEPT", "url": "exp/ExtendedColor.html"},
                {"title": "org.apache.poi.ss.usermodel.FontFormatting", "text": "High level representation for Font Formatting component of Conditional Formatting settings", "tags": "INTERFACE, CONCEPT", "url": "exp/FontFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.Footer", "text": "Common definition of a HSSF or XSSF page footer", "tags": "INTERFACE, CONCEPT", "url": "exp/Footer.html"},
                {"title": "org.apache.poi.ss.usermodel.FormulaEvaluator", "text": "Evaluates formula cells", "tags": "INTERFACE, CONCEPT", "url": "exp/FormulaEvaluator.html"},
                {"title": "org.apache.poi.ss.usermodel.Header", "text": "Common definition of a HSSF or XSSF page header", "tags": "INTERFACE, CONCEPT", "url": "exp/Header.html"},
                {"title": "org.apache.poi.ss.usermodel.HeaderFooter", "text": "Common interface for {@link org.apache.poi.ss.usermodel.Header} and {@link org.apache.poi.ss.usermodel.Footer}.", "tags": "INTERFACE, CONCEPT", "url": "exp/HeaderFooter.html"},
                {"title": "org.apache.poi.ss.usermodel.Hyperlink", "text": "Represents an Excel hyperlink.", "tags": "INTERFACE, CONCEPT", "url": "exp/Hyperlink.html"},
                {"title": "org.apache.poi.ss.usermodel.ObjectData", "text": "Common interface for OLE shapes, i.e. shapes linked to embedded documents", "tags": "INTERFACE, CONCEPT", "url": "exp/ObjectData.html"},
                {"title": "org.apache.poi.ss.usermodel.Picture", "text": "Repersents a picture in a SpreadsheetML document", "tags": "INTERFACE, CONCEPT", "url": "exp/Picture.html"},
                {"title": "org.apache.poi.ss.usermodel.RichTextString", "text": "Rich text unicode string.  These strings can have fonts applied to arbitary parts of the string.", "tags": "INTERFACE, CONCEPT", "url": "exp/RichTextString.html"},
                {"title": "org.apache.poi.ss.usermodel.Row", "text": "High level representation of a row of a spreadsheet.", "tags": "INTERFACE, CONCEPT", "url": "exp/Row.html"},
                {"title": "org.apache.poi.ss.usermodel.Shape", "text": "Common interface for all drawing shapes", "tags": "INTERFACE, CONCEPT", "url": "exp/Shape.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet", "text": "High level representation of a Excel worksheet.", "tags": "INTERFACE, CONCEPT", "url": "exp/Sheet.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting", "text": "The 'Conditional Formatting' facet of", "tags": "INTERFACE, CONCEPT", "url": "exp/SheetConditionalFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook", "text": "High level representation of a Excel workbook", "tags": "INTERFACE, CONCEPT", "url": "exp/Workbook.html"},
                {"title": "org.apache.poi.ss.util.CellAddress", "text": "CellAddressCellAddressCellReference", "tags": "CLASS, CONCEPT", "url": "exp/CellAddress.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddress", "text": "See OOO documentation: excelfileformat", "tags": "CLASS, CONCEPT", "url": "exp/CellRangeAddress.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddressList", "text": "Implementation of the cell range address lists,like is described", "tags": "CLASS, CONCEPT", "url": "exp/CellRangeAddressList.html"},
                {"title": "org.apache.poi.ss.util.CellRefParts", "text": "CellReferenceCellReferenceCellAddress", "tags": "CLASS, CONCEPT", "url": "exp/CellReference.html"},
                {"title": "org.apache.poi.ss.util.NumberToTextConverter", "text": "Excel converts numbers to text with different rules to those of java, so", "tags": "CLASS, CONCEPT", "url": "exp/NumberToTextConverter.html"},
                {"title": "org.apache.poi.ss.util.PaneInformation", "text": "Holds information regarding a split plane or freeze plane for a sheet.", "tags": "CLASS, CONCEPT", "url": "exp/PaneInformation.html"},
                {"title": "org.apache.poi.ss.util.CellPropertySetter", "text": "Various utility functions that make working with a region of cells easier.", "tags": "CLASS, CONCEPT", "url": "exp/RegionUtil.html"},
                {"title": "org.apache.poi.UnsupportedFileFormatException", "text": "Base class of all the exceptions that POI throws in the event that it's given a file that isn't supported", "tags": "CLASS, CONCEPT", "url": "exp/UnsupportedFileFormatException.html"},
                {"title": "org.apache.poi.util.DefaultTempFileCreationStrategy", "text": "Default implementation of the {@link TempFileCreationStrategy} used by {@link TempFile}:", "tags": "CLASS, CONCEPT", "url": "exp/DefaultTempFileCreationStrategy.html"},
                {"title": "org.apache.poi.util.NullLogger", "text": "A logger class that strives to make it as easy as possible for", "tags": "CLASS, CONCEPT", "url": "exp/NullLogger.html"},
                {"title": "org.apache.poi.util.POILogFactory", "text": "Provides logging without clients having to mess with configurationinitialization.", "tags": "CLASS, CONCEPT", "url": "exp/POILogFactory.html"},
                {"title": "org.apache.poi.util.POILogger", "text": "A logger interface that strives to make it as easy as possible for", "tags": "CLASS, CONCEPT", "url": "exp/POILogger.html"},
                {"title": "org.apache.poi.util.DefaultTempFileCreationStrategy", "text": "Interface for creating temporary files. Collects them all into one directory by default.", "tags": "CLASS, CONCEPT", "url": "exp/TempFile.html"},
                {"title": "org.apache.poi.wp.usermodel.CharacterRun", "text": "This class represents a run of text that share common properties.", "tags": "INTERFACE, CONCEPT", "url": "exp/CharacterRun.html"},
                {"title": "org.apache.poi.wp.usermodel.Paragraph", "text": "This class represents a paragraph, made up of one or more runs of text.", "tags": "INTERFACE, CONCEPT", "url": "exp/Paragraph.html"},
                {"title": "org.apache.poi.ddf.AbstractEscherOptRecord", "text": "Common abstract class for {@link EscherOptRecord} and {@link EscherTertiaryOptRecord}", "tags": "CLASS", "url": "exp/AbstractEscherOptRecord.html"},
                {"title": "org.apache.poi.ddf.DefaultEscherRecordFactory", "text": "Generates escher records when provided the byte array containing those records.", "tags": "CLASS", "url": "exp/DefaultEscherRecordFactory.html"},
                {"title": "org.apache.poi.ddf.EscherArrayProperty", "text": "Escher array properties are the most wierd construction ever invented with all sorts of special cases.  I'm hopeful I've got them all.", "tags": "CLASS", "url": "exp/EscherArrayProperty.html"},
                {"title": "org.apache.poi.ddf.EscherBoolProperty", "text": "Represents a boolean property", "tags": "CLASS", "url": "exp/EscherBoolProperty.html"},
                {"title": "org.apache.poi.ddf.EscherChildAnchorRecord", "text": "The escher child achor record is used to specify the position of a shape under an existing group.  The first level of shape records use a EscherClientAnchor record instead.", "tags": "CLASS", "url": "exp/EscherChildAnchorRecord.html"},
                {"title": "org.apache.poi.ddf.EscherClientDataRecord", "text": "The EscherClientDataRecord is used to store client specific data about the position of a shape within a container.", "tags": "CLASS", "url": "exp/EscherClientDataRecord.html"},
                {"title": "org.apache.poi.ddf.EscherColorRef", "text": "An OfficeArtCOLORREF structure entry which also handles color extension opid data", "tags": "CLASS", "url": "exp/EscherColorRef.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster", "text": "This record defines the drawing groups used for a particular sheet.", "tags": "CLASS", "url": "exp/EscherDggRecord.html"},
                {"title": "org.apache.poi.ddf.EscherDgRecord", "text": "This record simply holds the number of shapes in the drawing group and the last shape id used for this drawing group.", "tags": "CLASS", "url": "exp/EscherDgRecord.html"},
                {"title": "org.apache.poi.ddf.EscherDump", "text": "Used to dump the contents of escher records to a PrintStream.", "tags": "CLASS", "url": "exp/EscherDump.html"},
                {"title": "org.apache.poi.ddf.EscherProperties", "text": "Provides a list of all known escher properties including the description and type.", "tags": "CLASS", "url": "exp/EscherProperties.html"},
                {"title": "org.apache.poi.ddf.EscherPropertyFactory", "text": "Generates a property given a reference into the byte array storing that property.", "tags": "CLASS", "url": "exp/EscherPropertyFactory.html"},
                {"title": "org.apache.poi.ddf.EscherPropertyMetaData", "text": "This class stores the type and description of an escher property.", "tags": "CLASS", "url": "exp/EscherPropertyMetaData.html"},
                {"title": "org.apache.poi.ddf.EscherRecordFactory", "text": "The escher record factory interface allows for the creation of escher records from a pointer into a data array.", "tags": "INTERFACE", "url": "exp/EscherRecordFactory.html"},
                {"title": "org.apache.poi.ddf.EscherRGBProperty", "text": "A color property.", "tags": "CLASS", "url": "exp/EscherRGBProperty.html"},
                {"title": "org.apache.poi.ddf.EscherSerializationListener", "text": "Interface for listening to escher serialization events.", "tags": "INTERFACE", "url": "exp/EscherSerializationListener.html"},
                {"title": "org.apache.poi.ddf.EscherShapePathProperty", "text": "Defines the constants for the various possible shape paths.", "tags": "CLASS", "url": "exp/EscherShapePathProperty.html"},
                {"title": "org.apache.poi.ddf.EscherSpgrRecord", "text": "The spgr record defines information about a shape group.  Groups in escher are simply another form of shape that you can't physically see.", "tags": "CLASS", "url": "exp/EscherSpgrRecord.html"},
                {"title": "org.apache.poi.ddf.EscherSplitMenuColorsRecord", "text": "A list of the most recently used colours for the drawings contained in this document.", "tags": "CLASS", "url": "exp/EscherSplitMenuColorsRecord.html"},
                {"title": "org.apache.poi.ddf.EscherTertiaryOptRecord", "text": "\"The OfficeArtTertiaryFOPT record specifies a table of OfficeArtRGFOPTE properties, as defined in section 2.3.1.\" -- [MS-ODRAW] -- v20110608; Office Drawing Binary File Format", "tags": "CLASS", "url": "exp/EscherTertiaryOptRecord.html"},
                {"title": "org.apache.poi.ddf.EscherTextboxRecord", "text": "Holds data from the parent application", "tags": "CLASS", "url": "exp/EscherTextboxRecord.html"},
                {"title": "org.apache.poi.ddf.NullEscherSerializationListener", "text": "Ignores all serialization events.", "tags": "CLASS", "url": "exp/NullEscherSerializationListener.html"},
                {"title": "org.apache.poi.dev.RecordGenerator", "text": "Description of the Class", "tags": "CLASS", "url": "exp/RecordGenerator.html"},
                {"title": "org.apache.poi.EmptyFileException", "text": "Exception thrown if an Empty (zero byte) file is supplied", "tags": "CLASS", "url": "exp/EmptyFileException.html"},
                {"title": "org.apache.poi.extractor.OLE2ExtractorFactory", "text": "Figures out the correct POIOLE2TextExtractor for your supplied", "tags": "CLASS", "url": "exp/OLE2ExtractorFactory.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties", "text": "Maintains the instances of {@link CustomProperty} that belong to a", "tags": "CLASS", "url": "exp/CustomProperties.html"},
                {"title": "org.apache.poi.hpsf.CustomProperty", "text": "This class represents custom properties in the document summary", "tags": "CLASS", "url": "exp/CustomProperty.html"},
                {"title": "org.apache.poi.hpsf.extractor.HPSFPropertiesExtractor", "text": "Extracts all of the HPSF properties, both", "tags": "CLASS", "url": "exp/HPSFPropertiesExtractor.html"},
                {"title": "org.apache.poi.hpsf.IllegalPropertySetDataException", "text": "-1 (true)0 (false)", "tags": "CLASS", "url": "exp/IllegalPropertySetDataException.html"},
                {"title": "org.apache.poi.hpsf.NoFormatIDException", "text": "This exception is thrown if a {@link PropertySet} is to be written", "tags": "CLASS", "url": "exp/NoFormatIDException.html"},
                {"title": "org.apache.poi.hpsf.Property", "text": "A property in a {@link Section} of a {@link PropertySet}", "tags": "CLASS", "url": "exp/Property.html"},
                {"title": "org.apache.poi.hpsf.PropertySet", "text": "Represents a property set in the Horrible Property Set Format", "tags": "CLASS", "url": "exp/PropertySet.html"},
                {"title": "org.apache.poi.hpsf.PropertySetFactory", "text": "Factory class to create instances of {@link SummaryInformation}, {@link DocumentSummaryInformation} and {@link PropertySet}.", "tags": "CLASS", "url": "exp/PropertySetFactory.html"},
                {"title": "org.apache.poi.hpsf.Section", "text": "Represents a section in a {@link PropertySet}.", "tags": "CLASS", "url": "exp/Section.html"},
                {"title": "org.apache.poi.hpsf.Variant", "text": "Variant", "tags": "CLASS", "url": "exp/Variant.html"},
                {"title": "org.apache.poi.hpsf.VariantSupport", "text": "Supports reading and writing of variant data", "tags": "CLASS", "url": "exp/VariantSupport.html"},
                {"title": "org.apache.poi.hpsf.Vector", "text": "Holder for vector-type properties", "tags": "CLASS", "url": "exp/Vector.html"},
                {"title": "org.apache.poi.hpsf.wellknown.SectionIDMap", "text": "\005SummaryInformation\005DocumentSummaryInformation null", "tags": "CLASS", "url": "exp/SectionIDMap.html"},
                {"title": "org.apache.poi.hssf.dev.BiffDumpingStream", "text": "Wraps a plain {@link InputStream} and allows BIFF record information to be tapped off", "tags": "CLASS", "url": "exp/BiffDumpingStream.html"},
                {"title": "org.apache.poi.hssf.dev.RecordLister", "text": "This is a low-level debugging class, which simply prints", "tags": "CLASS", "url": "exp/RecordLister.html"},
                {"title": "org.apache.poi.hssf.dev.ReSave", "text": "Utility to test that POI produces readable output", "tags": "CLASS", "url": "exp/ReSave.html"},
                {"title": "org.apache.poi.hssf.eventmodel.EventRecordFactory", "text": "Event-based record factory", "tags": "CLASS", "url": "exp/EventRecordFactory.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.dummyrecord.MissingRowDummyRecord", "text": "A dummy record for when we're missing a row, but still want to trigger something", "tags": "CLASS", "url": "exp/MissingRowDummyRecord.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.SheetRecordCollectingListener", "text": "A wrapping HSSFListener which will collect", "tags": "CLASS", "url": "exp/SheetRecordCollectingListener.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.SheetRecordCollectingListener", "text": "When working with the EventUserModel, if you want to", "tags": "CLASS", "url": "exp/EventWorkbookBuilder.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener", "text": "A proxy HSSFListener that keeps track of the document formatting records, and", "tags": "CLASS", "url": "exp/FormatTrackingHSSFListener.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.MissingRecordAwareHSSFListener", "text": "<p>This allows your code to have a more \"Excel\" like", "tags": "CLASS", "url": "exp/MissingRecordAwareHSSFListener.html"},
                {"title": "org.apache.poi.hssf.extractor.OldExcelExtractor", "text": "A text extractor for old Excel files, which are too old for", "tags": "CLASS", "url": "exp/OldExcelExtractor.html"},
                {"title": "org.apache.poi.hssf.model.DrawingManager2", "text": "Provides utilities to manage drawing groups.", "tags": "CLASS", "url": "exp/DrawingManager2.html"},
                {"title": "org.apache.poi.hssf.model.HSSFFormulaParser", "text": "HSSF wrapper for the {@link FormulaParser} and {@link FormulaRenderer}", "tags": "CLASS", "url": "exp/HSSFFormulaParser.html"},
                {"title": "org.apache.poi.hssf.model.RecordOrderer", "text": "Finds correct insert positions for records in workbook streams<p> See OOO excelfileformat.pdf sec. 4.2.5 'Record Order in a BIFF8 Workbook Stream'", "tags": "CLASS", "url": "exp/RecordOrderer.html"},
                {"title": "org.apache.poi.hssf.model.RowBlocksReader", "text": "Segregates the 'Row Blocks' section of a single sheet into plain rowcell records and shared formula records.", "tags": "CLASS", "url": "exp/RowBlocksReader.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.ChartSubstreamRecordAggregate", "text": "Manages the all the records associated with a chart sub-stream.<p> Includes the initial {@link BOFRecord} and final {@link EOFRecord}.", "tags": "CLASS", "url": "exp/ChartSubstreamRecordAggregate.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.ConditionalFormattingTable", "text": "Holds all the conditional formatting for a workbook sheet.<p> See OOO exelfileformat.pdf sec 4.12 'Conditional Formatting Table'", "tags": "CLASS", "url": "exp/ConditionalFormattingTable.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CustomViewSettingsRecordAggregate", "text": "Manages the all the records associated with a 'Custom View Settings' sub-stream.<p> Includes the initial USERSVIEWBEGIN(0x01AA) and final USERSVIEWEND(0x01AB).", "tags": "CLASS", "url": "exp/CustomViewSettingsRecordAggregate.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.DataValidityTable", "text": "Manages the DVALRecord and DVRecords for a single sheet<p> See OOO excelfileformat.pdf section 4.14", "tags": "CLASS", "url": "exp/DataValidityTable.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate", "text": "The formula record aggregate is used to join together the formula record and it's (optional) string record and (optional) Shared Formula Record (template reads, excel optimization).", "tags": "CLASS", "url": "exp/FormulaRecordAggregate.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate", "text": "PLS is potentially a  record, but is currently uninterpreted by POI", "tags": "CLASS", "url": "exp/PLSAggregate.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate", "text": "Groups the page settings records for a worksheet.<p> See OOO excelfileformat.pdf sec 4.4 'Page Settings Block'", "tags": "CLASS", "url": "exp/PageSettingsBlock.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PositionTrackingVisitor", "text": "A wrapper for {@link RecordVisitor} which accumulates the sizes of all records visited.", "tags": "CLASS", "url": "exp/PositionTrackingVisitor.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PositionTrackingVisitor", "text": "s are groups of of BIFF s that are typically stored", "tags": "CLASS", "url": "exp/RecordAggregate.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.SharedFormulaGroup", "text": "Manages various auxiliary records while constructing a", "tags": "CLASS", "url": "exp/SharedValueManager.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.ValueIterator", "text": "iterator for CellValueRecordInterface", "tags": "CLASS", "url": "exp/ValueIterator.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.ValueIterator", "text": "Aggregate value records together.  Things are easier to handle that way.", "tags": "CLASS", "url": "exp/ValueRecordsAggregate.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.WorksheetProtectionBlock", "text": "Groups the sheet protection records for a worksheet", "tags": "CLASS", "url": "exp/WorksheetProtectionBlock.html"},
                {"title": "org.apache.poi.hssf.record.ArrayRecord", "text": "ARRAY (0x0221)<p> Treated in a similar way to SharedFormulaRecord", "tags": "CLASS", "url": "exp/ArrayRecord.html"},
                {"title": "org.apache.poi.hssf.record.BottomMarginRecord", "text": "Record for the bottom margin.", "tags": "CLASS", "url": "exp/BottomMarginRecord.html"},
                {"title": "org.apache.poi.hssf.record.CellRecord", "text": "Base class for all cell value records (implementors of {@link CellValueRecordInterface}). Subclasses are expected to manage the cell data values (of various types).", "tags": "CLASS", "url": "exp/CellRecord.html"},
                {"title": "org.apache.poi.hssf.record.CellValueRecordInterface", "text": "The cell value record interface is implemented by all classes of type Record that", "tags": "INTERFACE", "url": "exp/CellValueRecordInterface.html"},
                {"title": "org.apache.poi.hssf.record.cf.ColorGradientFormatting", "text": "Color Gradient  Color Scale Conditional Formatting Rule Record", "tags": "CLASS", "url": "exp/ColorGradientFormatting.html"},
                {"title": "org.apache.poi.hssf.record.cf.ColorGradientThreshold", "text": "Color Gradient  Color Scale specific Threshold  value (CFVO), for changes in Conditional Formatting", "tags": "CLASS", "url": "exp/ColorGradientThreshold.html"},
                {"title": "org.apache.poi.hssf.record.cf.DataBarFormatting", "text": "Data Bar Conditional Formatting Rule Record.", "tags": "CLASS", "url": "exp/DataBarFormatting.html"},
                {"title": "org.apache.poi.hssf.record.cf.DataBarThreshold", "text": "Data Bar specific Threshold  value (CFVO), for changes in Conditional Formatting", "tags": "CLASS", "url": "exp/DataBarThreshold.html"},
                {"title": "org.apache.poi.hssf.record.cf.IconMultiStateFormatting", "text": "Icon  Multi-State Conditional Formatting Rule Record.", "tags": "CLASS", "url": "exp/IconMultiStateFormatting.html"},
                {"title": "org.apache.poi.hssf.record.cf.IconMultiStateThreshold", "text": "Icon  Multi-State specific Threshold  value (CFVO), for changes in Conditional Formatting", "tags": "CLASS", "url": "exp/IconMultiStateThreshold.html"},
                {"title": "org.apache.poi.hssf.record.cf.Threshold", "text": "Threshold  value (CFVO) for changes in Conditional Formatting", "tags": "CLASS", "url": "exp/Threshold.html"},
                {"title": "org.apache.poi.hssf.record.CFHeader12Record", "text": "Conditional Formatting Header v12 record CFHEADER12 (0x0879), for conditional formattings introduced in Excel 2007 and newer.", "tags": "CLASS", "url": "exp/CFHeader12Record.html"},
                {"title": "org.apache.poi.hssf.record.CFHeaderBase", "text": "Parent of Conditional Formatting Header records, {@link CFHeaderRecord} and {@link CFHeader12Record}.", "tags": "CLASS", "url": "exp/CFHeaderBase.html"},
                {"title": "org.apache.poi.hssf.record.CFRule12Record", "text": "Conditional Formatting v12 Rule Record (0x087A)", "tags": "CLASS", "url": "exp/CFRule12Record.html"},
                {"title": "org.apache.poi.hssf.record.ComparisonOperator", "text": "Conditional Formatting Rules. This can hold old-style rules", "tags": "CLASS", "url": "exp/CFRuleBase.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord", "text": "The area format record is used to define the colours and patterns for an area.<p>", "tags": "CLASS", "url": "exp/AreaFormatRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaRecord", "text": "The area record is used to define a area chart.<p>", "tags": "CLASS", "url": "exp/AreaRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisLineFormatRecord", "text": "The axis line format record defines the axis type details.<p>", "tags": "CLASS", "url": "exp/AxisLineFormatRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord", "text": "The axis options record provides unit information and other various tidbits about the axis.<p>", "tags": "CLASS", "url": "exp/AxisOptionsRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisParentRecord", "text": "The axis size and location<p>", "tags": "CLASS", "url": "exp/AxisParentRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisRecord", "text": "The axis record defines the type of an axis.<p>", "tags": "CLASS", "url": "exp/AxisRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisUsedRecord", "text": "The number of axes used on a chart.<p>", "tags": "CLASS", "url": "exp/AxisUsedRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord", "text": "The bar record is used to define a bar chart.<p>", "tags": "CLASS", "url": "exp/BarRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.BeginRecord", "text": "The begin record defines the start of a block of records for a (grpahing data object. This record is matched with a corresponding EndRecord.", "tags": "CLASS", "url": "exp/BeginRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord", "text": "This record refers to a category or series axis and is used to specify labeltickmark frequency.<p>", "tags": "CLASS", "url": "exp/CategorySeriesAxisRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.CatLabRecord", "text": "CATLAB - Category Labels (0x0856)<br>", "tags": "CLASS", "url": "exp/CatLabRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartEndBlockRecord", "text": "ENDBLOCK - Chart Future Record Type End Block (0x0853)<br>", "tags": "CLASS", "url": "exp/ChartEndBlockRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartEndObjectRecord", "text": "ENDOBJECT - Chart Future Record Type End Object (0x0855)", "tags": "CLASS", "url": "exp/ChartEndObjectRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartFormatRecord", "text": "Class ChartFormatRecord (0x1014)<p>", "tags": "CLASS", "url": "exp/ChartFormatRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.CFRTID", "text": "CHARTFRTINFO - Chart Future Record Type Info (0x0850)", "tags": "CLASS", "url": "exp/ChartFRTInfoRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartRecord", "text": "CHART (0x1002)", "tags": "CLASS", "url": "exp/ChartRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartStartBlockRecord", "text": "STARTBLOCK - Chart Future Record Type Start Block (0x0852)", "tags": "CLASS", "url": "exp/ChartStartBlockRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartStartObjectRecord", "text": "STARTOBJECT - Chart Future Record Type Start Object (0x0854)", "tags": "CLASS", "url": "exp/ChartStartObjectRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.CTFormat", "text": "CHARTTITLEFORMAT (0x1050)<p> Describes the formatting runs associated with a chart title.", "tags": "CLASS", "url": "exp/ChartTitleFormatRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.DataFormatRecord", "text": "The data format record is used to index into a series.", "tags": "CLASS", "url": "exp/DataFormatRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.DataLabelExtensionRecord", "text": "DATALABEXT - Chart Data Label Extension (0x086A)", "tags": "CLASS", "url": "exp/DataLabelExtensionRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.DatRecord", "text": "The dat record is used to store options for the chart.", "tags": "CLASS", "url": "exp/DatRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.DefaultDataLabelTextPropertiesRecord", "text": "The default data label text properties record identifies the text characteristics of the preceding text record.", "tags": "CLASS", "url": "exp/DefaultDataLabelTextPropertiesRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontBasisRecord", "text": "The font basis record stores various font metrics.", "tags": "CLASS", "url": "exp/FontBasisRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontIndexRecord", "text": "The font index record indexes into the font table for the text record.<p>", "tags": "CLASS", "url": "exp/FontIndexRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.FrameRecord", "text": "The frame record indicates whether there is a border around the displayed text of a chart.", "tags": "CLASS", "url": "exp/FrameRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord", "text": "Defines a legend for a chart.", "tags": "CLASS", "url": "exp/LegendRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord", "text": "Describes a line format record.  The line format record controls how a line on a chart appears.", "tags": "CLASS", "url": "exp/LineFormatRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord", "text": "Describes a linked data record.  This record refers to the series data or text.", "tags": "CLASS", "url": "exp/LinkedDataRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.NumberFormatIndexRecord", "text": "The number format index record indexes format table. This applies to an axis.", "tags": "CLASS", "url": "exp/NumberFormatIndexRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.ObjectLinkRecord", "text": "Links text to an object on the chart or identifies it as the title.", "tags": "CLASS", "url": "exp/ObjectLinkRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.PlotAreaRecord", "text": "preceeds and identifies a frame as belonging to the plot area.", "tags": "CLASS", "url": "exp/PlotAreaRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.PlotGrowthRecord", "text": "The plot growth record specifies the scaling factors used when a font is scaled.", "tags": "CLASS", "url": "exp/PlotGrowthRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesChartGroupIndexRecord", "text": "The series chart group index record stores the index to the CHARTFORMAT record (0 based).", "tags": "CLASS", "url": "exp/SeriesChartGroupIndexRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesIndexRecord", "text": "links a series to its position in the series list.", "tags": "CLASS", "url": "exp/SeriesIndexRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord", "text": "The series label record defines the type of label associated with the data format record.<p>", "tags": "CLASS", "url": "exp/SeriesLabelsRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesListRecord", "text": "SERIESLIST (0x1016)", "tags": "CLASS", "url": "exp/SeriesListRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord", "text": "The series record describes the overall data for a series.", "tags": "CLASS", "url": "exp/SeriesRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesTextRecord", "text": "SERIESTEXT (0x100D)<p> Defines a series name", "tags": "CLASS", "url": "exp/SeriesTextRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesToChartGroupRecord", "text": "Indicates the chart-group index for a series", "tags": "CLASS", "url": "exp/SeriesToChartGroupRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord", "text": "Describes a chart sheet properties record", "tags": "CLASS", "url": "exp/SheetPropertiesRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord", "text": "The text record is used to define text stored on a chart.", "tags": "CLASS", "url": "exp/TextRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord", "text": "The Tick record defines how tick marks and label positioningformatting<p>", "tags": "CLASS", "url": "exp/TickRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.UnitsRecord", "text": "The units record describes units.", "tags": "CLASS", "url": "exp/UnitsRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord", "text": "The value range record defines the range of the value axis.", "tags": "CLASS", "url": "exp/ValueRangeRecord.html"},
                {"title": "org.apache.poi.hssf.record.ColumnInfoRecord", "text": "Title: COLINFO Record (0x007D) REFERENCE:  PG 293 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/ColumnInfoRecord.html"},
                {"title": "org.apache.poi.hssf.record.common.FeatFormulaErr2", "text": "Title: FeatFormulaErr2 (Formula Evaluation Shared Feature) common record part", "tags": "CLASS", "url": "exp/FeatFormulaErr2.html"},
                {"title": "org.apache.poi.hssf.record.common.FeatProtection", "text": "Title: FeatProtection (Protection Shared Feature) common record part", "tags": "CLASS", "url": "exp/FeatProtection.html"},
                {"title": "org.apache.poi.hssf.record.common.FeatSmartTag", "text": "Title: FeatSmartTag (Smart Tag Shared Feature) common record part", "tags": "CLASS", "url": "exp/FeatSmartTag.html"},
                {"title": "org.apache.poi.hssf.record.common.FtrHeader", "text": "Title: FtrHeader (Future Record Header) common record part", "tags": "CLASS", "url": "exp/FtrHeader.html"},
                {"title": "org.apache.poi.hssf.record.common.FutureRecord", "text": "Title: Future Record, a newer (largely Excel 2007+) record which contains a Future Record Header ({@link FtrHeader})", "tags": "INTERFACE", "url": "exp/FutureRecord.html"},
                {"title": "org.apache.poi.hssf.record.common.SharedFeature", "text": "Common Interface for all Shared Features", "tags": "INTERFACE", "url": "exp/SharedFeature.html"},
                {"title": "org.apache.poi.hssf.record.cont.ContinuableRecord", "text": "Common superclass of all records that can produce {@link ContinueRecord}s while being serialized.", "tags": "CLASS", "url": "exp/ContinuableRecord.html"},
                {"title": "org.apache.poi.hssf.record.cont.ContinuableRecordInput", "text": "A decorated {@link RecordInputStream} that can read primitive data types", "tags": "CLASS", "url": "exp/ContinuableRecordInput.html"},
                {"title": "org.apache.poi.hssf.record.cont.ContinuableRecordOutput", "text": "An augmented {@link LittleEndianOutput} used for serialization of {@link ContinuableRecord}s", "tags": "CLASS", "url": "exp/ContinuableRecordOutput.html"},
                {"title": "org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput", "text": "Allows the writing of BIFF records when the 'ushort size' header field is not known in advance", "tags": "CLASS", "url": "exp/UnknownLengthRecordOutput.html"},
                {"title": "org.apache.poi.hssf.record.ContinueRecord", "text": "Title:        Continue Record(0x003C) - Helper class used primarily for SST Records", "tags": "CLASS", "url": "exp/ContinueRecord.html"},
                {"title": "org.apache.poi.hssf.record.CRNCountRecord", "text": "XCT - CRN Count", "tags": "CLASS", "url": "exp/CRNCountRecord.html"},
                {"title": "org.apache.poi.hssf.record.CRNRecord", "text": "Title:       CRN(0x005A) REFERENCE:   OOO 5.23", "tags": "CLASS", "url": "exp/CRNRecord.html"},
                {"title": "org.apache.poi.hssf.record.Builder", "text": "Title:        DBCell Record (0x00D7) REFERENCE:  PG 299440 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/DBCellRecord.html"},
                {"title": "org.apache.poi.hssf.record.DConRefRecord", "text": "DConRef records specify a range in a workbook (internal or external) that serves as a data source", "tags": "CLASS", "url": "exp/DConRefRecord.html"},
                {"title": "org.apache.poi.hssf.record.DefaultColWidthRecord", "text": "Title:        Default Column Width Record (0x0055) REFERENCE:  PG 302 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)<P>", "tags": "CLASS", "url": "exp/DefaultColWidthRecord.html"},
                {"title": "org.apache.poi.hssf.record.DeltaRecord", "text": "Title:        Delta Record (0x0010) REFERENCE:  PG 303 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/DeltaRecord.html"},
                {"title": "org.apache.poi.hssf.record.DrawingRecord", "text": "DrawingRecord (0x00EC)", "tags": "CLASS", "url": "exp/DrawingRecord.html"},
                {"title": "org.apache.poi.hssf.record.DrawingRecordForBiffViewer", "text": "This is purely for the biff viewer.  During normal operations we don't want to be seeing this.", "tags": "CLASS", "url": "exp/DrawingRecordForBiffViewer.html"},
                {"title": "org.apache.poi.hssf.record.OfficeArtRecordHeader", "text": "From [MS-ODRAW].pdf sec 2.2.1<p> TODO - make EscherRecordHeader {@link LittleEndianInput} aware and refactor with this", "tags": "CLASS", "url": "exp/OfficeArtRecordHeader.html"},
                {"title": "org.apache.poi.hssf.record.OfficeArtRecordHeader", "text": "MsoDrawingSelection (0x00ED)<p>", "tags": "CLASS", "url": "exp/DrawingSelectionRecord.html"},
                {"title": "org.apache.poi.hssf.record.DSFRecord", "text": "Title: Double Stream Flag Record (0x0161)", "tags": "CLASS", "url": "exp/DSFRecord.html"},
                {"title": "org.apache.poi.hssf.record.DVALRecord", "text": "Title:        DATAVALIDATIONS Record (0x01B2)<p>", "tags": "CLASS", "url": "exp/DVALRecord.html"},
                {"title": "org.apache.poi.hssf.record.EmbeddedObjectRefSubRecord", "text": "ftPictFmla (0x0009)<p>", "tags": "CLASS", "url": "exp/EmbeddedObjectRefSubRecord.html"},
                {"title": "org.apache.poi.hssf.record.EOFRecord", "text": "End Of File record. REFERENCE:  PG 307 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)<P>", "tags": "CLASS", "url": "exp/EOFRecord.html"},
                {"title": "org.apache.poi.hssf.record.ExternalNameRecord", "text": "EXTERNALNAME (0x0023)", "tags": "CLASS", "url": "exp/ExternalNameRecord.html"},
                {"title": "org.apache.poi.hssf.record.RefSubRecord", "text": "EXTERNSHEET (0x0017)<p> A List of Indexes to  EXTERNALBOOK (supplemental book) Records", "tags": "CLASS", "url": "exp/ExternSheetRecord.html"},
                {"title": "org.apache.poi.hssf.record.InfoSubRecord", "text": "Title:        Extended Static String Table (0x00FF) REFERENCE:  PG 313 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/ExtSSTRecord.html"},
                {"title": "org.apache.poi.hssf.record.FeatHdrRecord", "text": "Title: FeatHdr (Feature Header) Record", "tags": "CLASS", "url": "exp/FeatHdrRecord.html"},
                {"title": "org.apache.poi.hssf.record.FeatRecord", "text": "Title: Feat (Feature) Record", "tags": "CLASS", "url": "exp/FeatRecord.html"},
                {"title": "org.apache.poi.hssf.record.FilePassRecord", "text": "Title: File Pass Record (0x002F) <p> Description: Indicates that the record after this record are encrypted.", "tags": "CLASS", "url": "exp/FilePassRecord.html"},
                {"title": "org.apache.poi.hssf.record.FileSharingRecord", "text": "Title:        FILESHARING (0x005B) REFERENCE:  PG 314 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/FileSharingRecord.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord", "text": "Title:        Font Record (0x0031)", "tags": "CLASS", "url": "exp/FontRecord.html"},
                {"title": "org.apache.poi.hssf.record.FooterRecord", "text": "Title:        Footer Record (0x0015) REFERENCE:  PG 317 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/FooterRecord.html"},
                {"title": "org.apache.poi.hssf.record.FormatRecord", "text": "Title:        Format Record (0x041E) REFERENCE:  PG 317 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/FormatRecord.html"},
                {"title": "org.apache.poi.hssf.record.SpecialCachedValue", "text": "Manages the cached formula result values of other types besides numeric", "tags": "CLASS", "url": "exp/SpecialCachedValue.html"},
                {"title": "org.apache.poi.hssf.record.FtCblsSubRecord", "text": "This structure appears as part of an Obj record that represents a checkbox or radio button.", "tags": "CLASS", "url": "exp/FtCblsSubRecord.html"},
                {"title": "org.apache.poi.hssf.record.FtCfSubRecord", "text": "The FtCf structure specifies the clipboard format of the picture-type Obj record containing this FtCf.", "tags": "CLASS", "url": "exp/FtCfSubRecord.html"},
                {"title": "org.apache.poi.hssf.record.FtPioGrbitSubRecord", "text": "This structure appears as part of an Obj record that represents image display properties.", "tags": "CLASS", "url": "exp/FtPioGrbitSubRecord.html"},
                {"title": "org.apache.poi.hssf.record.GroupMarkerSubRecord", "text": "ftGmo (0x0006)<p> The group marker record is used as a position holder for groups.", "tags": "CLASS", "url": "exp/GroupMarkerSubRecord.html"},
                {"title": "org.apache.poi.hssf.record.HCenterRecord", "text": "Title:        HCenter record (0x0083) REFERENCE:  PG 320 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)<P>", "tags": "CLASS", "url": "exp/HCenterRecord.html"},
                {"title": "org.apache.poi.hssf.record.HeaderFooterBase", "text": "Common headerfooter base class", "tags": "CLASS", "url": "exp/HeaderFooterBase.html"},
                {"title": "org.apache.poi.hssf.record.HeaderFooterRecord", "text": "The HEADERFOOTER record stores information added in Office Excel 2007 for headersfooters.", "tags": "CLASS", "url": "exp/HeaderFooterRecord.html"},
                {"title": "org.apache.poi.hssf.record.HeaderRecord", "text": "Title:        Header Record REFERENCE:  PG 321 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)<P>", "tags": "CLASS", "url": "exp/HeaderRecord.html"},
                {"title": "org.apache.poi.hssf.record.HorizontalPageBreakRecord", "text": "HorizontalPageBreak (0x001B) record that stores page breaks at rows", "tags": "CLASS", "url": "exp/HorizontalPageBreakRecord.html"},
                {"title": "org.apache.poi.hssf.record.IndexRecord", "text": "Title:        Index Record (0x020B) REFERENCE:  PG 323 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/IndexRecord.html"},
                {"title": "org.apache.poi.hssf.record.InterfaceEndRecord", "text": "Title: Interface End Record (0x00E2) REFERENCE:  PG 324 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)<P>", "tags": "CLASS", "url": "exp/InterfaceEndRecord.html"},
                {"title": "org.apache.poi.hssf.record.InterfaceHdrRecord", "text": "Title: Interface Header Record (0x00E1) REFERENCE:  PG 324 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)<P>", "tags": "CLASS", "url": "exp/InterfaceHdrRecord.html"},
                {"title": "org.apache.poi.hssf.record.IterationRecord", "text": "Title:        Iteration Record (0x0011) REFERENCE:  PG 325 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/IterationRecord.html"},
                {"title": "org.apache.poi.hssf.record.LbsDropData", "text": "This structure specifies properties of the dropdown list control", "tags": "CLASS", "url": "exp/LbsDropData.html"},
                {"title": "org.apache.poi.hssf.record.LbsDropData", "text": "This structure specifies the properties of a list or drop-down list embedded object in a sheet.", "tags": "CLASS", "url": "exp/LbsDataSubRecord.html"},
                {"title": "org.apache.poi.hssf.record.LeftMarginRecord", "text": "Record for the left margin.", "tags": "CLASS", "url": "exp/LeftMarginRecord.html"},
                {"title": "org.apache.poi.hssf.record.Margin", "text": "The margin interface is a parent used to define left, right, top and bottom margins. This allows much of the code to be generic when it comes to handling margins.", "tags": "INTERFACE", "url": "exp/Margin.html"},
                {"title": "org.apache.poi.hssf.record.MergeCellsRecord", "text": "Title: Merged Cells Record (0x00E5)<p> Description:  Optional record defining a square area of cells to \"merged\" into one cell.", "tags": "CLASS", "url": "exp/MergeCellsRecord.html"},
                {"title": "org.apache.poi.hssf.record.RkRec", "text": "MULRK (0x00BD) REFERENCE:  PG 330 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/MulRKRecord.html"},
                {"title": "org.apache.poi.hssf.record.NameCommentRecord", "text": "Title: NAMECMT Record (0x0894)<p> Description: Defines a comment associated with a specified name.", "tags": "CLASS", "url": "exp/NameCommentRecord.html"},
                {"title": "org.apache.poi.hssf.record.Option", "text": "Title:        DEFINEDNAME Record (0x0018)<p> Description:  Defines a named range within a workbook.", "tags": "CLASS", "url": "exp/NameRecord.html"},
                {"title": "org.apache.poi.hssf.record.NoteStructureSubRecord", "text": "ftNts (0x000D) The docs say nothing about it. The length of this record is always 26 bytes.", "tags": "CLASS", "url": "exp/NoteStructureSubRecord.html"},
                {"title": "org.apache.poi.hssf.record.OldCellRecord", "text": "Base class for all old (Biff 2 - Biff 4) cell value records", "tags": "CLASS", "url": "exp/OldCellRecord.html"},
                {"title": "org.apache.poi.hssf.record.OldFormulaRecord", "text": "Formula Record (0x0006  0x0206  0x0406) - holds a formula in encoded form, along with the value if a number", "tags": "CLASS", "url": "exp/OldFormulaRecord.html"},
                {"title": "org.apache.poi.hssf.record.OldLabelRecord", "text": "Biff2 - Biff 4 Label Record (0x0004  0x0204) - read only support for", "tags": "CLASS", "url": "exp/OldLabelRecord.html"},
                {"title": "org.apache.poi.hssf.record.OldSheetRecord", "text": "Title:        Bound Sheet Record (aka BundleSheet) (0x0085) for BIFF 5<P>", "tags": "CLASS", "url": "exp/OldSheetRecord.html"},
                {"title": "org.apache.poi.hssf.record.OldStringRecord", "text": "Biff2 - Biff 4 Label Record (0x0007  0x0207) - read only support for formula string results.", "tags": "CLASS", "url": "exp/OldStringRecord.html"},
                {"title": "org.apache.poi.hssf.record.PColor", "text": "PColor - element in the list of colors", "tags": "CLASS", "url": "exp/PColor.html"},
                {"title": "org.apache.poi.hssf.record.PColor", "text": "PaletteRecord (0x0092) - Supports custom palettes.", "tags": "CLASS", "url": "exp/PaletteRecord.html"},
                {"title": "org.apache.poi.hssf.record.PaneRecord", "text": "Describes the frozen and unfrozen panes.", "tags": "CLASS", "url": "exp/PaneRecord.html"},
                {"title": "org.apache.poi.hssf.record.PasswordRecord", "text": "Title:        Password Record (0x0013)<p>", "tags": "CLASS", "url": "exp/PasswordRecord.html"},
                {"title": "org.apache.poi.hssf.record.PasswordRev4Record", "text": "Title:        Protection Revision 4 password Record (0x01BC) REFERENCE:  PG 374 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/PasswordRev4Record.html"},
                {"title": "org.apache.poi.hssf.record.pivottable.DataItemRecord", "text": "SXDI - Data Item (0x00C5)<br>", "tags": "CLASS", "url": "exp/DataItemRecord.html"},
                {"title": "org.apache.poi.hssf.record.pivottable.ExtendedPivotTableViewFieldsRecord", "text": "SXVDEX - Extended PivotTable View Fields (0x0100)<br>", "tags": "CLASS", "url": "exp/ExtendedPivotTableViewFieldsRecord.html"},
                {"title": "org.apache.poi.hssf.record.pivottable.FieldInfo", "text": "SXPI - Page Item (0x00B6)<br>", "tags": "CLASS", "url": "exp/PageItemRecord.html"},
                {"title": "org.apache.poi.hssf.record.pivottable.StreamIDRecord", "text": "SXIDSTM - Stream ID (0x00D5)<br>", "tags": "CLASS", "url": "exp/StreamIDRecord.html"},
                {"title": "org.apache.poi.hssf.record.pivottable.ViewDefinitionRecord", "text": "SXVIEW - View Definition (0x00B0)<br>", "tags": "CLASS", "url": "exp/ViewDefinitionRecord.html"},
                {"title": "org.apache.poi.hssf.record.pivottable.Axis", "text": "values for the {@link ViewFieldsRecord#_sxaxis} field", "tags": "CLASS", "url": "exp/Axis.html"},
                {"title": "org.apache.poi.hssf.record.pivottable.Axis", "text": "SXVD - View Fields (0x00B1)<br>", "tags": "CLASS", "url": "exp/ViewFieldsRecord.html"},
                {"title": "org.apache.poi.hssf.record.pivottable.ViewSourceRecord", "text": "SXVS - View Source (0x00E3)<br>", "tags": "CLASS", "url": "exp/ViewSourceRecord.html"},
                {"title": "org.apache.poi.hssf.record.PrintSetupRecord", "text": "Title:        PAGESETUP (0x00A1)", "tags": "CLASS", "url": "exp/PrintSetupRecord.html"},
                {"title": "org.apache.poi.hssf.record.ProtectionRev4Record", "text": "Title:        Protection Revision 4 Record (0x01AF) REFERENCE:  PG 373 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/ProtectionRev4Record.html"},
                {"title": "org.apache.poi.hssf.record.ProtectRecord", "text": "Title: Protect Record (0x0012)", "tags": "CLASS", "url": "exp/ProtectRecord.html"},
                {"title": "org.apache.poi.hssf.record.RecalcIdRecord", "text": "Title: Recalc Id Record (0x01C1) REFERENCE:  http:chicago.sourceforge.netdeveldocsexcelbiff8.html", "tags": "CLASS", "url": "exp/RecalcIdRecord.html"},
                {"title": "org.apache.poi.hssf.record.RecordBase", "text": "Common base class of {@link Record} and {@link org.apache.poi.hssf.record.aggregates.RecordAggregate}", "tags": "CLASS", "url": "exp/RecordBase.html"},
                {"title": "org.apache.poi.hssf.record.ReflectionMethodRecordCreator", "text": "A \"create\" method is used instead of the usual constructor if the created record might be of a different class to the declaring class.", "tags": "CLASS", "url": "exp/ReflectionMethodRecordCreator.html"},
                {"title": "org.apache.poi.hssf.record.StreamEncryptionInfo", "text": "Keeps track of the sizes of the initial records up to and including {@link FilePassRecord}", "tags": "CLASS", "url": "exp/StreamEncryptionInfo.html"},
                {"title": "org.apache.poi.hssf.record.LeftoverDataException", "text": "For use in {@link BiffViewer} which may construct {@link Record}s that don't completely read all available data.  This exception should never be thrown otherwise.", "tags": "CLASS", "url": "exp/LeftoverDataException.html"},
                {"title": "org.apache.poi.hssf.record.RightMarginRecord", "text": "Record for the right margin.", "tags": "CLASS", "url": "exp/RightMarginRecord.html"},
                {"title": "org.apache.poi.hssf.record.SCLRecord", "text": "Specifies the window's zoom magnification.<p> If this record isn't present then the windows zoom is 100%. see p384 Excel Dev Kit", "tags": "CLASS", "url": "exp/SCLRecord.html"},
                {"title": "org.apache.poi.hssf.record.SelectionRecord", "text": "Title:        Selection Record (0x001D) REFERENCE:  PG 291 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/SelectionRecord.html"},
                {"title": "org.apache.poi.hssf.record.SharedFormulaRecord", "text": "Title:        SHAREDFMLA (0x04BC) SharedFormulaRecord", "tags": "CLASS", "url": "exp/SharedFormulaRecord.html"},
                {"title": "org.apache.poi.hssf.record.SharedValueRecordBase", "text": "Common base class for {@link SharedFormulaRecord}, {@link ArrayRecord} and {@link TableRecord} which are have similarities.", "tags": "CLASS", "url": "exp/SharedValueRecordBase.html"},
                {"title": "org.apache.poi.hssf.record.SSTDeserializer", "text": "Handles the task of deserializing a SST string.  The two main entry points are", "tags": "CLASS", "url": "exp/SSTDeserializer.html"},
                {"title": "org.apache.poi.hssf.record.SSTSerializer", "text": "This class handles serialization of SST records.  It utilizes the record processor class write individual records. This has been refactored from the SSTRecord class.", "tags": "CLASS", "url": "exp/SSTSerializer.html"},
                {"title": "org.apache.poi.hssf.record.StandardRecord", "text": "Subclasses of this class (the majority of BIFF records) are non-continuable.  This allows for some simplification of serialization logic", "tags": "CLASS", "url": "exp/StandardRecord.html"},
                {"title": "org.apache.poi.hssf.record.SupBookRecord", "text": "Title:        Sup Book - EXTERNALBOOK (0x01AE) REFERENCE:  5.38", "tags": "CLASS", "url": "exp/SupBookRecord.html"},
                {"title": "org.apache.poi.hssf.record.TabIdRecord", "text": "Title: Sheet Tab Index Array Record (0x013D) REFERENCE:  PG 412 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/TabIdRecord.html"},
                {"title": "org.apache.poi.hssf.record.TableRecord", "text": "DATATABLE (0x0236)<p>", "tags": "CLASS", "url": "exp/TableRecord.html"},
                {"title": "org.apache.poi.hssf.record.TableStylesRecord", "text": "TABLESTYLES (0x088E)", "tags": "CLASS", "url": "exp/TableStylesRecord.html"},
                {"title": "org.apache.poi.hssf.record.TopMarginRecord", "text": "Record for the top margin.", "tags": "CLASS", "url": "exp/TopMarginRecord.html"},
                {"title": "org.apache.poi.hssf.record.UncalcedRecord", "text": "Title: Uncalced Record", "tags": "CLASS", "url": "exp/UncalcedRecord.html"},
                {"title": "org.apache.poi.hssf.record.UnknownRecord", "text": "Title:        Unknown Record (for debugging) Company:      SuperLink Software, Inc.", "tags": "CLASS", "url": "exp/UnknownRecord.html"},
                {"title": "org.apache.poi.hssf.record.UserSViewBegin", "text": "The UserSViewBegin record specifies settings for a custom view associated with the sheet", "tags": "CLASS", "url": "exp/UserSViewBegin.html"},
                {"title": "org.apache.poi.hssf.record.UserSViewEnd", "text": "The UserSViewEnd record marks the end of the settings for a custom view associated with the sheet", "tags": "CLASS", "url": "exp/UserSViewEnd.html"},
                {"title": "org.apache.poi.hssf.record.UseSelFSRecord", "text": "Title:        USESELFS (0x0160) - Use Natural Language Formulas Flag REFERENCE:  PG 420 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/UseSelFSRecord.html"},
                {"title": "org.apache.poi.hssf.record.VerticalPageBreakRecord", "text": "VerticalPageBreak (0x001A) record that stores page breaks at columns", "tags": "CLASS", "url": "exp/VerticalPageBreakRecord.html"},
                {"title": "org.apache.poi.hssf.record.WindowOneRecord", "text": "Title:        Window1 Record REFERENCE:  PG 421 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)<P>", "tags": "CLASS", "url": "exp/WindowOneRecord.html"},
                {"title": "org.apache.poi.hssf.record.WindowProtectRecord", "text": "Title: Window Protect Record (0x0019) REFERENCE:  PG 424 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/WindowProtectRecord.html"},
                {"title": "org.apache.poi.hssf.record.WindowTwoRecord", "text": "Title:        Window Two Record REFERENCE:  PG 422 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)<P>", "tags": "CLASS", "url": "exp/WindowTwoRecord.html"},
                {"title": "org.apache.poi.hssf.record.WriteProtectRecord", "text": "Title:        Write Protect Record", "tags": "CLASS", "url": "exp/WriteProtectRecord.html"},
                {"title": "org.apache.poi.hssf.record.WSBoolRecord", "text": "Title:        WSBOOL (0x0081) (called SHEETPR in OOO doc) REFERENCE:  PG 425 Microsoft Excel 97 Developer's Kit (ISBN: 1-57231-498-2)", "tags": "CLASS", "url": "exp/WSBoolRecord.html"},
                {"title": "org.apache.poi.hssf.usermodel.EscherGraphics", "text": "Translates Graphics calls into escher calls", "tags": "CLASS", "url": "exp/EscherGraphics.html"},
                {"title": "org.apache.poi.hssf.usermodel.EscherGraphics2d", "text": "Translates Graphics2d calls into escher calls", "tags": "CLASS", "url": "exp/EscherGraphics2d.html"},
                {"title": "org.apache.poi.hssf.usermodel.FontDetails", "text": "Stores width and height details about a font.", "tags": "CLASS", "url": "exp/FontDetails.html"},
                {"title": "org.apache.poi.hssf.usermodel.helpers.HSSFRowShifter", "text": "Helper for shifting rows up or down When possible, code should be implemented in the RowShifter abstract class to avoid duplication with {@link org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter}", "tags": "CLASS", "url": "exp/HSSFRowShifter.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFAutoFilter", "text": "Represents autofiltering for the specified worksheet.", "tags": "CLASS", "url": "exp/HSSFAutoFilter.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFBorderFormatting", "text": "High level representation for Border Formatting component of Conditional Formatting settings", "tags": "CLASS", "url": "exp/HSSFBorderFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFConditionalFormattingThreshold", "text": "High level representation for Icon  Multi-State  Databar Colour Scale change thresholds", "tags": "CLASS", "url": "exp/HSSFConditionalFormattingThreshold.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFDataBarFormatting", "text": "High level representation for DataBar  Data-Bar Formatting component of Conditional Formatting settings", "tags": "CLASS", "url": "exp/HSSFDataBarFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFDataValidationHelper", "text": "Helper for working with Data Validation", "tags": "CLASS", "url": "exp/HSSFDataValidationHelper.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFEvaluationCell", "text": "HSSF wrapper for a cell under evaluation", "tags": "CLASS", "url": "exp/HSSFEvaluationCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFEvaluationSheet", "text": "HSSF wrapper for a sheet under evaluation", "tags": "CLASS", "url": "exp/HSSFEvaluationSheet.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFExtendedColor", "text": "The HSSF file format normally stores Color information in the", "tags": "CLASS", "url": "exp/HSSFExtendedColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFIconMultiStateFormatting", "text": "High level representation for Icon  Multi-State Formatting component of Conditional Formatting settings", "tags": "CLASS", "url": "exp/HSSFIconMultiStateFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFName", "text": "High Level Representation of a 'defined name' which could be a 'built-in' name, 'named range' or name of a user defined function.", "tags": "CLASS", "url": "exp/HSSFName.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeContainer", "text": "An interface that indicates whether a class can contain children.", "tags": "INTERFACE", "url": "exp/HSSFShapeContainer.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeFactory", "text": "Factory class for producing Excel Shapes from Escher records", "tags": "CLASS", "url": "exp/HSSFShapeFactory.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup", "text": "A shape group may contain other shapes.  It was no actual form on the sheet.", "tags": "CLASS", "url": "exp/HSSFShapeGroup.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector", "text": "Totals the sizes of all sheet records and eventually serializes them", "tags": "CLASS", "url": "exp/SheetRecordCollector.html"},
                {"title": "org.apache.poi.hssf.usermodel.StaticFontMetrics", "text": "Allows the user to lookup the font metrics for a particular font without", "tags": "CLASS", "url": "exp/StaticFontMetrics.html"},
                {"title": "org.apache.poi.hssf.util.CellRangeAddress8Bit", "text": "See OOO documentation: excelfileformat.pdf sec 2.5.14 - 'Cell Range Address'<p> Implements a CellRangeAddress with 8-but column fields.", "tags": "CLASS", "url": "exp/CellRangeAddress8Bit.html"},
                {"title": "org.apache.poi.hssf.util.LazilyConcatenatedByteArray", "text": "Utility for delaying the concatenation of multiple byte arrays", "tags": "CLASS", "url": "exp/LazilyConcatenatedByteArray.html"},
                {"title": "org.apache.poi.hssf.util.RKUtil", "text": "Utility class for helping convert RK numbers.", "tags": "CLASS", "url": "exp/RKUtil.html"},
                {"title": "org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDocumentInputStream", "text": "A seekable InputStream, which is used to decryptextract the document entries within the encrypted stream", "tags": "CLASS", "url": "exp/CryptoAPIDocumentInputStream.html"},
                {"title": "org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDocumentOutputStream", "text": "An OutputStream for the document entries within the encrypted stream", "tags": "CLASS", "url": "exp/CryptoAPIDocumentOutputStream.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions", "text": "Helper functions used for standard and agile encryption", "tags": "CLASS", "url": "exp/CryptoFunctions.html"},
                {"title": "org.apache.poi.poifs.crypt.EncryptionHeader", "text": "Reads and processes OOXML Encryption Headers The constants are largely based on ZIP constants.", "tags": "CLASS", "url": "exp/EncryptionHeader.html"},
                {"title": "org.apache.poi.poifs.crypt.EncryptionVerifier", "text": "Used when checking if a key is valid for a document", "tags": "CLASS", "url": "exp/EncryptionVerifier.html"},
                {"title": "org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier", "text": "Used when checking if a key is valid for a document", "tags": "CLASS", "url": "exp/StandardEncryptionVerifier.html"},
                {"title": "org.apache.poi.poifs.dev.POIFSDump", "text": "Dump internal structure of a OLE2 file into file system", "tags": "CLASS", "url": "exp/POIFSDump.html"},
                {"title": "org.apache.poi.poifs.dev.POIFSHeaderDumper", "text": "A very low level debugging tool, for printing out core", "tags": "CLASS", "url": "exp/POIFSHeaderDumper.html"},
                {"title": "org.apache.poi.poifs.filesystem.ChainLoopDetector", "text": "Used to detect if a chain has a loop in it, so", "tags": "CLASS", "url": "exp/ChainLoopDetector.html"},
                {"title": "org.apache.poi.poifs.filesystem.ChainLoopDetector", "text": "This abstract class describes a way to read, store, chain and free a series of blocks (be they Big or Small ones)", "tags": "CLASS", "url": "exp/BlockStore.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentFactoryHelper", "text": "A small base class for the various factories, e.g. WorkbookFactory, SlideShowFactory to combine common code here.", "tags": "CLASS", "url": "exp/DocumentFactoryHelper.html"},
                {"title": "org.apache.poi.poifs.filesystem.FilteringIterator", "text": "A DirectoryEntry filter, which exposes another", "tags": "CLASS", "url": "exp/FilteringDirectoryNode.html"},
                {"title": "org.apache.poi.poifs.filesystem.NotOLE2FileException", "text": "This exception is thrown when we try to open a file that doesn't seem to actually be an OLE2 file after all", "tags": "CLASS", "url": "exp/NotOLE2FileException.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSDocument", "text": "This class manages a document in the NIO POIFS filesystem. This is the {@link NPOIFSFileSystem} version.", "tags": "CLASS", "url": "exp/NPOIFSDocument.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSMiniStore", "text": "This class handles the MiniStream (small block store) in the NIO case for {@link NPOIFSFileSystem}", "tags": "CLASS", "url": "exp/NPOIFSMiniStore.html"},
                {"title": "org.apache.poi.poifs.filesystem.StreamBlockByteBufferIterator", "text": "Class that handles a streaming read of one stream", "tags": "CLASS", "url": "exp/StreamBlockByteBufferIterator.html"},
                {"title": "org.apache.poi.poifs.filesystem.ODocumentInputStream", "text": "This class provides methods to read a DocumentEntry managed by a {@link OPOIFSFileSystem} instance.", "tags": "CLASS", "url": "exp/ODocumentInputStream.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native", "text": "Represents an Ole10Native record which is wrapped around certain binary files being embedded in OLE2 documents.", "tags": "CLASS", "url": "exp/Ole10Native.html"},
                {"title": "org.apache.poi.poifs.filesystem.BigBlockStore", "text": "This class manages a document in a old-style OPOIFS filesystem.", "tags": "CLASS", "url": "exp/OPOIFSDocument.html"},
                {"title": "org.apache.poi.poifs.macros.VBAMacroExtractor", "text": "This tool extracts out the source of all VBA Modules of an office file, both OOXML (eg XLSM) and OLE2POIFS (eg DOC), to STDOUT or a directory.", "tags": "CLASS", "url": "exp/VBAMacroExtractor.html"},
                {"title": "org.apache.poi.poifs.macros.ModuleMap", "text": "NOTE:", "tags": "CLASS", "url": "exp/VBAMacroReader.html"},
                {"title": "org.apache.poi.poifs.nio.ByteArrayBackedDataSource", "text": "A POIFS {@link DataSource} backed by a byte array.", "tags": "CLASS", "url": "exp/ByteArrayBackedDataSource.html"},
                {"title": "org.apache.poi.poifs.nio.DataSource", "text": "Common definition of how we read and write bytes", "tags": "CLASS", "url": "exp/DataSource.html"},
                {"title": "org.apache.poi.poifs.nio.FileBackedDataSource", "text": "A POIFS {@link DataSource} backed by a File", "tags": "CLASS", "url": "exp/FileBackedDataSource.html"},
                {"title": "org.apache.poi.poifs.property.PropertyComparator", "text": "Directory property", "tags": "CLASS", "url": "exp/DirectoryProperty.html"},
                {"title": "org.apache.poi.poifs.property.DocumentProperty", "text": "Trivial extension of Property for POIFSDocuments", "tags": "CLASS", "url": "exp/DocumentProperty.html"},
                {"title": "org.apache.poi.poifs.property.NPropertyTable", "text": "This class embodies the Property Table for a {@link NPOIFSFileSystem};", "tags": "CLASS", "url": "exp/NPropertyTable.html"},
                {"title": "org.apache.poi.poifs.property.Parent", "text": "Behavior for parent (directory) properties", "tags": "INTERFACE", "url": "exp/Parent.html"},
                {"title": "org.apache.poi.poifs.property.PropertyTable", "text": "This class embodies the Property Table for the {@link org", "tags": "CLASS", "url": "exp/PropertyTable.html"},
                {"title": "org.apache.poi.poifs.property.PropertyTableBase", "text": "This class embodies the Property Table for the filesystem,", "tags": "CLASS", "url": "exp/PropertyTableBase.html"},
                {"title": "org.apache.poi.poifs.property.RootProperty", "text": "Root property", "tags": "CLASS", "url": "exp/RootProperty.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlockAndIndex", "text": "A block of block allocation table entries. BATBlocks are created only through a static factory method: createBATBlocks.", "tags": "CLASS", "url": "exp/BATBlock.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableReader", "text": "This class manages and creates the Block Allocation Table, which is", "tags": "CLASS", "url": "exp/BlockAllocationTableReader.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableWriter", "text": "This class manages and creates the Block Allocation Table, which is", "tags": "CLASS", "url": "exp/BlockAllocationTableWriter.html"},
                {"title": "org.apache.poi.poifs.storage.BlockListImpl", "text": "A simple implementation of BlockList", "tags": "CLASS", "url": "exp/BlockListImpl.html"},
                {"title": "org.apache.poi.poifs.storage.DataInputBlock", "text": "Wraps a  array and provides simple data input access", "tags": "CLASS", "url": "exp/DataInputBlock.html"},
                {"title": "org.apache.poi.poifs.storage.DocumentBlock", "text": "A block of document data.", "tags": "CLASS", "url": "exp/DocumentBlock.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlockConstants", "text": "Constants used in readingwriting the Header block", "tags": "INTERFACE", "url": "exp/HeaderBlockConstants.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlockWriter", "text": "The block containing the archive header", "tags": "CLASS", "url": "exp/HeaderBlockWriter.html"},
                {"title": "org.apache.poi.poifs.storage.PropertyBlock", "text": "A block of Property instances", "tags": "CLASS", "url": "exp/PropertyBlock.html"},
                {"title": "org.apache.poi.poifs.storage.SmallBlockTableReader", "text": "This class implements reading the small document block list from an existing file", "tags": "CLASS", "url": "exp/SmallBlockTableReader.html"},
                {"title": "org.apache.poi.poifs.storage.SmallDocumentBlock", "text": "Storage for documents that are too small to use regular DocumentBlocks for their data", "tags": "CLASS", "url": "exp/SmallDocumentBlock.html"},
                {"title": "org.apache.poi.poifs.storage.SmallDocumentBlockList", "text": "A list of SmallDocumentBlocks instances, and methods to manage the list", "tags": "CLASS", "url": "exp/SmallDocumentBlockList.html"},
                {"title": "org.apache.poi.POIOLE2TextExtractor", "text": "Common Parent for OLE2 based Text Extractors", "tags": "CLASS", "url": "exp/POIOLE2TextExtractor.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTAdjPoint2D", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTAdjPoint2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTAdjustHandleList", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTAdjustHandleList.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTAngle", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTAngle.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColorMRU", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTColorMRU.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTComplementTransform", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTComplementTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTConnectionSite", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTConnectionSite.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTConnectionSiteList", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTConnectionSiteList.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTCustomGeometry2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTEmbeddedWAVAudioFile", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTEmbeddedWAVAudioFile.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTFixedPercentage", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTFixedPercentage.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGammaTransform", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTGammaTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomGuide", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTGeomGuide.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomGuideList", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTGeomGuideList.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomRect", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTGeomRect.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGrayscaleTransform", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTGrayscaleTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTGroupTransform2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHslColor", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTHslColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTInverseGammaTransform", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTInverseGammaTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTInverseTransform", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTInverseTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2D", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPath2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DArcTo", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPath2DArcTo.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DClose", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPath2DClose.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DCubicBezierTo", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPath2DCubicBezierTo.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DLineTo", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPath2DLineTo.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DList", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPath2DList.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DMoveTo", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPath2DMoveTo.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DQuadBezierTo", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPath2DQuadBezierTo.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPercentage", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPercentage.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPoint2D", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPoint2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPoint3D", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPoint3D.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPolarAdjustHandle.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositiveFixedAngle", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPositiveFixedAngle.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositiveFixedPercentage", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPositiveFixedPercentage.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositivePercentage", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPositivePercentage.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositiveSize2D", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPositiveSize2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetColor", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPresetColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetGeometry2D", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPresetGeometry2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetTextShape", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTPresetTextShape.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRatio", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTRatio.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScale2D", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTScale2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSchemeColor", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTSchemeColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScRgbColor", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTScRgbColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSphereCoords", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTSphereCoords.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSRgbColor", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTSRgbColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSystemColor", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTSystemColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTTransform2D", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTTransform2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTVector3D", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTVector3D.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle", "text": "The following schema fragment specifies the expected content contained within this class", "tags": "CLASS", "url": "exp/CTXYAdjustHandle.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory", "text": "This object contains factory methods for each", "tags": "CLASS", "url": "exp/ObjectFactory.html"},
                {"title": "org.apache.poi.sl.draw.BitmapImageRenderer", "text": "For now this class renders only images supported by the javax.imageio.ImageIO framework.", "tags": "CLASS", "url": "exp/BitmapImageRenderer.html"},
                {"title": "org.apache.poi.sl.draw.DrawFontManager", "text": "Manages fonts when rendering slides. Use this class to handle unknown  missing fonts or to substitute fonts", "tags": "INTERFACE", "url": "exp/DrawFontManager.html"},
                {"title": "org.apache.poi.sl.draw.SimpleSolidPaint", "text": "This class handles color transformations.", "tags": "CLASS", "url": "exp/DrawPaint.html"},
                {"title": "org.apache.poi.sl.draw.XlinkAttribute", "text": "Defines an attribute used for storing the hyperlink associated with some renderable text.", "tags": "CLASS", "url": "exp/XlinkAttribute.html"},
                {"title": "org.apache.poi.sl.draw.geom.AbsExpression", "text": "Absolute Value Formula", "tags": "CLASS", "url": "exp/AbsExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.AddDivideExpression", "text": "Add Divide Formula", "tags": "CLASS", "url": "exp/AddDivideExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.AddSubtractExpression", "text": "Add Subtract Formula", "tags": "CLASS", "url": "exp/AddSubtractExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.AdjustValue", "text": "Represents a shape adjust values (see section 20.1.9.5 in the spec)", "tags": "CLASS", "url": "exp/AdjustValue.html"},
                {"title": "org.apache.poi.sl.draw.geom.ArcTanExpression", "text": "Date: 102411", "tags": "CLASS", "url": "exp/ArcTanExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.ArcToCommand", "text": "ArcTo command within a shape path in DrawingML: wrwhstart is the swing angle", "tags": "CLASS", "url": "exp/ArcToCommand.html"},
                {"title": "org.apache.poi.sl.draw.geom.ClosePathCommand", "text": "Date: 102511", "tags": "CLASS", "url": "exp/ClosePathCommand.html"},
                {"title": "org.apache.poi.sl.draw.geom.Context", "text": "Date: 102411", "tags": "CLASS", "url": "exp/Context.html"},
                {"title": "org.apache.poi.sl.draw.geom.CosExpression", "text": "Date: 102411", "tags": "CLASS", "url": "exp/CosExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.CosineArcTanExpression", "text": "Date: 102411", "tags": "CLASS", "url": "exp/CosineArcTanExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.CurveToCommand", "text": "Date: 102511", "tags": "CLASS", "url": "exp/CurveToCommand.html"},
                {"title": "org.apache.poi.sl.draw.geom.CustomGeometry", "text": "Definition of a custom geometric shape", "tags": "CLASS", "url": "exp/CustomGeometry.html"},
                {"title": "org.apache.poi.sl.draw.geom.Expression", "text": "Date: 102411", "tags": "INTERFACE", "url": "exp/Expression.html"},
                {"title": "org.apache.poi.sl.draw.geom.ExpressionEntry", "text": "A simple regexp-based parser of shape guide formulas in DrawingML", "tags": "CLASS", "url": "exp/ExpressionParser.html"},
                {"title": "org.apache.poi.sl.draw.geom.IAdjustableShape", "text": "A bridge to the consumer application. To get a shape geometry one needs to pass shape bounds and adjust values.", "tags": "INTERFACE", "url": "exp/IAdjustableShape.html"},
                {"title": "org.apache.poi.sl.draw.geom.IfElseExpression", "text": "If Else Formula:", "tags": "CLASS", "url": "exp/IfElseExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.LineToCommand", "text": "Date: 102511", "tags": "CLASS", "url": "exp/LineToCommand.html"},
                {"title": "org.apache.poi.sl.draw.geom.LiteralValueExpression", "text": "Date: 102411", "tags": "CLASS", "url": "exp/LiteralValueExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.MaxExpression", "text": "Maximum Value Formula", "tags": "CLASS", "url": "exp/MaxExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.MinExpression", "text": "Minimum Value Formula", "tags": "CLASS", "url": "exp/MinExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.ModExpression", "text": "Modulo Formula:", "tags": "CLASS", "url": "exp/ModExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.MoveToCommand", "text": "Date: 102511", "tags": "CLASS", "url": "exp/MoveToCommand.html"},
                {"title": "org.apache.poi.sl.draw.geom.MultiplyDivideExpression", "text": "Multiply Divide Formula", "tags": "CLASS", "url": "exp/MultiplyDivideExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.PathCommand", "text": "A path command in DrawingML", "tags": "INTERFACE", "url": "exp/PathCommand.html"},
                {"title": "org.apache.poi.sl.draw.geom.PinExpression", "text": "Pin To Formula: Usage: \"pin x y z\" = if (y", "tags": "CLASS", "url": "exp/PinExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.QuadToCommand", "text": "Date: 102511", "tags": "CLASS", "url": "exp/QuadToCommand.html"},
                {"title": "org.apache.poi.sl.draw.geom.SinArcTanExpression", "text": "Sine ArcTan Formula:", "tags": "CLASS", "url": "exp/SinArcTanExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.SinExpression", "text": "Sine Formula:", "tags": "CLASS", "url": "exp/SinExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.SqrtExpression", "text": "Square Root Formula:", "tags": "CLASS", "url": "exp/SqrtExpression.html"},
                {"title": "org.apache.poi.sl.draw.geom.TanExpression", "text": "Tangent Formula:", "tags": "CLASS", "url": "exp/TanExpression.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics", "text": "Translates Graphics2D calls into PowerPoint.", "tags": "CLASS", "url": "exp/SLGraphics.html"},
                {"title": "org.apache.poi.sl.image.ImageHeaderWMF", "text": "Aldus Placeable Metafile header - 22 byte structure before WMF data", "tags": "CLASS", "url": "exp/ImageHeaderWMF.html"},
                {"title": "org.apache.poi.sl.usermodel.Insets2D", "text": "This is a replacement for {@link java.awt.Insets} which works on doubles instead of ints", "tags": "CLASS", "url": "exp/Insets2D.html"},
                {"title": "org.apache.poi.sl.usermodel.Resources", "text": "Common SlideShow resources, such as fonts, pictures and multimedia data", "tags": "INTERFACE", "url": "exp/Resources.html"},
                {"title": "org.apache.poi.sl.usermodel.TextBox", "text": "Represents a TextFrame shape in PowerPoint.", "tags": "INTERFACE", "url": "exp/TextBox.html"},
                {"title": "org.apache.poi.ss.format.ElapsedPartHandler", "text": "This class implements printing out an elapsed time format.", "tags": "CLASS", "url": "exp/CellElapsedFormatter.html"},
                {"title": "org.apache.poi.ss.format.CellFormatCondition", "text": "This object represents a condition in a cell format.", "tags": "CLASS", "url": "exp/CellFormatCondition.html"},
                {"title": "org.apache.poi.ss.format.PartHandler", "text": "Objects of this class represent a single part of a cell format expression", "tags": "CLASS", "url": "exp/CellFormatPart.html"},
                {"title": "org.apache.poi.ss.format.CellFormatResult", "text": "This object contains the result of applying a cell format or cell format part to a value.", "tags": "CLASS", "url": "exp/CellFormatResult.html"},
                {"title": "org.apache.poi.ss.format.CellFormatter", "text": "This is the abstract supertype for the various cell formatters.", "tags": "CLASS", "url": "exp/CellFormatter.html"},
                {"title": "org.apache.poi.ss.format.CellGeneralFormatter", "text": "A formatter for the default \"General\" cell format.", "tags": "CLASS", "url": "exp/CellGeneralFormatter.html"},
                {"title": "org.apache.poi.ss.format.Special", "text": "This class implements printing out a value using a number format.", "tags": "CLASS", "url": "exp/CellNumberFormatter.html"},
                {"title": "org.apache.poi.ss.format.CellNumberPartHandler", "text": "Internal helper class for CellNumberFormatter", "tags": "CLASS", "url": "exp/CellNumberPartHandler.html"},
                {"title": "org.apache.poi.ss.format.CellNumberStringMod", "text": "Internal helper class for CellNumberFormatter", "tags": "CLASS", "url": "exp/CellNumberStringMod.html"},
                {"title": "org.apache.poi.ss.format.CellTextFormatter", "text": "This class implements printing out text.", "tags": "CLASS", "url": "exp/CellTextFormatter.html"},
                {"title": "org.apache.poi.ss.formula.atp.NotImplemented", "text": "Analysis Toolpack Function Definitions", "tags": "CLASS", "url": "exp/AnalysisToolPak.html"},
                {"title": "org.apache.poi.ss.formula.atp.ArgumentsEvaluator", "text": "Evaluator for formula arguments.", "tags": "CLASS", "url": "exp/ArgumentsEvaluator.html"},
                {"title": "org.apache.poi.ss.formula.atp.DateParser", "text": "Parser for java dates.", "tags": "CLASS", "url": "exp/DateParser.html"},
                {"title": "org.apache.poi.ss.formula.atp.MRound", "text": "Implementation of Excel 'Analysis ToolPak' function MROUND() MROUNDnumbermultiple", "tags": "CLASS", "url": "exp/MRound.html"},
                {"title": "org.apache.poi.ss.formula.atp.NetworkdaysFunction", "text": "Implementation of Excel 'Analysis ToolPak' function NETWORKDAYS() NETWORKDAYSstartDateendDate", "tags": "CLASS", "url": "exp/NetworkdaysFunction.html"},
                {"title": "org.apache.poi.ss.formula.atp.ParityFunction", "text": "Implementation of Excel 'Analysis ToolPak' function ISEVEN() ISODD()<br>", "tags": "CLASS", "url": "exp/ParityFunction.html"},
                {"title": "org.apache.poi.ss.formula.atp.RandBetween", "text": "Implementation of Excel 'Analysis ToolPak' function RANDBETWEEN()", "tags": "CLASS", "url": "exp/RandBetween.html"},
                {"title": "org.apache.poi.ss.formula.atp.WorkdayCalculator", "text": "A calculator for workdays, considering dates as excel representations.", "tags": "CLASS", "url": "exp/WorkdayCalculator.html"},
                {"title": "org.apache.poi.ss.formula.atp.WorkdayFunction", "text": "Implementation of Excel 'Analysis ToolPak' function WORKDAY() WORKDAYstartDatedays", "tags": "CLASS", "url": "exp/WorkdayFunction.html"},
                {"title": "org.apache.poi.ss.formula.atp.SimpleDate", "text": "Internal calculation methods for Excel 'Analysis ToolPak' function YEARFRAC()<br> Algorithm inspired by www.dwheeler.comyearfrac", "tags": "CLASS", "url": "exp/YearFracCalculator.html"},
                {"title": "org.apache.poi.ss.formula.BaseFormulaEvaluator", "text": "Common functionality across file formats for evaluating formula cells.<p>", "tags": "CLASS", "url": "exp/BaseFormulaEvaluator.html"},
                {"title": "org.apache.poi.ss.formula.CellCacheEntry", "text": "Stores the parameters that identify the evaluation of one cell.<br>", "tags": "CLASS", "url": "exp/CellCacheEntry.html"},
                {"title": "org.apache.poi.ss.formula.CellEvaluationFrame", "text": "Stores details about the current evaluation of a cell.<br>", "tags": "CLASS", "url": "exp/CellEvaluationFrame.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookNotFoundException", "text": "Manages a collection of {@link WorkbookEvaluator}s, in order to support evaluation of formulas across spreadsheets.", "tags": "CLASS", "url": "exp/CollaboratingWorkbooksEnvironment.html"},
                {"title": "org.apache.poi.ss.formula.constant.ConstantValueParser", "text": "To support Constant Values (2", "tags": "CLASS", "url": "exp/ConstantValueParser.html"},
                {"title": "org.apache.poi.ss.formula.constant.ErrorConstant", "text": "Represents a constant error code value as encoded in a constant values array. ErrorEval<tt>.", "tags": "CLASS", "url": "exp/ErrorConstant.html"},
                {"title": "org.apache.poi.ss.formula.eval.AreaEval", "text": "Evaluation of 2D (Row+Column) and 3D (Sheet+Row+Column) areas", "tags": "INTERFACE", "url": "exp/AreaEval.html"},
                {"title": "org.apache.poi.ss.formula.eval.BlankEval", "text": "marker class. It is a special value for empty cells.", "tags": "CLASS", "url": "exp/BlankEval.html"},
                {"title": "org.apache.poi.ss.formula.eval.ErrorEval", "text": "Evaluations for formula errors", "tags": "CLASS", "url": "exp/ErrorEval.html"},
                {"title": "org.apache.poi.ss.formula.eval.ExternalNameEval", "text": "Evaluation of a Name defined in a Sheet or Workbook scope", "tags": "CLASS", "url": "exp/ExternalNameEval.html"},
                {"title": "org.apache.poi.ss.formula.eval.forked.ForkedEvaluationCell", "text": "Represents a cell being used for forked evaluation that has had a value set different from the corresponding cell in the shared master workbook.", "tags": "CLASS", "url": "exp/ForkedEvaluationCell.html"},
                {"title": "org.apache.poi.ss.formula.eval.forked.RowColKey", "text": "Represents a sheet being used for forked evaluation", "tags": "CLASS", "url": "exp/ForkedEvaluationSheet.html"},
                {"title": "org.apache.poi.ss.formula.eval.forked.ForkedEvaluationWorkbook", "text": "Represents a workbook being used for forked evaluation", "tags": "CLASS", "url": "exp/ForkedEvaluationWorkbook.html"},
                {"title": "org.apache.poi.ss.formula.eval.forked.ForkedEvaluator", "text": "An alternative workbook evaluator that saves memory in situations where a single workbook is", "tags": "CLASS", "url": "exp/ForkedEvaluator.html"},
                {"title": "org.apache.poi.ss.formula.eval.FunctionID", "text": "Some function IDs that require special treatment", "tags": "CLASS", "url": "exp/FunctionID.html"},
                {"title": "org.apache.poi.ss.formula.eval.MissingArgEval", "text": "Represents the (intermediate) evaluated result of a missing function argument", "tags": "CLASS", "url": "exp/MissingArgEval.html"},
                {"title": "org.apache.poi.ss.formula.eval.NotImplementedException", "text": "An exception thrown by implementors of {@link FormulaEvaluator},", "tags": "CLASS", "url": "exp/NotImplementedException.html"},
                {"title": "org.apache.poi.ss.formula.eval.NotImplementedFunctionException", "text": "An exception thrown by implementors of {@link FormulaEvaluator} when", "tags": "CLASS", "url": "exp/NotImplementedFunctionException.html"},
                {"title": "org.apache.poi.ss.formula.eval.OperandResolver", "text": "Provides functionality for evaluating arguments to functions and operators.", "tags": "CLASS", "url": "exp/OperandResolver.html"},
                {"title": "org.apache.poi.ss.formula.eval.PercentEval", "text": "Implementation of Excel formula token '%'. <p>", "tags": "CLASS", "url": "exp/PercentEval.html"},
                {"title": "org.apache.poi.ss.formula.eval.RefEval", "text": "RefEval is the super interface for Ref2D and Ref3DEval", "tags": "INTERFACE", "url": "exp/RefEval.html"},
                {"title": "org.apache.poi.ss.formula.eval.RefEvalBase", "text": "Common base class for implementors of {@link RefEval}", "tags": "CLASS", "url": "exp/RefEvalBase.html"},
                {"title": "org.apache.poi.ss.formula.eval.RelationalOperationEval", "text": "Base class for all comparison operator evaluators", "tags": "CLASS", "url": "exp/RelationalOperationEval.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationCache", "text": "Performance optimisation for {@link org", "tags": "CLASS", "url": "exp/EvaluationCache.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationCell", "text": "Abstracts a cell for the purpose of formula evaluation", "tags": "INTERFACE", "url": "exp/EvaluationCell.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationName", "text": "Abstracts a name record for formula evaluation.<br> For POI internal use only", "tags": "INTERFACE", "url": "exp/EvaluationName.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationSheet", "text": "Abstracts a sheet for the purpose of formula evaluation.<br> For POI internal use only", "tags": "INTERFACE", "url": "exp/EvaluationSheet.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationTracker", "text": "Instances of this class keep track of multiple dependent cell evaluations due", "tags": "CLASS", "url": "exp/EvaluationTracker.html"},
                {"title": "org.apache.poi.ss.formula.ExternalName", "text": "Abstracts a workbook for the purpose of formula evaluation.<br> For POI internal use only", "tags": "INTERFACE", "url": "exp/EvaluationWorkbook.html"},
                {"title": "org.apache.poi.ss.formula.ExternSheetReferenceToken", "text": "Should be implemented by any {@link org.apache.poi.ss.formula.ptg.Ptg} subclass that needs has an extern sheet index <br> For POI internal use only", "tags": "INTERFACE", "url": "exp/ExternSheetReferenceToken.html"},
                {"title": "org.apache.poi.ss.formula.FormulaCellCacheEntry", "text": "Stores the cached result of a formula evaluation, along with the set of sensitive input cells", "tags": "CLASS", "url": "exp/FormulaCellCacheEntry.html"},
                {"title": "org.apache.poi.ss.formula.FormulaCellCacheEntrySet", "text": "A custom implementation of {@link java", "tags": "CLASS", "url": "exp/FormulaCellCacheEntrySet.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParseException", "text": "This exception thrown when a supplied formula has incorrect syntax (or syntax currently not", "tags": "CLASS", "url": "exp/FormulaParseException.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart", "text": "A1, $A1, A$1, $A$1, A, 1", "tags": "CLASS", "url": "exp/SimpleRangePart.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart", "text": "This class parses a formula string into a List of tokens in RPN order", "tags": "CLASS", "url": "exp/FormulaParser.html"},
                {"title": "org.apache.poi.ss.formula.FormulaRenderer", "text": "Common logic for rendering formulas.<br> For POI internal use only", "tags": "CLASS", "url": "exp/FormulaRenderer.html"},
                {"title": "org.apache.poi.ss.formula.FormulaRenderingWorkbook", "text": "Abstracts a workbook for the purpose of converting formula to text.<br> For POI internal use only", "tags": "INTERFACE", "url": "exp/FormulaRenderingWorkbook.html"},
                {"title": "org.apache.poi.ss.formula.FormulaShifter", "text": "Updates Formulas as rows or sheets are shifted", "tags": "CLASS", "url": "exp/FormulaShifter.html"},
                {"title": "org.apache.poi.ss.formula.BlankCellRectangleGroup", "text": "Optimization - compacts many blank cell references used by a single formula.", "tags": "CLASS", "url": "exp/FormulaUsedBlankCellSet.html"},
                {"title": "org.apache.poi.ss.formula.function.FunctionDataBuilder", "text": "Temporarily collects  instances for creation of a .", "tags": "CLASS", "url": "exp/FunctionDataBuilder.html"},
                {"title": "org.apache.poi.ss.formula.function.FunctionMetadata", "text": "Holds information about Excel built-in functions.", "tags": "CLASS", "url": "exp/FunctionMetadata.html"},
                {"title": "org.apache.poi.ss.formula.function.FunctionMetadataReader", "text": "Converts the text meta-data file into a", "tags": "CLASS", "url": "exp/FunctionMetadataReader.html"},
                {"title": "org.apache.poi.ss.formula.function.FunctionMetadataRegistry", "text": "Allows clients to get {@link FunctionMetadata} instances for any built-in function of Excel.", "tags": "CLASS", "url": "exp/FunctionMetadataRegistry.html"},
                {"title": "org.apache.poi.ss.formula.functions.Address", "text": "Creates a text reference as text, given specified row and column numbers.", "tags": "CLASS", "url": "exp/Address.html"},
                {"title": "org.apache.poi.ss.formula.functions.Bin2Dec", "text": "Implementation for Excel Bin2Dec() function", "tags": "CLASS", "url": "exp/Bin2Dec.html"},
                {"title": "org.apache.poi.ss.formula.functions.BooleanFunction", "text": "Here are the general rules concerning Boolean functions: Blanks are ignored (not either true or false)  Strings are ignored if part of an area ref or cell ref, otherwise they must be 'true' or 'false' Numbers: 0 is false. Any other number is TRUE  Areas: all cells in area are evaluated according to the above rules", "tags": "CLASS", "url": "exp/BooleanFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.CalendarFieldFunction", "text": "Implementation of Excel functions Date parsing functions:", "tags": "CLASS", "url": "exp/CalendarFieldFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.Columns", "text": "Implementation for Excel COLUMNS function.", "tags": "CLASS", "url": "exp/Columns.html"},
                {"title": "org.apache.poi.ss.formula.functions.Count", "text": "Counts the number of cells that contain numeric data within", "tags": "CLASS", "url": "exp/Count.html"},
                {"title": "org.apache.poi.ss.formula.functions.Counta", "text": "Counts the number of cells that contain data within the list of arguments", "tags": "CLASS", "url": "exp/Counta.html"},
                {"title": "org.apache.poi.ss.formula.functions.Countblank", "text": "Implementation for the function COUNTBLANK range&nbsp;&nbsp;&nbsp;is the range of cells to count blanks", "tags": "CLASS", "url": "exp/Countblank.html"},
                {"title": "org.apache.poi.ss.formula.functions.I_MatchPredicate", "text": "Common interface for the matching criteria.", "tags": "INTERFACE", "url": "exp/I_MatchPredicate.html"},
                {"title": "org.apache.poi.ss.formula.functions.I_MatchAreaPredicate", "text": "Common logic for COUNT, COUNTA and COUNTIF", "tags": "CLASS", "url": "exp/CountUtils.html"},
                {"title": "org.apache.poi.ss.formula.functions.DateFunc", "text": "Implementation for the Excel function DATE", "tags": "CLASS", "url": "exp/DateFunc.html"},
                {"title": "org.apache.poi.ss.formula.functions.Days360", "text": "{@code DAYS360(start_date,end_date,[method])}", "tags": "CLASS", "url": "exp/Days360.html"},
                {"title": "org.apache.poi.ss.formula.functions.Dec2Bin", "text": "Implementation for Excel Bin2Dec() function", "tags": "CLASS", "url": "exp/Dec2Bin.html"},
                {"title": "org.apache.poi.ss.formula.functions.Dec2Hex", "text": "Implementation for Excel DELTA() function", "tags": "CLASS", "url": "exp/Dec2Hex.html"},
                {"title": "org.apache.poi.ss.formula.functions.Delta", "text": "Implementation for Excel DELTA() function", "tags": "CLASS", "url": "exp/Delta.html"},
                {"title": "org.apache.poi.ss.formula.functions.DGet", "text": "Implementation of the DGet function: Finds the value of a column in an area with given conditions.", "tags": "CLASS", "url": "exp/DGet.html"},
                {"title": "org.apache.poi.ss.formula.functions.DMin", "text": "Implementation of the DMin function:", "tags": "CLASS", "url": "exp/DMin.html"},
                {"title": "org.apache.poi.ss.formula.functions.DStarRunner", "text": "This class performs a D calculation", "tags": "CLASS", "url": "exp/DStarRunner.html"},
                {"title": "org.apache.poi.ss.formula.functions.Errortype", "text": "Implementation for the ERROR", "tags": "CLASS", "url": "exp/Errortype.html"},
                {"title": "org.apache.poi.ss.formula.functions.FactDouble", "text": "Implementation for Excel FACTDOUBLE() function", "tags": "CLASS", "url": "exp/FactDouble.html"},
                {"title": "org.apache.poi.ss.formula.functions.Finance", "text": "Implementation of the financial functions pmt, fv, ppmt, ipmt.", "tags": "CLASS", "url": "exp/Finance.html"},
                {"title": "org.apache.poi.ss.formula.functions.FinanceLib", "text": "This class is a functon library for common fiscal functions", "tags": "CLASS", "url": "exp/FinanceLib.html"},
                {"title": "org.apache.poi.ss.formula.functions.Fixed0ArgFunction", "text": "Convenience base class for functions that only take zero arguments.", "tags": "CLASS", "url": "exp/Fixed0ArgFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.Fixed1ArgFunction", "text": "Convenience base class for functions that must take exactly one argument.", "tags": "CLASS", "url": "exp/Fixed1ArgFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.Fixed2ArgFunction", "text": "Convenience base class for functions that must take exactly two arguments.", "tags": "CLASS", "url": "exp/Fixed2ArgFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.Fixed3ArgFunction", "text": "Convenience base class for functions that must take exactly three arguments.", "tags": "CLASS", "url": "exp/Fixed3ArgFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.Fixed4ArgFunction", "text": "Convenience base class for functions that must take exactly four arguments.", "tags": "CLASS", "url": "exp/Fixed4ArgFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.Function", "text": "Common interface for all implementations of Excel built-in functions.", "tags": "INTERFACE", "url": "exp/Function.html"},
                {"title": "org.apache.poi.ss.formula.functions.Function0Arg", "text": "Implemented by all functions that can be called with zero arguments", "tags": "INTERFACE", "url": "exp/Function0Arg.html"},
                {"title": "org.apache.poi.ss.formula.functions.Function1Arg", "text": "Implemented by all functions that can be called with one argument", "tags": "INTERFACE", "url": "exp/Function1Arg.html"},
                {"title": "org.apache.poi.ss.formula.functions.Function2Arg", "text": "Implemented by all functions that can be called with two arguments", "tags": "INTERFACE", "url": "exp/Function2Arg.html"},
                {"title": "org.apache.poi.ss.formula.functions.Function3Arg", "text": "Implemented by all functions that can be called with three arguments", "tags": "INTERFACE", "url": "exp/Function3Arg.html"},
                {"title": "org.apache.poi.ss.formula.functions.Function4Arg", "text": "Implemented by all functions that can be called with four arguments", "tags": "INTERFACE", "url": "exp/Function4Arg.html"},
                {"title": "org.apache.poi.ss.formula.functions.Hex2Dec", "text": "Implementation for Excel HEX2DEC() function", "tags": "CLASS", "url": "exp/Hex2Dec.html"},
                {"title": "org.apache.poi.ss.formula.functions.Hlookup", "text": "Implementation of the HLOOKUP() function", "tags": "CLASS", "url": "exp/Hlookup.html"},
                {"title": "org.apache.poi.ss.formula.functions.IDStarAlgorithm", "text": "Interface specifying how an algorithm to be used by {@link DStarRunner} should look like. Each implementing class should correspond to one of the D functions.", "tags": "INTERFACE", "url": "exp/IDStarAlgorithm.html"},
                {"title": "org.apache.poi.ss.formula.functions.IfFunc", "text": "Implementation for the Excel function IF", "tags": "CLASS", "url": "exp/IfFunc.html"},
                {"title": "org.apache.poi.ss.formula.functions.Imaginary", "text": "Implementation for Excel IMAGINARY() function", "tags": "CLASS", "url": "exp/Imaginary.html"},
                {"title": "org.apache.poi.ss.formula.functions.ImReal", "text": "Implementation for Excel ImReal() function", "tags": "CLASS", "url": "exp/ImReal.html"},
                {"title": "org.apache.poi.ss.formula.functions.Indirect", "text": "Implementation for Excel function INDIRECT", "tags": "CLASS", "url": "exp/Indirect.html"},
                {"title": "org.apache.poi.ss.formula.functions.Intercept", "text": "Implementation of Excel function INTERCEPT()", "tags": "CLASS", "url": "exp/Intercept.html"},
                {"title": "org.apache.poi.ss.formula.functions.Irr", "text": "Calculates the internal rate of return. Syntax is IRR(values) or IRR(values,guess)", "tags": "CLASS", "url": "exp/Irr.html"},
                {"title": "org.apache.poi.ss.formula.functions.AreaValueArray", "text": "Base class for linear regression functions", "tags": "CLASS", "url": "exp/LinearRegressionFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.LogicalFunction", "text": "Implementation of the various ISxxx Logical Functions, which take a single expression argument, and return True or False.", "tags": "CLASS", "url": "exp/LogicalFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.Lookup", "text": "Implementation of Excel function LOOKUP", "tags": "CLASS", "url": "exp/Lookup.html"},
                {"title": "org.apache.poi.ss.formula.functions.ValueVector", "text": "Represents a single row or column within an .", "tags": "INTERFACE", "url": "exp/ValueVector.html"},
                {"title": "org.apache.poi.ss.formula.functions.CompareResult", "text": "Enumeration to support  valued comparison results", "tags": "CLASS", "url": "exp/CompareResult.html"},
                {"title": "org.apache.poi.ss.formula.functions.BinarySearchIndexes", "text": "Encapsulates some standard binary search functionality so the unusual Excel behaviour can be clearly distinguished.", "tags": "CLASS", "url": "exp/BinarySearchIndexes.html"},
                {"title": "org.apache.poi.ss.formula.functions.BinarySearchIndexes", "text": "Common functionality used by VLOOKUP, HLOOKUP, LOOKUP and MATCH", "tags": "CLASS", "url": "exp/LookupUtils.html"},
                {"title": "org.apache.poi.ss.formula.functions.SingleValueVector", "text": "Implementation for the MATCH() Excel function", "tags": "CLASS", "url": "exp/Match.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX", "text": "This class is an extension to the standard math library", "tags": "CLASS", "url": "exp/MathX.html"},
                {"title": "org.apache.poi.ss.formula.functions.Mirr", "text": "Calculates Modified internal rate of return", "tags": "CLASS", "url": "exp/Mirr.html"},
                {"title": "org.apache.poi.ss.formula.functions.DoubleList", "text": "This is the super class for all excel function evaluator", "tags": "CLASS", "url": "exp/MultiOperandNumericFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.Na", "text": "Implementation of Excel function NA()", "tags": "CLASS", "url": "exp/Na.html"},
                {"title": "org.apache.poi.ss.formula.functions.NotImplementedFunction", "text": "This is the default implementation of a Function class", "tags": "CLASS", "url": "exp/NotImplementedFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.Now", "text": "Implementation of Excel NOW() Function", "tags": "CLASS", "url": "exp/Now.html"},
                {"title": "org.apache.poi.ss.formula.functions.Npv", "text": "Calculates the net present value of an investment by using a discount rate", "tags": "CLASS", "url": "exp/Npv.html"},
                {"title": "org.apache.poi.ss.formula.functions.Oct2Dec", "text": "Syntax ( )", "tags": "CLASS", "url": "exp/Oct2Dec.html"},
                {"title": "org.apache.poi.ss.formula.functions.BaseRef", "text": "Encapsulates either an area or cell reference which may be 2d or 3d.", "tags": "CLASS", "url": "exp/BaseRef.html"},
                {"title": "org.apache.poi.ss.formula.functions.PPMT", "text": "Compute the interest portion of a payment.", "tags": "CLASS", "url": "exp/PPMT.html"},
                {"title": "org.apache.poi.ss.formula.functions.Rank", "text": "Returns the rank of a number in a list of numbers", "tags": "CLASS", "url": "exp/Rank.html"},
                {"title": "org.apache.poi.ss.formula.functions.Rate", "text": "Implements the Excel Rate function", "tags": "CLASS", "url": "exp/Rate.html"},
                {"title": "org.apache.poi.ss.formula.functions.Replace", "text": "An implementation of the Excel REPLACE() function:", "tags": "CLASS", "url": "exp/Replace.html"},
                {"title": "org.apache.poi.ss.formula.functions.Rept", "text": "Implementation for Excel REPT () function", "tags": "CLASS", "url": "exp/Rept.html"},
                {"title": "org.apache.poi.ss.formula.functions.RowFunc", "text": "Implementation for the Excel function ROW", "tags": "CLASS", "url": "exp/RowFunc.html"},
                {"title": "org.apache.poi.ss.formula.functions.Rows", "text": "Implementation for Excel ROWS function.", "tags": "CLASS", "url": "exp/Rows.html"},
                {"title": "org.apache.poi.ss.formula.functions.Slope", "text": "Implementation of Excel function SLOPE()", "tags": "CLASS", "url": "exp/Slope.html"},
                {"title": "org.apache.poi.ss.formula.functions.StatsLib", "text": "Library for common statistics functions", "tags": "CLASS", "url": "exp/StatsLib.html"},
                {"title": "org.apache.poi.ss.formula.functions.Sumx2my2", "text": "Implementation of Excel function SUMX2MY2()", "tags": "CLASS", "url": "exp/Sumx2my2.html"},
                {"title": "org.apache.poi.ss.formula.functions.Sumx2py2", "text": "Implementation of Excel function SUMX2PY2()", "tags": "CLASS", "url": "exp/Sumx2py2.html"},
                {"title": "org.apache.poi.ss.formula.functions.Sumxmy2", "text": "Implementation of Excel function SUMXMY2()", "tags": "CLASS", "url": "exp/Sumxmy2.html"},
                {"title": "org.apache.poi.ss.formula.functions.T", "text": "Implementation of Excel T() function", "tags": "CLASS", "url": "exp/T.html"},
                {"title": "org.apache.poi.ss.formula.functions.Today", "text": "Implementation of Excel TODAY() Function<br>", "tags": "CLASS", "url": "exp/Today.html"},
                {"title": "org.apache.poi.ss.formula.functions.Var1or2ArgFunction", "text": "Convenience base class for any function which must take two or three arguments", "tags": "CLASS", "url": "exp/Var1or2ArgFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.Var2or3ArgFunction", "text": "Convenience base class for any function which must take two or three arguments", "tags": "CLASS", "url": "exp/Var2or3ArgFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.Var3or4ArgFunction", "text": "Convenience base class for any function which must take three or four arguments", "tags": "CLASS", "url": "exp/Var3or4ArgFunction.html"},
                {"title": "org.apache.poi.ss.formula.functions.WeekdayFunc", "text": "Implementation for the Excel function WEEKDAY", "tags": "CLASS", "url": "exp/WeekdayFunc.html"},
                {"title": "org.apache.poi.ss.formula.functions.WeekNum", "text": "Implementation for Excel WeekNum() function", "tags": "CLASS", "url": "exp/WeekNum.html"},
                {"title": "org.apache.poi.ss.formula.ICacheEntry", "text": "A (mostly) opaque interface to allow test clients to trace cache values", "tags": "INTERFACE", "url": "exp/ICacheEntry.html"},
                {"title": "org.apache.poi.ss.formula.ICacheEntry", "text": "Tests can implement this class to track the internal working of the {@link WorkbookEvaluator}.<br> For POI internal testing use only", "tags": "INTERFACE", "url": "exp/IEvaluationListener.html"},
                {"title": "org.apache.poi.ss.formula.IStabilityClassifier", "text": "Used to help optimise cell evaluation result caching by allowing applications to specify which", "tags": "INTERFACE", "url": "exp/IStabilityClassifier.html"},
                {"title": "org.apache.poi.ss.formula.LazyAreaEval", "text": "Provides Lazy Evaluation to 3D Ranges", "tags": "CLASS", "url": "exp/LazyAreaEval.html"},
                {"title": "org.apache.poi.ss.formula.LazyRefEval", "text": "Provides Lazy Evaluation to a 3D Reference", "tags": "CLASS", "url": "exp/LazyRefEval.html"},
                {"title": "org.apache.poi.ss.formula.OperandClassTransformer", "text": "This class performs 'operand class' transformation", "tags": "CLASS", "url": "exp/OperandClassTransformer.html"},
                {"title": "org.apache.poi.ss.formula.OperationEvaluationContext", "text": "Contains all the contextual information required to evaluate an operation", "tags": "CLASS", "url": "exp/OperationEvaluationContext.html"},
                {"title": "org.apache.poi.ss.formula.OperationEvaluatorFactory", "text": "This class creates  instances to help evaluate formula tokens.", "tags": "CLASS", "url": "exp/OperationEvaluatorFactory.html"},
                {"title": "org.apache.poi.ss.formula.TokenCollector", "text": "Represents a syntactic element from a formula by encapsulating the corresponding", "tags": "CLASS", "url": "exp/ParseNode.html"},
                {"title": "org.apache.poi.ss.formula.PlainValueCellCacheEntry", "text": "Used for non-formula cells, primarily to keep track of the referencing (formula) cells.", "tags": "CLASS", "url": "exp/PlainValueCellCacheEntry.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AbstractFunctionPtg", "text": "This class provides the base functionality for Excel sheet functions", "tags": "CLASS", "url": "exp/AbstractFunctionPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Area2DPtgBase", "text": "Common superclass of 2-D area refs", "tags": "CLASS", "url": "exp/Area2DPtgBase.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Area3DPtg", "text": "<p>This is HSSF only, as it matches the HSSF file format way of", "tags": "CLASS", "url": "exp/Area3DPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaErrPtg", "text": "AreaErr - handles deleted cell area references.", "tags": "CLASS", "url": "exp/AreaErrPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.OffsetArea", "text": "Common interface for AreaPtg and Area3DPtg, and their child classes.", "tags": "INTERFACE", "url": "exp/AreaI.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Initial", "text": "ArrayPtg - handles arrays", "tags": "CLASS", "url": "exp/ArrayPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.SpaceType", "text": "\"Special Attributes\"", "tags": "CLASS", "url": "exp/AttrPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.BoolPtg", "text": "Boolean (boolean) Stores a (java) boolean value in a formula.", "tags": "CLASS", "url": "exp/BoolPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.ControlPtg", "text": "Common superclass for", "tags": "CLASS", "url": "exp/ControlPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Deleted3DPxg", "text": "An XSSF only representation of a reference to a deleted area", "tags": "CLASS", "url": "exp/Deleted3DPxg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.DeletedArea3DPtg", "text": "Title:        Deleted Area 3D Ptg - 3D referecnce (Sheet + Area) REFERENCE:  <P>", "tags": "CLASS", "url": "exp/DeletedArea3DPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.DeletedRef3DPtg", "text": "Title:        Deleted Reference 3D Ptg", "tags": "CLASS", "url": "exp/DeletedRef3DPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.DividePtg", "text": "This PTG implements the standard binomial divide \"\"", "tags": "CLASS", "url": "exp/DividePtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.GreaterEqualPtg", "text": "PTG class to implement greater or equal to", "tags": "CLASS", "url": "exp/GreaterEqualPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.GreaterThanPtg", "text": "Greater than operator PTG \">\"", "tags": "CLASS", "url": "exp/GreaterThanPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.IntPtg", "text": "Integer (unsigned short integer) Stores an unsigned short value (java int) in a formula", "tags": "CLASS", "url": "exp/IntPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.LessEqualPtg", "text": "Ptg class to implement less than or equal", "tags": "CLASS", "url": "exp/LessEqualPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.LessThanPtg", "text": "Less than operator PTG \"<\"", "tags": "CLASS", "url": "exp/LessThanPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.MissingArgPtg", "text": "Missing Function Arguments Avik Sengupta &lt;avik at apache.org&gt;", "tags": "CLASS", "url": "exp/MissingArgPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.MultiplyPtg", "text": "Implements the standard mathmatical multiplication -", "tags": "CLASS", "url": "exp/MultiplyPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.NameXPtg", "text": "A Name, be that a Named Range or a Function  User Defined", "tags": "CLASS", "url": "exp/NameXPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.NameXPxg", "text": "A Name, be that a Named Range or a Function  User Defined Function, addressed in the HSSF External Sheet style.", "tags": "CLASS", "url": "exp/NameXPxg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.NotEqualPtg", "text": "Ptg class to implement not equal", "tags": "CLASS", "url": "exp/NotEqualPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.NumberPtg", "text": "Number Stores a floating point value in a formula value stored in a 8 byte field using IEEE notation", "tags": "CLASS", "url": "exp/NumberPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.OperationPtg", "text": "defines a Ptg that is an operation instead of an operand", "tags": "CLASS", "url": "exp/OperationPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.ParenthesisPtg", "text": "While formula tokens are stored in RPN order and thus do not need parenthesis", "tags": "CLASS", "url": "exp/ParenthesisPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.PercentPtg", "text": "Percent PTG.", "tags": "CLASS", "url": "exp/PercentPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Pxg3D", "text": "An XSSF only special kind of Ptg, which stores a range of sheet  book references in string form.", "tags": "INTERFACE", "url": "exp/Pxg3D.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Ref3DPtg", "text": "<p>This is HSSF only, as it matches the HSSF file format way of", "tags": "CLASS", "url": "exp/Ref3DPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.RefErrorPtg", "text": "RefError - handles deleted cell reference", "tags": "CLASS", "url": "exp/RefErrorPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.RefNPtg", "text": "RefNPtg", "tags": "CLASS", "url": "exp/RefNPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.ScalarConstantPtg", "text": "Common superclass of all {@link Ptg}s that represent simple constant values.", "tags": "CLASS", "url": "exp/ScalarConstantPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.StringPtg", "text": "String Stores a String value in a formula value stored in the format &lt;length 2 bytes&gt;char[]", "tags": "CLASS", "url": "exp/StringPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.TblPtg", "text": "This ptg indicates a data table", "tags": "CLASS", "url": "exp/TblPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.UnaryMinusPtg", "text": "Unary Plus operator does not have any effect on the operand", "tags": "CLASS", "url": "exp/UnaryMinusPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.UnaryPlusPtg", "text": "Unary Plus operator does not have any effect on the operand", "tags": "CLASS", "url": "exp/UnaryPlusPtg.html"},
                {"title": "org.apache.poi.ss.formula.ptg.ValueOperatorPtg", "text": "Common superclass of all value operators", "tags": "CLASS", "url": "exp/ValueOperatorPtg.html"},
                {"title": "org.apache.poi.ss.formula.SheetNameFormatter", "text": "Formats sheet names for use in formula expressions.", "tags": "CLASS", "url": "exp/SheetNameFormatter.html"},
                {"title": "org.apache.poi.ss.formula.SheetRangeEvaluator", "text": "Evaluator for returning cells or sheets for a range of sheets", "tags": "CLASS", "url": "exp/SheetRangeEvaluator.html"},
                {"title": "org.apache.poi.ss.formula.SheetRefEvaluator", "text": "Evaluator for cells within a specific Sheet", "tags": "CLASS", "url": "exp/SheetRefEvaluator.html"},
                {"title": "org.apache.poi.ss.formula.ThreeDEval", "text": "Optional Extension to the likes of {@link AreaEval} and", "tags": "INTERFACE", "url": "exp/ThreeDEval.html"},
                {"title": "org.apache.poi.ss.formula.TwoDEval", "text": "Common interface of {@link AreaEval} and {@link org.apache.poi.ss.formula.eval.AreaEvalBase}, for 2D (row+column) evaluations", "tags": "INTERFACE", "url": "exp/TwoDEval.html"},
                {"title": "org.apache.poi.ss.formula.udf.IndexedUDFFinder", "text": "A UDFFinder that can retrieve functions both by name and by fake index.", "tags": "CLASS", "url": "exp/IndexedUDFFinder.html"},
                {"title": "org.apache.poi.ss.formula.UserDefinedFunction", "text": "Common entry point for all user-defined (non-built-in) functions (where == 255)", "tags": "CLASS", "url": "exp/UserDefinedFunction.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookDependentFormula", "text": "Should be implemented by any {@link org", "tags": "INTERFACE", "url": "exp/WorkbookDependentFormula.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator", "text": "Evaluates formula cells. For POI internal use only", "tags": "CLASS", "url": "exp/WorkbookEvaluator.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluatorProvider", "text": "Provides access to a {@link WorkbookEvaluator}, eg for use with", "tags": "INTERFACE", "url": "exp/WorkbookEvaluatorProvider.html"},
                {"title": "org.apache.poi.ss.usermodel.BuiltinFormats", "text": "Utility to identify built-in formats", "tags": "CLASS", "url": "exp/BuiltinFormats.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartAxis", "text": "High level representation of chart axis.", "tags": "INTERFACE", "url": "exp/ChartAxis.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartAxisFactory", "text": "A factory for different chart axis.", "tags": "INTERFACE", "url": "exp/ChartAxisFactory.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartData", "text": "A base for all charts data types.", "tags": "INTERFACE", "url": "exp/ChartData.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartDataFactory", "text": "A factory for different charts data types.", "tags": "INTERFACE", "url": "exp/ChartDataFactory.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartLegend", "text": "High level representation of chart legend.", "tags": "INTERFACE", "url": "exp/ChartLegend.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartSeries", "text": "Basic settings for all chart series.", "tags": "INTERFACE", "url": "exp/ChartSeries.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.AbstractCellRangeDataSource", "text": "Class {@code DataSources} is a factory for {@link ChartDataSource} instances.", "tags": "CLASS", "url": "exp/DataSources.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.LineChartData", "text": "Data for a Line Chart", "tags": "INTERFACE", "url": "exp/LineChartData.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.LineChartSeries", "text": "Represents a line chart series.", "tags": "INTERFACE", "url": "exp/LineChartSeries.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManuallyPositionable", "text": "Abstraction of chart element that can be positioned with manual layout.", "tags": "INTERFACE", "url": "exp/ManuallyPositionable.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ScatterChartData", "text": "Data for a Scatter Chart", "tags": "INTERFACE", "url": "exp/ScatterChartData.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ScatterChartSeries", "text": "Represents scatter charts series.", "tags": "INTERFACE", "url": "exp/ScatterChartSeries.html"},
                {"title": "org.apache.poi.ss.usermodel.ColorScaleFormatting", "text": "High level representation for the Color Scale  Colour Scale Color Gradient Formatting component of Conditional Formatting settings", "tags": "INTERFACE", "url": "exp/ColorScaleFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingThreshold", "text": "The Threshold  CFVO  Conditional Formatting Value Object.", "tags": "INTERFACE", "url": "exp/ConditionalFormattingThreshold.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionType", "text": "Represents a type of a conditional formatting rule", "tags": "CLASS", "url": "exp/ConditionType.html"},
                {"title": "org.apache.poi.ss.usermodel.DataBarFormatting", "text": "High level representation for the DataBar Formatting component of Conditional Formatting settings", "tags": "INTERFACE", "url": "exp/DataBarFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.SSNFormat", "text": "Format class for Excel's SSN format. This class mimics Excel's built-in SSN formatting.", "tags": "CLASS", "url": "exp/SSNFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.ZipPlusFourFormat", "text": "Format class for Excel Zip + 4 format. This class mimics Excel's built-in formatting for Zip + 4.", "tags": "CLASS", "url": "exp/ZipPlusFourFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.PhoneFormat", "text": "Format class for Excel phone number format. This class mimics Excel's built-in phone number formatting.", "tags": "CLASS", "url": "exp/PhoneFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.ConstantStringFormat", "text": "Format class that does nothing and always returns a constant string", "tags": "CLASS", "url": "exp/ConstantStringFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.CellFormatResultWrapper", "text": "Workaround until we merge {@link DataFormatter} with {@link CellFormat}. Constant, non-cachable wrapper around a {@link CellFormatResult}", "tags": "CLASS", "url": "exp/CellFormatResultWrapper.html"},
                {"title": "org.apache.poi.ss.usermodel.ErrorStyle", "text": "Error style constants for error box", "tags": "CLASS", "url": "exp/ErrorStyle.html"},
                {"title": "org.apache.poi.ss.usermodel.ValidationType", "text": "ValidationType enum", "tags": "CLASS", "url": "exp/ValidationType.html"},
                {"title": "org.apache.poi.ss.usermodel.OperatorType", "text": "Condition operator enum", "tags": "CLASS", "url": "exp/OperatorType.html"},
                {"title": "org.apache.poi.ss.usermodel.ExcelGeneralNumberFormat", "text": "A format that formats a double as Excel would, ignoring FieldPosition. All other operations are unsupported.", "tags": "CLASS", "url": "exp/ExcelGeneralNumberFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.ExcelStyleDateFormatter", "text": "A wrapper around a {@link SimpleDateFormat} instance,", "tags": "CLASS", "url": "exp/ExcelStyleDateFormatter.html"},
                {"title": "org.apache.poi.ss.usermodel.helpers.RowShifter", "text": "Helper for shifting rows up or down This abstract class exists to consolidate duplicated code between XSSFRowShifter and HSSFRowShifter (currently methods sprinkled throughout HSSFSheet)", "tags": "CLASS", "url": "exp/RowShifter.html"},
                {"title": "org.apache.poi.ss.usermodel.IconMultiStateFormatting", "text": "High level representation for the Icon  Multi-State Formatting component of Conditional Formatting settings", "tags": "INTERFACE", "url": "exp/IconMultiStateFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.Name", "text": "Represents a defined name for a range of cells", "tags": "INTERFACE", "url": "exp/Name.html"},
                {"title": "org.apache.poi.ss.usermodel.ShapeContainer", "text": "A common interface for shape groups.", "tags": "INTERFACE", "url": "exp/ShapeContainer.html"},
                {"title": "org.apache.poi.ss.usermodel.ShapeTypes", "text": "All known types of automatic shapes in DrawingML", "tags": "CLASS", "url": "exp/ShapeTypes.html"},
                {"title": "org.apache.poi.ss.usermodel.SimpleShape", "text": "A common interface for simple shapes. (Currently the HSSF and XSSF classes don't share common method signatures ...)", "tags": "INTERFACE", "url": "exp/SimpleShape.html"},
                {"title": "org.apache.poi.ss.usermodel.Table", "text": "XSSF Only! High level abstraction of table in a workbook.", "tags": "INTERFACE", "url": "exp/Table.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddressBase", "text": "See OOO documentation: excelfileformat.pdf sec 2.5.14 - 'Cell Range Address'<p> Common superclass of 8-bit and 16-bit versions", "tags": "CLASS", "url": "exp/CellRangeAddressBase.html"},
                {"title": "org.apache.poi.ss.util.CellRangeUtil", "text": "Utility class that builds on {@link CellRangeAddress} Portions of this class may be moved to {@link CellRangeAddressBase}", "tags": "CLASS", "url": "exp/CellRangeUtil.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping", "text": "Various utility functions that make working with a cells and rows easier", "tags": "CLASS", "url": "exp/CellUtil.html"},
                {"title": "org.apache.poi.ss.util.cellwalk.CellHandler", "text": "Represents callback for CellWalk traverse method.", "tags": "INTERFACE", "url": "exp/CellHandler.html"},
                {"title": "org.apache.poi.ss.util.cellwalk.SimpleCellWalkContext", "text": "Inner class to hold walk context.", "tags": "CLASS", "url": "exp/SimpleCellWalkContext.html"},
                {"title": "org.apache.poi.ss.util.cellwalk.SimpleCellWalkContext", "text": "Traverse cell range.", "tags": "CLASS", "url": "exp/CellWalk.html"},
                {"title": "org.apache.poi.ss.util.DateFormatTokenizer", "text": "Convert java DateFormat patterns into Excel custom number formats", "tags": "CLASS", "url": "exp/DateFormatConverter.html"},
                {"title": "org.apache.poi.ss.util.ExpandedDouble", "text": "Represents a 64 bit IEEE double quantity expressed with both decimal and binary exponents", "tags": "CLASS", "url": "exp/ExpandedDouble.html"},
                {"title": "org.apache.poi.ss.util.IEEEDouble", "text": "For working with the internals of IEEE 754-2008 'binary64' (double precision) floating point numbers", "tags": "CLASS", "url": "exp/IEEEDouble.html"},
                {"title": "org.apache.poi.ss.util.TenPower", "text": "Holds values for quick multiplication and division by 10", "tags": "CLASS", "url": "exp/TenPower.html"},
                {"title": "org.apache.poi.ss.util.NormalisedDecimal", "text": "Represents a transformation of a 64 bit IEEE double quantity having a decimal exponent and a", "tags": "CLASS", "url": "exp/NormalisedDecimal.html"},
                {"title": "org.apache.poi.ss.util.NumberComparer", "text": "Excel compares numbers using different rules to those of java, so {@link Double#compare(double, double)} won't do.", "tags": "CLASS", "url": "exp/NumberComparer.html"},
                {"title": "org.apache.poi.ss.util.CellPropertySetter", "text": "For setting the same property on many cells to the same value", "tags": "CLASS", "url": "exp/CellPropertySetter.html"},
                {"title": "org.apache.poi.ss.util.SheetBuilder", "text": "Class {@code SheetBuilder} provides an easy way of building workbook sheets", "tags": "CLASS", "url": "exp/SheetBuilder.html"},
                {"title": "org.apache.poi.ss.util.SheetUtil", "text": "Helper methods for when working with Usermodel sheets", "tags": "CLASS", "url": "exp/SheetUtil.html"},
                {"title": "org.apache.poi.ss.util.ArrayIterator", "text": "For POI internal use only", "tags": "CLASS", "url": "exp/SSCellRange.html"},
                {"title": "org.apache.poi.ss.util.WorkbookUtil", "text": "Helper methods for when working with Usermodel Workbooks", "tags": "CLASS", "url": "exp/WorkbookUtil.html"},
                {"title": "org.apache.poi.util.ArrayUtil", "text": "Utility classes for dealing with arrays.", "tags": "CLASS", "url": "exp/ArrayUtil.html"},
                {"title": "org.apache.poi.util.BitField", "text": "Manage operations dealing with bit-mapped fields.", "tags": "CLASS", "url": "exp/BitField.html"},
                {"title": "org.apache.poi.util.BitFieldFactory", "text": "Returns immutable Bitfield instances.", "tags": "CLASS", "url": "exp/BitFieldFactory.html"},
                {"title": "org.apache.poi.util.BoundedInputStream", "text": "This is a stream that will only supply bytes up to a certain length - if its", "tags": "CLASS", "url": "exp/BoundedInputStream.html"},
                {"title": "org.apache.poi.util.CloseIgnoringInputStream", "text": "A wrapper around an {@link InputStream}, which", "tags": "CLASS", "url": "exp/CloseIgnoringInputStream.html"},
                {"title": "org.apache.poi.util.CodePageUtil", "text": "Utilities for working with Microsoft CodePages.", "tags": "CLASS", "url": "exp/CodePageUtil.html"},
                {"title": "org.apache.poi.util.CommonsLogger", "text": "A logger class that strives to make it as easy as possible for", "tags": "CLASS", "url": "exp/CommonsLogger.html"},
                {"title": "org.apache.poi.util.Configurator", "text": "Helper for fetching int values from system properties", "tags": "CLASS", "url": "exp/Configurator.html"},
                {"title": "org.apache.poi.util.DelayableLittleEndianOutput", "text": "Implementors of this interface allow client code to 'delay' writing to a certain section of a", "tags": "INTERFACE", "url": "exp/DelayableLittleEndianOutput.html"},
                {"title": "org.apache.poi.util.DrawingDump", "text": "Dump out the aggregated escher records", "tags": "CLASS", "url": "exp/DrawingDump.html"},
                {"title": "org.apache.poi.util.HexDump", "text": "dump data in hexadecimal format", "tags": "CLASS", "url": "exp/HexDump.html"},
                {"title": "org.apache.poi.util.HexRead", "text": "Utilities to read hex from files. TODO - move to test packages", "tags": "CLASS", "url": "exp/HexRead.html"},
                {"title": "org.apache.poi.util.IntList", "text": "A List of int's; as full an implementation of the java", "tags": "CLASS", "url": "exp/IntList.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException", "text": "Exception to handle buffer underruns", "tags": "CLASS", "url": "exp/BufferUnderrunException.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException", "text": "a utility class for handling little-endian numbers, which the 80x86 world is", "tags": "CLASS", "url": "exp/LittleEndian.html"},
                {"title": "org.apache.poi.util.LittleEndianByteArrayInputStream", "text": "Adapts a plain byte array to {@link LittleEndianInput}", "tags": "CLASS", "url": "exp/LittleEndianByteArrayInputStream.html"},
                {"title": "org.apache.poi.util.LittleEndianByteArrayOutputStream", "text": "Adapts a plain byte array to {@link LittleEndianOutput}", "tags": "CLASS", "url": "exp/LittleEndianByteArrayOutputStream.html"},
                {"title": "org.apache.poi.util.LittleEndianInputStream", "text": "Wraps an {@link InputStream} providing {@link LittleEndianInput}<p>", "tags": "CLASS", "url": "exp/LittleEndianInputStream.html"},
                {"title": "org.apache.poi.util.LocaleUtil", "text": "This utility class is used to set locale and time zone settings beside", "tags": "CLASS", "url": "exp/LocaleUtil.html"},
                {"title": "org.apache.poi.util.LZWDecompresser", "text": "This class provides common functionality for the", "tags": "CLASS", "url": "exp/LZWDecompresser.html"},
                {"title": "org.apache.poi.util.RecordFormatException", "text": "A common exception thrown by our binary format parsers", "tags": "CLASS", "url": "exp/RecordFormatException.html"},
                {"title": "org.apache.poi.util.RLEDecompressingInputStream", "text": "Wrapper of InputStream which provides Run Length Encoding (RLE)", "tags": "CLASS", "url": "exp/RLEDecompressingInputStream.html"},
                {"title": "org.apache.poi.util.StringsIterator", "text": "An Iterator over an array of Strings.", "tags": "CLASS", "url": "exp/StringsIterator.html"},
                {"title": "org.apache.poi.util.StringsIterator", "text": "Collection of string handling utilities", "tags": "CLASS", "url": "exp/StringUtil.html"},
                {"title": "org.apache.poi.util.SystemOutLogger", "text": "A logger class that strives to make it as easy as possible for", "tags": "CLASS", "url": "exp/SystemOutLogger.html"},
                {"title": "org.apache.poi.util.TempFileCreationStrategy", "text": "Interface used by the {@link TempFile} utility class to create temporary files", "tags": "INTERFACE", "url": "exp/TempFileCreationStrategy.html"},
                {"title": "org.apache.poi.util.XMLHelper", "text": "Helper methods for working with javax.xml classes.", "tags": "CLASS", "url": "exp/XMLHelper.html"},
                {"title": "org.apache.poi.common.usermodel.Hyperlink.getAddress()", "text": "Hyperlink address. Depending on the hyperlink type it can be URL, e-mail, path to a file, etc.", "tags": "METHOD", "url": "exp/getAddress.html"},
                {"title": "org.apache.poi.common.usermodel.Hyperlink.setAddress(String)", "text": "Hyperlink address. Depending on the hyperlink type it can be URL, e-mail, path to a file, etc.", "tags": "METHOD", "url": "exp/setAddress.html"},
                {"title": "org.apache.poi.common.usermodel.Hyperlink.getLabel()", "text": "Return text label for this hyperlink", "tags": "METHOD", "url": "exp/getLabel.html"},
                {"title": "org.apache.poi.common.usermodel.Hyperlink.setLabel(String)", "text": "Sets text label for this hyperlink", "tags": "METHOD", "url": "exp/setLabel.html"},
                {"title": "org.apache.poi.common.usermodel.Hyperlink.getTypeEnum()", "text": "Return the type of this hyperlink", "tags": "METHOD", "url": "exp/getTypeEnum.html"},
                {"title": "org.apache.poi.ddf.AbstractEscherOptRecord.addEscherProperty(EscherProperty)", "text": "Add a property to this record.", "tags": "METHOD", "url": "exp/addEscherProperty.html"},
                {"title": "org.apache.poi.ddf.AbstractEscherOptRecord.getEscherProperties()", "text": "The list of properties stored by this record.", "tags": "METHOD", "url": "exp/getEscherProperties.html"},
                {"title": "org.apache.poi.ddf.AbstractEscherOptRecord.getEscherProperty(int)", "text": "The list of properties stored by this record.", "tags": "METHOD", "url": "exp/getEscherProperty.html"},
                {"title": "org.apache.poi.ddf.AbstractEscherOptRecord.sortProperties()", "text": "Records should be sorted by property number before being stored.", "tags": "METHOD", "url": "exp/sortProperties.html"},
                {"title": "org.apache.poi.ddf.AbstractEscherOptRecord.setEscherProperty(EscherProperty)", "text": "Set an escher property. If a property with given propId already exists it is replaced.", "tags": "METHOD", "url": "exp/setEscherProperty.html"},
                {"title": "org.apache.poi.ddf.AbstractEscherOptRecord.toString()", "text": "Retrieve the string representation of this record.", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.ddf.DefaultEscherRecordFactory.recordsToMap(Class<?>[])", "text": "Converts from a list of classes into a map that contains the record id as the key and", "tags": "METHOD", "url": "exp/recordsToMap.html"},
                {"title": "org.apache.poi.ddf.EscherArrayProperty.setArrayData(byte[], int)", "text": "We have this method because the way in which arrays in escher works", "tags": "METHOD", "url": "exp/setArrayData.html"},
                {"title": "org.apache.poi.ddf.EscherArrayProperty.serializeSimplePart(byte[], int)", "text": "Serializes the simple part of this property", "tags": "METHOD", "url": "exp/serializeSimplePart.html"},
                {"title": "org.apache.poi.ddf.EscherArrayProperty.getActualSizeOfElements(short)", "text": "Sometimes the element size is stored as a negative number.  We negate it and shift it to get the real value.", "tags": "METHOD", "url": "exp/getActualSizeOfElements.html"},
                {"title": "org.apache.poi.ddf.EscherBitmapBlip.getUID()", "text": "Gets the first MD4, that specifies the unique identifier of the uncompressed blip data", "tags": "METHOD", "url": "exp/getUID.html"},
                {"title": "org.apache.poi.ddf.EscherBitmapBlip.setUID(byte[])", "text": "Sets the first MD4, that specifies the unique identifier of the uncompressed blip data", "tags": "METHOD", "url": "exp/setUID.html"},
                {"title": "org.apache.poi.ddf.EscherBitmapBlip.getMarker()", "text": "Gets an unsigned integer that specifies an application-defined internal resource tag. This value MUST be 0xFF for external files.", "tags": "METHOD", "url": "exp/getMarker.html"},
                {"title": "org.apache.poi.ddf.EscherBitmapBlip.setMarker(byte)", "text": "Sets an unsigned integer that specifies an application-defined internal resource tag. This value MUST be 0xFF for external files.", "tags": "METHOD", "url": "exp/setMarker.html"},
                {"title": "org.apache.poi.ddf.EscherBlipRecord.getPicturedata()", "text": "Gets the picture data bytes", "tags": "METHOD", "url": "exp/getPicturedata.html"},
                {"title": "org.apache.poi.ddf.EscherBlipRecord.setPictureData(byte[])", "text": "Sets the picture data bytes", "tags": "METHOD", "url": "exp/setPictureData.html"},
                {"title": "org.apache.poi.ddf.EscherBlipRecord.setPictureData(byte[], int, int)", "text": "Sets the picture data bytes", "tags": "METHOD", "url": "exp/setPictureData.html"},
                {"title": "org.apache.poi.ddf.EscherBoolProperty.isTrue()", "text": "Whether this boolean property is true", "tags": "METHOD", "url": "exp/isTrue.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.getBlipTypeWin32()", "text": "The expected blip type under windows (failure to match this blip type will result in Excel converting to this format).", "tags": "METHOD", "url": "exp/getBlipTypeWin32.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.setBlipTypeWin32(byte)", "text": "Set the expected win32 blip type", "tags": "METHOD", "url": "exp/setBlipTypeWin32.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.getBlipTypeMacOS()", "text": "The expected blip type under MacOS (failure to match this blip type will result in Excel converting to this format).", "tags": "METHOD", "url": "exp/getBlipTypeMacOS.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.setBlipTypeMacOS(byte)", "text": "Set the expected MacOS blip type", "tags": "METHOD", "url": "exp/setBlipTypeMacOS.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.getUid()", "text": "16 byte MD4 checksum.", "tags": "METHOD", "url": "exp/getUid.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.setUid(byte[])", "text": "16 byte MD4 checksum.", "tags": "METHOD", "url": "exp/setUid.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.getTag()", "text": "unused", "tags": "METHOD", "url": "exp/getTag.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.setTag(short)", "text": "unused", "tags": "METHOD", "url": "exp/setTag.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.getSize()", "text": "Blip size in stream.", "tags": "METHOD", "url": "exp/getSize.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.setSize(int)", "text": "Blip size in stream.", "tags": "METHOD", "url": "exp/setSize.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.getRef()", "text": "The reference count of this blip.", "tags": "METHOD", "url": "exp/getRef.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.setRef(int)", "text": "The reference count of this blip.", "tags": "METHOD", "url": "exp/setRef.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.getOffset()", "text": "File offset in the delay stream.", "tags": "METHOD", "url": "exp/getOffset.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.setOffset(int)", "text": "File offset in the delay stream.", "tags": "METHOD", "url": "exp/setOffset.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.getUsage()", "text": "Defines the way this blip is used.", "tags": "METHOD", "url": "exp/getUsage.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.setUsage(byte)", "text": "Defines the way this blip is used.", "tags": "METHOD", "url": "exp/setUsage.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.getName()", "text": "The length in characters of the blip name.", "tags": "METHOD", "url": "exp/getName.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.setName(byte)", "text": "The length in characters of the blip name.", "tags": "METHOD", "url": "exp/setName.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.getRemainingData()", "text": "Any remaining data in this record.", "tags": "METHOD", "url": "exp/getRemainingData.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.setRemainingData(byte[])", "text": "Any remaining data in this record.", "tags": "METHOD", "url": "exp/setRemainingData.html"},
                {"title": "org.apache.poi.ddf.EscherBSERecord.getBlipType(byte)", "text": "Retrieve the string representation given a blip id.", "tags": "METHOD", "url": "exp/getBlipType.html"},
                {"title": "org.apache.poi.ddf.EscherChildAnchorRecord.toString()", "text": "The string representation of this record", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.ddf.EscherChildAnchorRecord.getDx1()", "text": "Retrieves offset within the parent coordinate space for the top left point.", "tags": "METHOD", "url": "exp/getDx1.html"},
                {"title": "org.apache.poi.ddf.EscherChildAnchorRecord.setDx1(int)", "text": "Sets offset within the parent coordinate space for the top left point.", "tags": "METHOD", "url": "exp/setDx1.html"},
                {"title": "org.apache.poi.ddf.EscherChildAnchorRecord.getDy1()", "text": "Gets offset within the parent coordinate space for the top left point.", "tags": "METHOD", "url": "exp/getDy1.html"},
                {"title": "org.apache.poi.ddf.EscherChildAnchorRecord.setDy1(int)", "text": "Sets offset within the parent coordinate space for the top left point.", "tags": "METHOD", "url": "exp/setDy1.html"},
                {"title": "org.apache.poi.ddf.EscherChildAnchorRecord.getDx2()", "text": "Retrieves offset within the parent coordinate space for the bottom right point.", "tags": "METHOD", "url": "exp/getDx2.html"},
                {"title": "org.apache.poi.ddf.EscherChildAnchorRecord.setDx2(int)", "text": "Sets offset within the parent coordinate space for the bottom right point.", "tags": "METHOD", "url": "exp/setDx2.html"},
                {"title": "org.apache.poi.ddf.EscherChildAnchorRecord.getDy2()", "text": "Gets the offset within the parent coordinate space for the bottom right point.", "tags": "METHOD", "url": "exp/getDy2.html"},
                {"title": "org.apache.poi.ddf.EscherChildAnchorRecord.setDy2(int)", "text": "Sets the offset within the parent coordinate space for the bottom right point.", "tags": "METHOD", "url": "exp/setDy2.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.toString()", "text": "Returns the string representation for this record.", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.getFlag()", "text": "0 = Move and size with Cells, 2 = Move but don't size with cells, 3 = Don't move or size with cells.", "tags": "METHOD", "url": "exp/getFlag.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.setFlag(short)", "text": "0 = Move and size with Cells, 2 = Move but don't size with cells, 3 = Don't move or size with cells.", "tags": "METHOD", "url": "exp/setFlag.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.getCol1()", "text": "The column number for the top-left position.  0 based.", "tags": "METHOD", "url": "exp/getCol1.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.setCol1(short)", "text": "The column number for the top-left position.  0 based.", "tags": "METHOD", "url": "exp/setCol1.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.getDx1()", "text": "The x offset within the top-left cell.  Range is from 0 to 1023.", "tags": "METHOD", "url": "exp/getDx1.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.setDx1(short)", "text": "The x offset within the top-left cell.  Range is from 0 to 1023.", "tags": "METHOD", "url": "exp/setDx1.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.getRow1()", "text": "The row number for the top-left corner of the shape.", "tags": "METHOD", "url": "exp/getRow1.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.setRow1(short)", "text": "The row number of the top-left corner of the shape.", "tags": "METHOD", "url": "exp/setRow1.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.getDy1()", "text": "The y offset within the top-left corner of the current shape.", "tags": "METHOD", "url": "exp/getDy1.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.setDy1(short)", "text": "The y offset within the top-left corner of the current shape.", "tags": "METHOD", "url": "exp/setDy1.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.getCol2()", "text": "The column of the bottom right corner of this shape.", "tags": "METHOD", "url": "exp/getCol2.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.setCol2(short)", "text": "The column of the bottom right corner of this shape.", "tags": "METHOD", "url": "exp/setCol2.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.getDx2()", "text": "The x offset withing the cell for the bottom-right corner of this shape.", "tags": "METHOD", "url": "exp/getDx2.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.setDx2(short)", "text": "The x offset withing the cell for the bottom-right corner of this shape.", "tags": "METHOD", "url": "exp/setDx2.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.getRow2()", "text": "The row number for the bottom-right corner of the current shape.", "tags": "METHOD", "url": "exp/getRow2.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.setRow2(short)", "text": "The row number for the bottom-right corner of the current shape.", "tags": "METHOD", "url": "exp/setRow2.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.getDy2()", "text": "The y offset withing the cell for the bottom-right corner of this shape.", "tags": "METHOD", "url": "exp/getDy2.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.setDy2(short)", "text": "The y offset withing the cell for the bottom-right corner of this shape.", "tags": "METHOD", "url": "exp/setDy2.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.getRemainingData()", "text": "Any remaining data in the record", "tags": "METHOD", "url": "exp/getRemainingData.html"},
                {"title": "org.apache.poi.ddf.EscherClientAnchorRecord.setRemainingData(byte[])", "text": "Any remaining data in the record", "tags": "METHOD", "url": "exp/setRemainingData.html"},
                {"title": "org.apache.poi.ddf.EscherClientDataRecord.toString()", "text": "Returns the string representation of this record.", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.ddf.EscherClientDataRecord.getRemainingData()", "text": "Any data recording this record.", "tags": "METHOD", "url": "exp/getRemainingData.html"},
                {"title": "org.apache.poi.ddf.EscherClientDataRecord.setRemainingData(byte[])", "text": "Any data recording this record.", "tags": "METHOD", "url": "exp/setRemainingData.html"},
                {"title": "org.apache.poi.ddf.EscherColorRef.getSysIndexProcedure()", "text": "Return the {@link SysIndexProcedure} - for invert flag use {@link #getSysIndexInvert()}", "tags": "METHOD", "url": "exp/getSysIndexProcedure.html"},
                {"title": "org.apache.poi.ddf.EscherColorRef.getSysIndexInvert()", "text": "2 for {@link SysIndexProcedure#INVERT_HIGHBIT_AFTER}", "tags": "METHOD", "url": "exp/getSysIndexInvert.html"},
                {"title": "org.apache.poi.ddf.EscherComplexProperty.serializeSimplePart(byte[], int)", "text": "Serializes the simple part of this property.  i.e. the first 6 bytes.", "tags": "METHOD", "url": "exp/serializeSimplePart.html"},
                {"title": "org.apache.poi.ddf.EscherComplexProperty.serializeComplexPart(byte[], int)", "text": "Serializes the complex part of this property", "tags": "METHOD", "url": "exp/serializeComplexPart.html"},
                {"title": "org.apache.poi.ddf.EscherComplexProperty.getComplexData()", "text": "Get the complex data value.", "tags": "METHOD", "url": "exp/getComplexData.html"},
                {"title": "org.apache.poi.ddf.EscherComplexProperty.equals(Object)", "text": "Determine whether this property is equal to another property.", "tags": "METHOD", "url": "exp/equals.html"},
                {"title": "org.apache.poi.ddf.EscherComplexProperty.getPropertySize()", "text": "Calculates the number of bytes required to serialize this property.", "tags": "METHOD", "url": "exp/getPropertySize.html"},
                {"title": "org.apache.poi.ddf.EscherComplexProperty.toString()", "text": "Retrieves the string representation for this property.", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.ddf.EscherContainerRecord.hasChildOfType(short)", "text": "Do any of our (top level) children have the given recordId?", "tags": "METHOD", "url": "exp/hasChildOfType.html"},
                {"title": "org.apache.poi.ddf.EscherContainerRecord.setChildRecords(List<EscherRecord>)", "text": "replaces the internal child list with the contents of the supplied", "tags": "METHOD", "url": "exp/setChildRecords.html"},
                {"title": "org.apache.poi.ddf.EscherContainerRecord.removeChildRecord(EscherRecord)", "text": "Removes the given escher record from the child list", "tags": "METHOD", "url": "exp/removeChildRecord.html"},
                {"title": "org.apache.poi.ddf.EscherContainerRecord.getChildContainers()", "text": "Returns all of our children which are also EscherContainers (may be 0, 1, or vary rarely 2 or 3)", "tags": "METHOD", "url": "exp/getChildContainers.html"},
                {"title": "org.apache.poi.ddf.EscherContainerRecord.addChildRecord(EscherRecord)", "text": "Append a child record", "tags": "METHOD", "url": "exp/addChildRecord.html"},
                {"title": "org.apache.poi.ddf.EscherContainerRecord.addChildBefore(EscherRecord, int)", "text": "Add a child record before the record with given recordId", "tags": "METHOD", "url": "exp/addChildBefore.html"},
                {"title": "org.apache.poi.ddf.EscherContainerRecord.getRecordsById(short, List<EscherRecord>)", "text": "Recursively find records with the specified record ID", "tags": "METHOD", "url": "exp/getRecordsById.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster.getShapeIdMax()", "text": "Gets the next available shape id", "tags": "METHOD", "url": "exp/getShapeIdMax.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster.setShapeIdMax(int)", "text": "The maximum is actually the next available shape id.", "tags": "METHOD", "url": "exp/setShapeIdMax.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster.getNumIdClusters()", "text": "Number of id clusters + 1", "tags": "METHOD", "url": "exp/getNumIdClusters.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster.getNumShapesSaved()", "text": "Gets the number of shapes saved", "tags": "METHOD", "url": "exp/getNumShapesSaved.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster.setNumShapesSaved(int)", "text": "Sets the number of shapes saved", "tags": "METHOD", "url": "exp/setNumShapesSaved.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster.getDrawingsSaved()", "text": "Gets the number of drawings saved", "tags": "METHOD", "url": "exp/getDrawingsSaved.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster.setDrawingsSaved(int)", "text": "Sets the number of drawings saved", "tags": "METHOD", "url": "exp/setDrawingsSaved.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster.getMaxDrawingGroupId()", "text": "Gets the maximum drawing group ID", "tags": "METHOD", "url": "exp/getMaxDrawingGroupId.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster.setMaxDrawingGroupId(int)", "text": "Sets the maximum drawing group ID", "tags": "METHOD", "url": "exp/setMaxDrawingGroupId.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster.setFileIdClusters(FileIdCluster[])", "text": "Sets the file id clusters", "tags": "METHOD", "url": "exp/setFileIdClusters.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster.addCluster(int, int)", "text": "Add a new cluster", "tags": "METHOD", "url": "exp/addCluster.html"},
                {"title": "org.apache.poi.ddf.FileIdCluster.addCluster(int, int, boolean)", "text": "Add a new cluster In Excel the clusters are sorted but in PPT they are not)", "tags": "METHOD", "url": "exp/addCluster.html"},
                {"title": "org.apache.poi.ddf.EscherDgRecord.getRecordSize()", "text": "Returns the number of bytes that are required to serialize this record.", "tags": "METHOD", "url": "exp/getRecordSize.html"},
                {"title": "org.apache.poi.ddf.EscherDgRecord.toString()", "text": "Returns the string representation of this record.", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.ddf.EscherDgRecord.getNumShapes()", "text": "The number of shapes in this drawing group.", "tags": "METHOD", "url": "exp/getNumShapes.html"},
                {"title": "org.apache.poi.ddf.EscherDgRecord.setNumShapes(int)", "text": "The number of shapes in this drawing group.", "tags": "METHOD", "url": "exp/setNumShapes.html"},
                {"title": "org.apache.poi.ddf.EscherDgRecord.getLastMSOSPID()", "text": "The last shape id used in this drawing group.", "tags": "METHOD", "url": "exp/getLastMSOSPID.html"},
                {"title": "org.apache.poi.ddf.EscherDgRecord.setLastMSOSPID(int)", "text": "The last shape id used in this drawing group.", "tags": "METHOD", "url": "exp/setLastMSOSPID.html"},
                {"title": "org.apache.poi.ddf.EscherDgRecord.getDrawingGroupId()", "text": "Gets the drawing group id for this record.  This is encoded in the instance part of the option record.", "tags": "METHOD", "url": "exp/getDrawingGroupId.html"},
                {"title": "org.apache.poi.ddf.EscherDgRecord.incrementShapeCount()", "text": "Increments the number of shapes", "tags": "METHOD", "url": "exp/incrementShapeCount.html"},
                {"title": "org.apache.poi.ddf.EscherDump.dump(byte[], int, int, PrintStream)", "text": "Decodes the escher stream from a byte array and dumps the results to a print stream.", "tags": "METHOD", "url": "exp/dump.html"},
                {"title": "org.apache.poi.ddf.EscherDump.dumpOld(long, InputStream, PrintStream)", "text": "This version of dump is a translation from the open office escher dump routine.", "tags": "METHOD", "url": "exp/dumpOld.html"},
                {"title": "org.apache.poi.ddf.EscherDump.propName(short)", "text": "Returns a property name given a property id.  This is used only by the old escher dump routine.", "tags": "METHOD", "url": "exp/propName.html"},
                {"title": "org.apache.poi.ddf.EscherDump.getBlipType(byte)", "text": "Returns the blip description given a blip id.", "tags": "METHOD", "url": "exp/getBlipType.html"},
                {"title": "org.apache.poi.ddf.EscherDump.dec1616(int)", "text": "Straight conversion from OO.  Converts a type of float.", "tags": "METHOD", "url": "exp/dec1616.html"},
                {"title": "org.apache.poi.ddf.EscherDump.outHex(int, InputStream, PrintStream)", "text": "Dumps out a hex value by reading from a input stream.", "tags": "METHOD", "url": "exp/outHex.html"},
                {"title": "org.apache.poi.ddf.EscherDump.main(String[])", "text": "A simple test stub.", "tags": "METHOD", "url": "exp/main.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.inflatePictureData(byte[])", "text": "Decompresses the provided data, returning the inflated result.", "tags": "METHOD", "url": "exp/inflatePictureData.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.getUID()", "text": "Gets the first MD4, that specifies the unique identifier of the uncompressed blip data", "tags": "METHOD", "url": "exp/getUID.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.setUID(byte[])", "text": "Sets the first MD4, that specifies the unique identifier of the uncompressed blip data", "tags": "METHOD", "url": "exp/setUID.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.getPrimaryUID()", "text": "Gets the second MD4, that specifies the unique identifier of the uncompressed blip data", "tags": "METHOD", "url": "exp/getPrimaryUID.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.setPrimaryUID(byte[])", "text": "Sets the second MD4, that specifies the unique identifier of the uncompressed blip data", "tags": "METHOD", "url": "exp/setPrimaryUID.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.getUncompressedSize()", "text": "Gets the uncompressed size (in bytes)", "tags": "METHOD", "url": "exp/getUncompressedSize.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.setUncompressedSize(int)", "text": "Sets the uncompressed size (in bytes)", "tags": "METHOD", "url": "exp/setUncompressedSize.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.getBounds()", "text": "Get the clipping region of the metafile", "tags": "METHOD", "url": "exp/getBounds.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.setBounds(Rectangle)", "text": "Sets the clipping region", "tags": "METHOD", "url": "exp/setBounds.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.getSizeEMU()", "text": "Gets the dimensions of the metafile", "tags": "METHOD", "url": "exp/getSizeEMU.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.setSizeEMU(Dimension)", "text": "Gets the dimensions of the metafile", "tags": "METHOD", "url": "exp/setSizeEMU.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.getCompressedSize()", "text": "Gets the compressed size of the metafile (in bytes)", "tags": "METHOD", "url": "exp/getCompressedSize.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.setCompressedSize(int)", "text": "Sets the compressed size of the metafile (in bytes)", "tags": "METHOD", "url": "exp/setCompressedSize.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.isCompressed()", "text": "Gets the compression of the metafile", "tags": "METHOD", "url": "exp/isCompressed.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.setCompressed(boolean)", "text": "Sets the compression of the metafile", "tags": "METHOD", "url": "exp/setCompressed.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.getRemainingData()", "text": "Returns any remaining bytes", "tags": "METHOD", "url": "exp/getRemainingData.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.getSignature()", "text": "Return the blip signature", "tags": "METHOD", "url": "exp/getSignature.html"},
                {"title": "org.apache.poi.ddf.EscherMetafileBlip.setFilter(byte)", "text": "Sets the filter byte - usually this is 0xFE", "tags": "METHOD", "url": "exp/setFilter.html"},
                {"title": "org.apache.poi.ddf.EscherOptRecord.getOptions()", "text": "Automatically recalculate the correct option", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.inflatePictureData(byte[])", "text": "Decompresses the provided data, returning the inflated result.", "tags": "METHOD", "url": "exp/inflatePictureData.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.getUID()", "text": "Gets the first MD4, that specifies the unique identifier of the uncompressed blip data", "tags": "METHOD", "url": "exp/getUID.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.setUID(byte[])", "text": "Sets the first MD4, that specifies the unique identifier of the uncompressed blip data", "tags": "METHOD", "url": "exp/setUID.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.getUncompressedSize()", "text": "Gets the uncompressed size (in bytes)", "tags": "METHOD", "url": "exp/getUncompressedSize.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.setUncompressedSize(int)", "text": "Sets the uncompressed size (in bytes)", "tags": "METHOD", "url": "exp/setUncompressedSize.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.getBounds()", "text": "Get the clipping region of the pict file", "tags": "METHOD", "url": "exp/getBounds.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.setBounds(Rectangle)", "text": "Sets the clipping region", "tags": "METHOD", "url": "exp/setBounds.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.getSizeEMU()", "text": "Gets the dimensions of the metafile", "tags": "METHOD", "url": "exp/getSizeEMU.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.setSizeEMU(Dimension)", "text": "Gets the dimensions of the metafile", "tags": "METHOD", "url": "exp/setSizeEMU.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.getCompressedSize()", "text": "Gets the compressed size of the metafile (in bytes)", "tags": "METHOD", "url": "exp/getCompressedSize.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.setCompressedSize(int)", "text": "Sets the compressed size of the metafile (in bytes)", "tags": "METHOD", "url": "exp/setCompressedSize.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.isCompressed()", "text": "Gets the compression of the metafile", "tags": "METHOD", "url": "exp/isCompressed.html"},
                {"title": "org.apache.poi.ddf.EscherPictBlip.setCompressed(boolean)", "text": "Sets the compression of the metafile", "tags": "METHOD", "url": "exp/setCompressed.html"},
                {"title": "org.apache.poi.ddf.EscherProperty.getPropertySize()", "text": "Most properties are just 6 bytes in length.  Override this if we're dealing with complex properties.", "tags": "METHOD", "url": "exp/getPropertySize.html"},
                {"title": "org.apache.poi.ddf.EscherProperty.serializeSimplePart(byte[], int)", "text": "Escher properties consist of a simple fixed length part and a complex variable length part. The fixed length part is serialized first.", "tags": "METHOD", "url": "exp/serializeSimplePart.html"},
                {"title": "org.apache.poi.ddf.EscherProperty.serializeComplexPart(byte[], int)", "text": "Escher properties consist of a simple fixed length part and a complex variable length part. The fixed length part is serialized first.", "tags": "METHOD", "url": "exp/serializeComplexPart.html"},
                {"title": "org.apache.poi.ddf.EscherPropertyFactory.createProperties(byte[], int, short)", "text": "Create new properties from a byte array.", "tags": "METHOD", "url": "exp/createProperties.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.fillFields(byte[], EscherRecordFactory)", "text": "Delegates to fillFields(byte[], int, EscherRecordFactory)", "tags": "METHOD", "url": "exp/fillFields.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.fillFields(byte[], int, EscherRecordFactory)", "text": "The contract of this method is to deserialize an escher record including", "tags": "METHOD", "url": "exp/fillFields.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.readHeader(byte[], int)", "text": "Reads the 8 byte header information and populates the", "tags": "METHOD", "url": "exp/readHeader.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.readInstance(byte[], int)", "text": "Read the options field from header and return instance part of it.", "tags": "METHOD", "url": "exp/readInstance.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.isContainerRecord()", "text": "Determine whether this is a container record by inspecting the option field.", "tags": "METHOD", "url": "exp/isContainerRecord.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.getOptions()", "text": "Note that  is an internal field. Use {@link #setInstance(short)} ()} and {@link #setVersion(short)} ()} to set the actual fields.", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.setOptions(short)", "text": "Set the options this this record", "tags": "METHOD", "url": "exp/setOptions.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.serialize()", "text": "Serializes to a new byte array.  This is done by delegating to serialize(int, byte[]);", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.serialize(int, byte[])", "text": "Serializes to an existing byte array without serialization listener. This is done by delegating to serialize(int, byte[], EscherSerializationListener).", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.serialize(int, byte[], EscherSerializationListener)", "text": "Serializes the record to an existing byte array", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.getRecordSize()", "text": "Subclasses should effeciently return the number of bytes required to serialize the record.", "tags": "METHOD", "url": "exp/getRecordSize.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.getRecordId()", "text": "Return the current record id.", "tags": "METHOD", "url": "exp/getRecordId.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.setRecordId(short)", "text": "Sets the record id for this record.", "tags": "METHOD", "url": "exp/setRecordId.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.getChildRecords()", "text": "be an empty list.  EscherCotainerRecord is the only record that may contain children.", "tags": "METHOD", "url": "exp/getChildRecords.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.setChildRecords(List<EscherRecord>)", "text": "Sets the child records for this record.  By default this will throw an exception as only EscherContainerRecords may have children.", "tags": "METHOD", "url": "exp/setChildRecords.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.clone()", "text": "Escher records may need to be clonable in the future.", "tags": "METHOD", "url": "exp/clone.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.getChild(int)", "text": "Returns the indexed child record.", "tags": "METHOD", "url": "exp/getChild.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.display(PrintWriter, int)", "text": "The display methods allows escher variables to print the record names according to their hierarchy.", "tags": "METHOD", "url": "exp/display.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.getRecordName()", "text": "Subclasses should return the short name for this escher record.", "tags": "METHOD", "url": "exp/getRecordName.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.getInstance()", "text": "Returns the instance part of the option record.", "tags": "METHOD", "url": "exp/getInstance.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.setInstance(short)", "text": "Sets the instance part of record", "tags": "METHOD", "url": "exp/setInstance.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.getVersion()", "text": "Returns the version part of the option record.", "tags": "METHOD", "url": "exp/getVersion.html"},
                {"title": "org.apache.poi.ddf.EscherRecord.setVersion(short)", "text": "Sets the version part of record", "tags": "METHOD", "url": "exp/setVersion.html"},
                {"title": "org.apache.poi.ddf.EscherRecordFactory.createRecord(byte[], int)", "text": "Generates an escher record including any children contained under that record. An exception is thrown if the record could not be generated.", "tags": "METHOD", "url": "exp/createRecord.html"},
                {"title": "org.apache.poi.ddf.EscherSerializationListener.beforeRecordSerialize(int, short, EscherRecord)", "text": "Fired before a given escher record is serialized.", "tags": "METHOD", "url": "exp/beforeRecordSerialize.html"},
                {"title": "org.apache.poi.ddf.EscherSerializationListener.afterRecordSerialize(int, short, int, EscherRecord)", "text": "Fired after a record has been serialized. record then this will include the size of any included records.", "tags": "METHOD", "url": "exp/afterRecordSerialize.html"},
                {"title": "org.apache.poi.ddf.EscherSimpleProperty.serializeSimplePart(byte[], int)", "text": "Serialize the simple part of the escher record.", "tags": "METHOD", "url": "exp/serializeSimplePart.html"},
                {"title": "org.apache.poi.ddf.EscherSimpleProperty.serializeComplexPart(byte[], int)", "text": "Escher properties consist of a simple fixed length part and a complex variable length part. The fixed length part is serialized first.", "tags": "METHOD", "url": "exp/serializeComplexPart.html"},
                {"title": "org.apache.poi.ddf.EscherSimpleProperty.equals(Object)", "text": "Returns true if one escher property is equal to another.", "tags": "METHOD", "url": "exp/equals.html"},
                {"title": "org.apache.poi.ddf.EscherSimpleProperty.hashCode()", "text": "Returns a hashcode so that this object can be stored in collections that require the use of such things.", "tags": "METHOD", "url": "exp/hashCode.html"},
                {"title": "org.apache.poi.ddf.EscherSpgrRecord.getRectX1()", "text": "The starting top-left coordinate of child records.", "tags": "METHOD", "url": "exp/getRectX1.html"},
                {"title": "org.apache.poi.ddf.EscherSpgrRecord.setRectX1(int)", "text": "The top-left coordinate of child records.", "tags": "METHOD", "url": "exp/setRectX1.html"},
                {"title": "org.apache.poi.ddf.EscherSpgrRecord.getRectY1()", "text": "The top-left coordinate of child records.", "tags": "METHOD", "url": "exp/getRectY1.html"},
                {"title": "org.apache.poi.ddf.EscherSpgrRecord.setRectY1(int)", "text": "The top-left y coordinate of child records.", "tags": "METHOD", "url": "exp/setRectY1.html"},
                {"title": "org.apache.poi.ddf.EscherSpgrRecord.getRectX2()", "text": "The bottom-right x coordinate of child records.", "tags": "METHOD", "url": "exp/getRectX2.html"},
                {"title": "org.apache.poi.ddf.EscherSpgrRecord.setRectX2(int)", "text": "The bottom-right x coordinate of child records.", "tags": "METHOD", "url": "exp/setRectX2.html"},
                {"title": "org.apache.poi.ddf.EscherSpgrRecord.getRectY2()", "text": "The bottom-right y coordinate of child records.", "tags": "METHOD", "url": "exp/getRectY2.html"},
                {"title": "org.apache.poi.ddf.EscherSpgrRecord.setRectY2(int)", "text": "The bottom-right y coordinate of child records.", "tags": "METHOD", "url": "exp/setRectY2.html"},
                {"title": "org.apache.poi.ddf.EscherSplitMenuColorsRecord.getColor1()", "text": "Gets the fill color", "tags": "METHOD", "url": "exp/getColor1.html"},
                {"title": "org.apache.poi.ddf.EscherSplitMenuColorsRecord.setColor1(int)", "text": "Sets the fill color", "tags": "METHOD", "url": "exp/setColor1.html"},
                {"title": "org.apache.poi.ddf.EscherSplitMenuColorsRecord.getColor2()", "text": "Gets the line color", "tags": "METHOD", "url": "exp/getColor2.html"},
                {"title": "org.apache.poi.ddf.EscherSplitMenuColorsRecord.setColor2(int)", "text": "Sets the line color", "tags": "METHOD", "url": "exp/setColor2.html"},
                {"title": "org.apache.poi.ddf.EscherSplitMenuColorsRecord.getColor3()", "text": "Gets the shadow color", "tags": "METHOD", "url": "exp/getColor3.html"},
                {"title": "org.apache.poi.ddf.EscherSplitMenuColorsRecord.setColor3(int)", "text": "Sets the shadow color", "tags": "METHOD", "url": "exp/setColor3.html"},
                {"title": "org.apache.poi.ddf.EscherSplitMenuColorsRecord.getColor4()", "text": "Gets the 3-D color", "tags": "METHOD", "url": "exp/getColor4.html"},
                {"title": "org.apache.poi.ddf.EscherSplitMenuColorsRecord.setColor4(int)", "text": "Sets the 3-D color", "tags": "METHOD", "url": "exp/setColor4.html"},
                {"title": "org.apache.poi.ddf.EscherSpRecord.serialize(int, byte[], EscherSerializationListener)", "text": "This method serializes this escher record into a byte array.", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.ddf.EscherSpRecord.decodeFlags(int)", "text": "Converts the shape flags into a more descriptive name.", "tags": "METHOD", "url": "exp/decodeFlags.html"},
                {"title": "org.apache.poi.ddf.EscherSpRecord.setShapeId(int)", "text": "Sets a number that identifies this shape.", "tags": "METHOD", "url": "exp/setShapeId.html"},
                {"title": "org.apache.poi.ddf.EscherSpRecord.getFlags()", "text": "The flags that apply to this shape.", "tags": "METHOD", "url": "exp/getFlags.html"},
                {"title": "org.apache.poi.ddf.EscherSpRecord.setFlags(int)", "text": "The flags that apply to this shape.", "tags": "METHOD", "url": "exp/setFlags.html"},
                {"title": "org.apache.poi.ddf.EscherSpRecord.getShapeType()", "text": "Returns shape type. Must be one of MSOSPT values (see [MS-ODRAW] for details).", "tags": "METHOD", "url": "exp/getShapeType.html"},
                {"title": "org.apache.poi.ddf.EscherSpRecord.setShapeType(short)", "text": "Sets shape type", "tags": "METHOD", "url": "exp/setShapeType.html"},
                {"title": "org.apache.poi.ddf.EscherTextboxRecord.getData()", "text": "Returns any extra data associated with this record", "tags": "METHOD", "url": "exp/getData.html"},
                {"title": "org.apache.poi.ddf.EscherTextboxRecord.setData(byte[], int, int)", "text": "Sets the extra data (in the parent application's format) to be", "tags": "METHOD", "url": "exp/setData.html"},
                {"title": "org.apache.poi.ddf.EscherTextboxRecord.setData(byte[])", "text": "Sets the extra data (in the parent application's format) to be", "tags": "METHOD", "url": "exp/setData.html"},
                {"title": "org.apache.poi.dev.RecordGenerator.main(String[])", "text": "The main program for the RecordGenerator class", "tags": "METHOD", "url": "exp/main.html"},
                {"title": "org.apache.poi.extractor.OLE2ExtractorFactory.getThreadPrefersEventExtractors()", "text": "Should this thread prefer event based over usermodel based extractors?", "tags": "METHOD", "url": "exp/getThreadPrefersEventExtractors.html"},
                {"title": "org.apache.poi.extractor.OLE2ExtractorFactory.getAllThreadsPreferEventExtractors()", "text": "Should all threads prefer event based over usermodel based extractors?", "tags": "METHOD", "url": "exp/getAllThreadsPreferEventExtractors.html"},
                {"title": "org.apache.poi.extractor.OLE2ExtractorFactory.setThreadPrefersEventExtractors(boolean)", "text": "Should this thread prefer event based over usermodel based extractors? Will only be used if the All Threads setting is null.", "tags": "METHOD", "url": "exp/setThreadPrefersEventExtractors.html"},
                {"title": "org.apache.poi.extractor.OLE2ExtractorFactory.setAllThreadsPreferEventExtractors(Boolean)", "text": "Should all threads prefer event based over usermodel based extractors? If set, will take preference over the Thread level setting.", "tags": "METHOD", "url": "exp/setAllThreadsPreferEventExtractors.html"},
                {"title": "org.apache.poi.extractor.OLE2ExtractorFactory.getPreferEventExtractor()", "text": "Should this thread use event based extractors is available? Checks the all-threads one first, then thread specific.", "tags": "METHOD", "url": "exp/getPreferEventExtractor.html"},
                {"title": "org.apache.poi.extractor.OLE2ExtractorFactory.createExtractor(DirectoryNode)", "text": "Create the Extractor, if possible", "tags": "METHOD", "url": "exp/createExtractor.html"},
                {"title": "org.apache.poi.extractor.OLE2ExtractorFactory.getEmbededDocsTextExtractors(POIOLE2TextExtractor)", "text": "Returns an array of text extractors, one for each of", "tags": "METHOD", "url": "exp/getEmbededDocsTextExtractors.html"},
                {"title": "org.apache.poi.hpsf.ClassID.length()", "text": "stream.", "tags": "METHOD", "url": "exp/length.html"},
                {"title": "org.apache.poi.hpsf.ClassID.setBytes(byte[])", "text": "are copied without their order being changed.", "tags": "METHOD", "url": "exp/setBytes.html"},
                {"title": "org.apache.poi.hpsf.ClassID.write(byte[], int)", "text": "ID 16 bytes in the byte array after the  position.", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hpsf.ClassID.equals(Object)", "text": "ClassID .", "tags": "METHOD", "url": "exp/equals.html"},
                {"title": "org.apache.poi.hpsf.ClassID.toString()", "text": "\"{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}\"", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.put(String, CustomProperty)", "text": "Puts a {@link CustomProperty} into this map", "tags": "METHOD", "url": "exp/put.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.put(CustomProperty)", "text": "Puts a {@link CustomProperty} that has not yet a valid ID into this", "tags": "METHOD", "url": "exp/put.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.remove(String)", "text": "Removes a custom property.", "tags": "METHOD", "url": "exp/remove.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.put(String, String)", "text": "Adds a named string property. {@code null} if there was no such property before.", "tags": "METHOD", "url": "exp/put.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.put(String, Long)", "text": "Adds a named long property. {@code null} if there was no such property before.", "tags": "METHOD", "url": "exp/put.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.put(String, Double)", "text": "Adds a named double property. {@code null} if there was no such property before.", "tags": "METHOD", "url": "exp/put.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.put(String, Integer)", "text": "Adds a named integer property. {@code null} if there was no such property before.", "tags": "METHOD", "url": "exp/put.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.put(String, Boolean)", "text": "Adds a named boolean property. {@code null} if there was no such property before.", "tags": "METHOD", "url": "exp/put.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.get(String)", "text": "Gets a named value from the custom properties. name is not found in the custom properties.", "tags": "METHOD", "url": "exp/get.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.put(String, Date)", "text": "Adds a named date property. {@code null} if there was no such property before.", "tags": "METHOD", "url": "exp/put.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.keySet()", "text": "Returns a set of all the names of our custom properties. Equivalent to {@link #nameSet()}", "tags": "METHOD", "url": "exp/keySet.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.nameSet()", "text": "Returns a set of all the names of our custom properties", "tags": "METHOD", "url": "exp/nameSet.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.idSet()", "text": "Returns a set of all the IDs of our custom properties", "tags": "METHOD", "url": "exp/idSet.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.setCodepage(int)", "text": "Sets the codepage.", "tags": "METHOD", "url": "exp/setCodepage.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.getDictionary()", "text": "<p>Gets the dictionary which contains IDs and names of the named custom properties.", "tags": "METHOD", "url": "exp/getDictionary.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.containsKey(Object)", "text": "Checks against both String Name and Long ID", "tags": "METHOD", "url": "exp/containsKey.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.containsValue(Object)", "text": "Checks against both the property, and its values.", "tags": "METHOD", "url": "exp/containsValue.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.getCodepage()", "text": "Gets the codepage.", "tags": "METHOD", "url": "exp/getCodepage.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.isPure()", "text": "Tells whether this {@link CustomProperties} instance is pure or one or", "tags": "METHOD", "url": "exp/isPure.html"},
                {"title": "org.apache.poi.hpsf.CustomProperties.setPure(boolean)", "text": "Sets the purity of the custom property set.", "tags": "METHOD", "url": "exp/setPure.html"},
                {"title": "org.apache.poi.hpsf.CustomProperty.getName()", "text": "Gets the property's name.", "tags": "METHOD", "url": "exp/getName.html"},
                {"title": "org.apache.poi.hpsf.CustomProperty.setName(String)", "text": "Sets the property's name.", "tags": "METHOD", "url": "exp/setName.html"},
                {"title": "org.apache.poi.hpsf.CustomProperty.equalsContents(Object)", "text": "Compares two custom properties for equality", "tags": "METHOD", "url": "exp/equalsContents.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getCategory()", "text": "Returns the category (or {@code null}).", "tags": "METHOD", "url": "exp/getCategory.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setCategory(String)", "text": "Sets the category.", "tags": "METHOD", "url": "exp/setCategory.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeCategory()", "text": "Removes the category.", "tags": "METHOD", "url": "exp/removeCategory.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getPresentationFormat()", "text": "Returns the presentation format (or {@code null}).", "tags": "METHOD", "url": "exp/getPresentationFormat.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setPresentationFormat(String)", "text": "Sets the presentation format.", "tags": "METHOD", "url": "exp/setPresentationFormat.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removePresentationFormat()", "text": "Removes the presentation format.", "tags": "METHOD", "url": "exp/removePresentationFormat.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getByteCount()", "text": "Returns the byte count or 0 if the {@link DocumentSummaryInformation} does not contain a byte count.", "tags": "METHOD", "url": "exp/getByteCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setByteCount(int)", "text": "Sets the byte count.", "tags": "METHOD", "url": "exp/setByteCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeByteCount()", "text": "Removes the byte count.", "tags": "METHOD", "url": "exp/removeByteCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getLineCount()", "text": "Returns the line count or 0 if the {@link DocumentSummaryInformation} does not contain a line count.", "tags": "METHOD", "url": "exp/getLineCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setLineCount(int)", "text": "Sets the line count.", "tags": "METHOD", "url": "exp/setLineCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeLineCount()", "text": "Removes the line count.", "tags": "METHOD", "url": "exp/removeLineCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getParCount()", "text": "Returns the par count or 0 if the {@link DocumentSummaryInformation} does not contain a par count.", "tags": "METHOD", "url": "exp/getParCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setParCount(int)", "text": "Sets the par count.", "tags": "METHOD", "url": "exp/setParCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeParCount()", "text": "Removes the par count.", "tags": "METHOD", "url": "exp/removeParCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getSlideCount()", "text": "Returns the slide count or 0 if the {@link DocumentSummaryInformation} does not contain a slide count.", "tags": "METHOD", "url": "exp/getSlideCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setSlideCount(int)", "text": "Sets the slideCount.", "tags": "METHOD", "url": "exp/setSlideCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeSlideCount()", "text": "Removes the slide count.", "tags": "METHOD", "url": "exp/removeSlideCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getNoteCount()", "text": "Returns the note count or 0 if the {@link DocumentSummaryInformation} does not contain a note count.", "tags": "METHOD", "url": "exp/getNoteCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setNoteCount(int)", "text": "Sets the note count.", "tags": "METHOD", "url": "exp/setNoteCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeNoteCount()", "text": "Removes the noteCount.", "tags": "METHOD", "url": "exp/removeNoteCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getHiddenCount()", "text": "Returns the hidden count or 0 if the {@link", "tags": "METHOD", "url": "exp/getHiddenCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setHiddenCount(int)", "text": "Sets the hidden count.", "tags": "METHOD", "url": "exp/setHiddenCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeHiddenCount()", "text": "Removes the hidden count.", "tags": "METHOD", "url": "exp/removeHiddenCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getMMClipCount()", "text": "Returns the mmclip count or 0 if the {@link", "tags": "METHOD", "url": "exp/getMMClipCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setMMClipCount(int)", "text": "Sets the mmclip count.", "tags": "METHOD", "url": "exp/setMMClipCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeMMClipCount()", "text": "Removes the mmclip count.", "tags": "METHOD", "url": "exp/removeMMClipCount.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getScale()", "text": "Returns {@code true} when scaling of the thumbnail is desired, {@code false} if cropping is desired.", "tags": "METHOD", "url": "exp/getScale.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setScale(boolean)", "text": "Sets the scale.", "tags": "METHOD", "url": "exp/setScale.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeScale()", "text": "Removes the scale.", "tags": "METHOD", "url": "exp/removeScale.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getHeadingPair()", "text": "when this method is implemented. Please note that the return type is likely to change!<strong>", "tags": "METHOD", "url": "exp/getHeadingPair.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setHeadingPair(byte[])", "text": "Sets the heading pair.", "tags": "METHOD", "url": "exp/setHeadingPair.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeHeadingPair()", "text": "Removes the heading pair.", "tags": "METHOD", "url": "exp/removeHeadingPair.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getDocparts()", "text": "when this method is implemented. Please note that the return type is likely to change!<strong>", "tags": "METHOD", "url": "exp/getDocparts.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setDocparts(byte[])", "text": "Sets the doc parts.", "tags": "METHOD", "url": "exp/setDocparts.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeDocparts()", "text": "Removes the doc parts.", "tags": "METHOD", "url": "exp/removeDocparts.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getManager()", "text": "Returns the manager (or {@code null}).", "tags": "METHOD", "url": "exp/getManager.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setManager(String)", "text": "Sets the manager.", "tags": "METHOD", "url": "exp/setManager.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeManager()", "text": "Removes the manager.", "tags": "METHOD", "url": "exp/removeManager.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getCompany()", "text": "Returns the company (or {@code null}).", "tags": "METHOD", "url": "exp/getCompany.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setCompany(String)", "text": "Sets the company.", "tags": "METHOD", "url": "exp/setCompany.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeCompany()", "text": "Removes the company.", "tags": "METHOD", "url": "exp/removeCompany.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getLinksDirty()", "text": "Returns {@code true} if the custom links are dirty. <p>", "tags": "METHOD", "url": "exp/getLinksDirty.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setLinksDirty(boolean)", "text": "Sets the linksDirty.", "tags": "METHOD", "url": "exp/setLinksDirty.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeLinksDirty()", "text": "Removes the links dirty.", "tags": "METHOD", "url": "exp/removeLinksDirty.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getCharCountWithSpaces()", "text": "Returns the character count including whitespace, or 0 if the", "tags": "METHOD", "url": "exp/getCharCountWithSpaces.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setCharCountWithSpaces(int)", "text": "Sets the character count including whitespace", "tags": "METHOD", "url": "exp/setCharCountWithSpaces.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeCharCountWithSpaces()", "text": "Removes the character count", "tags": "METHOD", "url": "exp/removeCharCountWithSpaces.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getHyperlinksChanged()", "text": "Get if the User Defined Property Set has been updated outside of the", "tags": "METHOD", "url": "exp/getHyperlinksChanged.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setHyperlinksChanged(boolean)", "text": "Set the flag for if the User Defined Property Set has been updated outside of the Application.", "tags": "METHOD", "url": "exp/setHyperlinksChanged.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeHyperlinksChanged()", "text": "Removes the flag for if the User Defined Property Set has been updated outside of the Application.", "tags": "METHOD", "url": "exp/removeHyperlinksChanged.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getApplicationVersion()", "text": "Gets the version of the Application which wrote the", "tags": "METHOD", "url": "exp/getApplicationVersion.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setApplicationVersion(int)", "text": "Sets the Application version, which must be a 4 byte int with", "tags": "METHOD", "url": "exp/setApplicationVersion.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeApplicationVersion()", "text": "Removes the Application Version", "tags": "METHOD", "url": "exp/removeApplicationVersion.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getVBADigitalSignature()", "text": "Returns the VBA digital signature for the VBA project embedded in the document (or {@code null}).", "tags": "METHOD", "url": "exp/getVBADigitalSignature.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setVBADigitalSignature(byte[])", "text": "Sets the VBA digital signature for the VBA project embedded in the document.", "tags": "METHOD", "url": "exp/setVBADigitalSignature.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeVBADigitalSignature()", "text": "Removes the VBA Digital Signature", "tags": "METHOD", "url": "exp/removeVBADigitalSignature.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getContentType()", "text": "Gets the content type of the file (or {@code null}).", "tags": "METHOD", "url": "exp/getContentType.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setContentType(String)", "text": "Sets the content type of the file", "tags": "METHOD", "url": "exp/setContentType.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeContentType()", "text": "Removes the content type of the file", "tags": "METHOD", "url": "exp/removeContentType.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getContentStatus()", "text": "Gets the content status of the file (or {@code null}).", "tags": "METHOD", "url": "exp/getContentStatus.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setContentStatus(String)", "text": "Sets the content status of the file", "tags": "METHOD", "url": "exp/setContentStatus.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeContentStatus()", "text": "Removes the content status of the file", "tags": "METHOD", "url": "exp/removeContentStatus.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getLanguage()", "text": "Gets the document language, which is normally unset and empty (or {@code null}).", "tags": "METHOD", "url": "exp/getLanguage.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setLanguage(String)", "text": "Set the document language", "tags": "METHOD", "url": "exp/setLanguage.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeLanguage()", "text": "Removes the document language", "tags": "METHOD", "url": "exp/removeLanguage.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getDocumentVersion()", "text": "Gets the document version as a string, which is normally unset and empty (or {@code null}).", "tags": "METHOD", "url": "exp/getDocumentVersion.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setDocumentVersion(String)", "text": "Sets the document version string", "tags": "METHOD", "url": "exp/setDocumentVersion.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeDocumentVersion()", "text": "Removes the document version string", "tags": "METHOD", "url": "exp/removeDocumentVersion.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.getCustomProperties()", "text": "Gets the custom properties.", "tags": "METHOD", "url": "exp/getCustomProperties.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.setCustomProperties(CustomProperties)", "text": "Sets the custom properties.", "tags": "METHOD", "url": "exp/setCustomProperties.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.ensureSection2()", "text": "Creates section 2 if it is not already present.", "tags": "METHOD", "url": "exp/ensureSection2.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.removeCustomProperties()", "text": "Removes the custom properties.", "tags": "METHOD", "url": "exp/removeCustomProperties.html"},
                {"title": "org.apache.poi.hpsf.DocumentSummaryInformation.notYetImplemented(String)", "text": "Throws an {@link UnsupportedOperationException} with a message text", "tags": "METHOD", "url": "exp/notYetImplemented.html"},
                {"title": "org.apache.poi.hpsf.extractor.HPSFPropertiesExtractor.getText()", "text": "the document.", "tags": "METHOD", "url": "exp/getText.html"},
                {"title": "org.apache.poi.hpsf.extractor.HPSFPropertiesExtractor.getMetadataTextExtractor()", "text": "Prevent recursion!", "tags": "METHOD", "url": "exp/getMetadataTextExtractor.html"},
                {"title": "org.apache.poi.hpsf.HPSFException.getReason()", "text": "null", "tags": "METHOD", "url": "exp/getReason.html"},
                {"title": "org.apache.poi.hpsf.HPSFPropertiesOnlyDocument.write()", "text": "Write out to the currently open file the properties changes, but nothing else", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hpsf.HPSFPropertiesOnlyDocument.write(File)", "text": "Write out, with any properties changes, but nothing else", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hpsf.HPSFPropertiesOnlyDocument.write(OutputStream)", "text": "Write out, with any properties changes, but nothing else", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hpsf.HPSFRuntimeException.getReason()", "text": "null", "tags": "METHOD", "url": "exp/getReason.html"},
                {"title": "org.apache.poi.hpsf.Property.getID()", "text": "Returns the property's ID.", "tags": "METHOD", "url": "exp/getID.html"},
                {"title": "org.apache.poi.hpsf.Property.setID(long)", "text": "Sets the property's ID.", "tags": "METHOD", "url": "exp/setID.html"},
                {"title": "org.apache.poi.hpsf.Property.getType()", "text": "Returns the property's type.", "tags": "METHOD", "url": "exp/getType.html"},
                {"title": "org.apache.poi.hpsf.Property.setType(long)", "text": "Sets the property's type.", "tags": "METHOD", "url": "exp/setType.html"},
                {"title": "org.apache.poi.hpsf.Property.getValue()", "text": "Returns the property's value.", "tags": "METHOD", "url": "exp/getValue.html"},
                {"title": "org.apache.poi.hpsf.Property.setValue(Object)", "text": "Sets the property's value.", "tags": "METHOD", "url": "exp/setValue.html"},
                {"title": "org.apache.poi.hpsf.Property.readDictionary(byte[], long, int, int)", "text": "Reads a dictionary", "tags": "METHOD", "url": "exp/readDictionary.html"},
                {"title": "org.apache.poi.hpsf.Property.getSize()", "text": "Returns the property's size in bytes. This is always a multiple of 4. property's variant type.", "tags": "METHOD", "url": "exp/getSize.html"},
                {"title": "org.apache.poi.hpsf.Property.equals(Object)", "text": "Compares two properties", "tags": "METHOD", "url": "exp/equals.html"},
                {"title": "org.apache.poi.hpsf.Property.write(OutputStream, int)", "text": "Writes the property to an output stream. written that is not yet supported", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.setByteOrder(int)", "text": "Returns the property set stream's low-level \"byte order\" field.", "tags": "METHOD", "url": "exp/setByteOrder.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.setFormat(int)", "text": "Sets the property set stream's low-level \"format\" field.", "tags": "METHOD", "url": "exp/setFormat.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.setOSVersion(int)", "text": "Sets the property set stream's low-level \"OS version\" field.", "tags": "METHOD", "url": "exp/setOSVersion.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.setClassID(ClassID)", "text": "Sets the property set stream's low-level \"class ID\" field.", "tags": "METHOD", "url": "exp/setClassID.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.addSection(Section)", "text": "Adds a section to this property set", "tags": "METHOD", "url": "exp/addSection.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.clearSections()", "text": "Removes all sections from this property set.", "tags": "METHOD", "url": "exp/clearSections.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.getPropertySetIDMap()", "text": "The id to name mapping of the properties in this set.", "tags": "METHOD", "url": "exp/getPropertySetIDMap.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.isPropertySetStream(InputStream)", "text": "Checks whether an {@link InputStream} is in the Horrible", "tags": "METHOD", "url": "exp/isPropertySetStream.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.isPropertySetStream(byte[], int, int)", "text": "Checks whether a byte array is in the Horrible Property Set Format", "tags": "METHOD", "url": "exp/isPropertySetStream.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.init(byte[], int, int)", "text": "Initializes this {@link PropertySet} instance from a byte", "tags": "METHOD", "url": "exp/init.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.write(OutputStream)", "text": "Writes the property set to an output stream", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.write(DirectoryEntry, String)", "text": "Writes a property set to a document in a POI filesystem directory. same name in the directory the latter will be overwritten.", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.toInputStream()", "text": "Returns the contents of this property set stream as an input stream", "tags": "METHOD", "url": "exp/toInputStream.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.getPropertyStringValue(int)", "text": "Fetches the property with the given ID, then does its best to return it as a String", "tags": "METHOD", "url": "exp/getPropertyStringValue.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.getPropertyStringValue(Object)", "text": "Return the string representation of a property value", "tags": "METHOD", "url": "exp/getPropertyStringValue.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.isSummaryInformation()", "text": "Checks whether this {@link PropertySet} represents a Summary Information. represents a Summary Information, else {@code false}.", "tags": "METHOD", "url": "exp/isSummaryInformation.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.isDocumentSummaryInformation()", "text": "Checks whether this {@link PropertySet} is a Document Summary Information. represents a Document Summary Information, else {@code false}.", "tags": "METHOD", "url": "exp/isDocumentSummaryInformation.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.getProperties()", "text": "Convenience method returning the {@link Property} array contained in this", "tags": "METHOD", "url": "exp/getProperties.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.getProperty(int)", "text": "Convenience method returning the value of the property with the specified ID", "tags": "METHOD", "url": "exp/getProperty.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.getPropertyBooleanValue(int)", "text": "Convenience method returning the value of a boolean property with the", "tags": "METHOD", "url": "exp/getPropertyBooleanValue.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.getPropertyIntValue(int)", "text": "Convenience method returning the value of the numeric", "tags": "METHOD", "url": "exp/getPropertyIntValue.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.wasNull()", "text": "Checks whether the property which the last call to {@link", "tags": "METHOD", "url": "exp/wasNull.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.getFirstSection()", "text": "Gets the {@link PropertySet}'s first section.", "tags": "METHOD", "url": "exp/getFirstSection.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.getSingleSection()", "text": "If the {@link PropertySet} has only a single section this method returns it.", "tags": "METHOD", "url": "exp/getSingleSection.html"},
                {"title": "org.apache.poi.hpsf.PropertySet.equals(Object)", "text": "Returns {@code true} if the {@code PropertySet} is equal", "tags": "METHOD", "url": "exp/equals.html"},
                {"title": "org.apache.poi.hpsf.PropertySetFactory.create(DirectoryEntry, String)", "text": "Creates the most specific {@link PropertySet} from an entry", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.hpsf.PropertySetFactory.create(InputStream)", "text": "Creates the most specific {@link PropertySet} from an {@link", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.hpsf.PropertySetFactory.newSummaryInformation()", "text": "Creates a new summary information.", "tags": "METHOD", "url": "exp/newSummaryInformation.html"},
                {"title": "org.apache.poi.hpsf.PropertySetFactory.newDocumentSummaryInformation()", "text": "Creates a new document summary information.", "tags": "METHOD", "url": "exp/newDocumentSummaryInformation.html"},
                {"title": "org.apache.poi.hpsf.Section.propLen(TreeBidiMap<Long, Long>, Long, long)", "text": "Retrieves the length of the given property (by key)", "tags": "METHOD", "url": "exp/propLen.html"},
                {"title": "org.apache.poi.hpsf.Section.getFormatID()", "text": "Returns the format ID", "tags": "METHOD", "url": "exp/getFormatID.html"},
                {"title": "org.apache.poi.hpsf.Section.setFormatID(ClassID)", "text": "Sets the section's format ID.", "tags": "METHOD", "url": "exp/setFormatID.html"},
                {"title": "org.apache.poi.hpsf.Section.setFormatID(byte[])", "text": "Sets the section's format ID. are in big-endian format.", "tags": "METHOD", "url": "exp/setFormatID.html"},
                {"title": "org.apache.poi.hpsf.Section.getOffset()", "text": "Returns the offset of the section in the stream.", "tags": "METHOD", "url": "exp/getOffset.html"},
                {"title": "org.apache.poi.hpsf.Section.getPropertyCount()", "text": "Returns the number of properties in this section.", "tags": "METHOD", "url": "exp/getPropertyCount.html"},
                {"title": "org.apache.poi.hpsf.Section.getProperties()", "text": "Returns this section's properties.", "tags": "METHOD", "url": "exp/getProperties.html"},
                {"title": "org.apache.poi.hpsf.Section.setProperties(Property[])", "text": "Sets this section's properties. Any former values are overwritten.", "tags": "METHOD", "url": "exp/setProperties.html"},
                {"title": "org.apache.poi.hpsf.Section.getProperty(long)", "text": "Returns the value of the property with the specified ID", "tags": "METHOD", "url": "exp/getProperty.html"},
                {"title": "org.apache.poi.hpsf.Section.setProperty(int, String)", "text": "Sets the string value of the property with the specified ID. string.", "tags": "METHOD", "url": "exp/setProperty.html"},
                {"title": "org.apache.poi.hpsf.Section.setProperty(int, int)", "text": "Sets the int value of the property with the specified ID.", "tags": "METHOD", "url": "exp/setProperty.html"},
                {"title": "org.apache.poi.hpsf.Section.setProperty(int, long)", "text": "Sets the long value of the property with the specified ID.", "tags": "METHOD", "url": "exp/setProperty.html"},
                {"title": "org.apache.poi.hpsf.Section.setProperty(int, boolean)", "text": "Sets the boolean value of the property with the specified ID.", "tags": "METHOD", "url": "exp/setProperty.html"},
                {"title": "org.apache.poi.hpsf.Section.setProperty(int, long, Object)", "text": "Sets the value and the variant type of the property with the", "tags": "METHOD", "url": "exp/setProperty.html"},
                {"title": "org.apache.poi.hpsf.Section.setProperty(Property)", "text": "Sets a property.", "tags": "METHOD", "url": "exp/setProperty.html"},
                {"title": "org.apache.poi.hpsf.Section.setProperty(int, Object)", "text": "Sets a property. supported by HPSF.", "tags": "METHOD", "url": "exp/setProperty.html"},
                {"title": "org.apache.poi.hpsf.Section.getPropertyIntValue(long)", "text": "Returns the value of the numeric property with the specified", "tags": "METHOD", "url": "exp/getPropertyIntValue.html"},
                {"title": "org.apache.poi.hpsf.Section.getPropertyBooleanValue(int)", "text": "Returns the value of the boolean property with the specified", "tags": "METHOD", "url": "exp/getPropertyBooleanValue.html"},
                {"title": "org.apache.poi.hpsf.Section.setPropertyBooleanValue(int, boolean)", "text": "Sets the value of the boolean property with the specified ID.", "tags": "METHOD", "url": "exp/setPropertyBooleanValue.html"},
                {"title": "org.apache.poi.hpsf.Section.calcSize()", "text": "Calculates the section's size", "tags": "METHOD", "url": "exp/calcSize.html"},
                {"title": "org.apache.poi.hpsf.Section.wasNull()", "text": "Checks whether the property which the last call to {@link", "tags": "METHOD", "url": "exp/wasNull.html"},
                {"title": "org.apache.poi.hpsf.Section.getPIDString(long)", "text": "Returns the PID string associated with a property ID", "tags": "METHOD", "url": "exp/getPIDString.html"},
                {"title": "org.apache.poi.hpsf.Section.clear()", "text": "Removes all properties from the section including 0 (dictionary) and 1 (codepage).", "tags": "METHOD", "url": "exp/clear.html"},
                {"title": "org.apache.poi.hpsf.Section.setCodepage(int)", "text": "Sets the codepage.", "tags": "METHOD", "url": "exp/setCodepage.html"},
                {"title": "org.apache.poi.hpsf.Section.equals(Object)", "text": "Checks whether this section is equal to another object", "tags": "METHOD", "url": "exp/equals.html"},
                {"title": "org.apache.poi.hpsf.Section.removeProperty(long)", "text": "Removes a property.", "tags": "METHOD", "url": "exp/removeProperty.html"},
                {"title": "org.apache.poi.hpsf.Section.remove(Property[], int)", "text": "Removes a field from a property array. The resulting array is compactified and returned.", "tags": "METHOD", "url": "exp/remove.html"},
                {"title": "org.apache.poi.hpsf.Section.write(OutputStream)", "text": "Writes this section into an output stream", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hpsf.Section.writeDictionary(OutputStream, Map<Long, String>, int)", "text": "Writes the section's dictionary.", "tags": "METHOD", "url": "exp/writeDictionary.html"},
                {"title": "org.apache.poi.hpsf.Section.setDictionary(Map<Long, String>)", "text": "Sets the section's dictionary", "tags": "METHOD", "url": "exp/setDictionary.html"},
                {"title": "org.apache.poi.hpsf.Section.getDictionary()", "text": "Gets the section's dictionary", "tags": "METHOD", "url": "exp/getDictionary.html"},
                {"title": "org.apache.poi.hpsf.Section.getCodepage()", "text": "Gets the section's codepage, if any.", "tags": "METHOD", "url": "exp/getCodepage.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setTitle(String)", "text": "Sets the title.", "tags": "METHOD", "url": "exp/setTitle.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeTitle()", "text": "Removes the title.", "tags": "METHOD", "url": "exp/removeTitle.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getSubject()", "text": "Returns the subject (or {@code null}).", "tags": "METHOD", "url": "exp/getSubject.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setSubject(String)", "text": "Sets the subject.", "tags": "METHOD", "url": "exp/setSubject.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeSubject()", "text": "Removes the subject.", "tags": "METHOD", "url": "exp/removeSubject.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getAuthor()", "text": "Returns the author (or {@code null}).", "tags": "METHOD", "url": "exp/getAuthor.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setAuthor(String)", "text": "Sets the author.", "tags": "METHOD", "url": "exp/setAuthor.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeAuthor()", "text": "Removes the author.", "tags": "METHOD", "url": "exp/removeAuthor.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getKeywords()", "text": "Returns the keywords (or {@code null}).", "tags": "METHOD", "url": "exp/getKeywords.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setKeywords(String)", "text": "Sets the keywords.", "tags": "METHOD", "url": "exp/setKeywords.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeKeywords()", "text": "Removes the keywords.", "tags": "METHOD", "url": "exp/removeKeywords.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getComments()", "text": "Returns the comments (or {@code null}).", "tags": "METHOD", "url": "exp/getComments.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setComments(String)", "text": "Sets the comments.", "tags": "METHOD", "url": "exp/setComments.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeComments()", "text": "Removes the comments.", "tags": "METHOD", "url": "exp/removeComments.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getTemplate()", "text": "Returns the template (or {@code null}).", "tags": "METHOD", "url": "exp/getTemplate.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setTemplate(String)", "text": "Sets the template.", "tags": "METHOD", "url": "exp/setTemplate.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeTemplate()", "text": "Removes the template.", "tags": "METHOD", "url": "exp/removeTemplate.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getLastAuthor()", "text": "Returns the last author (or {@code null}).", "tags": "METHOD", "url": "exp/getLastAuthor.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setLastAuthor(String)", "text": "Sets the last author.", "tags": "METHOD", "url": "exp/setLastAuthor.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeLastAuthor()", "text": "Removes the last author.", "tags": "METHOD", "url": "exp/removeLastAuthor.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getRevNumber()", "text": "Returns the revision number (or {@code null}).", "tags": "METHOD", "url": "exp/getRevNumber.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setRevNumber(String)", "text": "Sets the revision number.", "tags": "METHOD", "url": "exp/setRevNumber.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeRevNumber()", "text": "Removes the revision number.", "tags": "METHOD", "url": "exp/removeRevNumber.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getEditTime()", "text": "Returns the total time spent in editing the document (or", "tags": "METHOD", "url": "exp/getEditTime.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setEditTime(long)", "text": "Sets the total time spent in editing the document.", "tags": "METHOD", "url": "exp/setEditTime.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeEditTime()", "text": "Remove the total time spent in editing the document.", "tags": "METHOD", "url": "exp/removeEditTime.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getLastPrinted()", "text": "Returns the last printed time (or {@code null}).", "tags": "METHOD", "url": "exp/getLastPrinted.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setLastPrinted(Date)", "text": "Sets the lastPrinted.", "tags": "METHOD", "url": "exp/setLastPrinted.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeLastPrinted()", "text": "Removes the lastPrinted.", "tags": "METHOD", "url": "exp/removeLastPrinted.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getCreateDateTime()", "text": "Returns the creation time (or {@code null}).", "tags": "METHOD", "url": "exp/getCreateDateTime.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setCreateDateTime(Date)", "text": "Sets the creation time.", "tags": "METHOD", "url": "exp/setCreateDateTime.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeCreateDateTime()", "text": "Removes the creation time.", "tags": "METHOD", "url": "exp/removeCreateDateTime.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getLastSaveDateTime()", "text": "Returns the last save time (or {@code null}).", "tags": "METHOD", "url": "exp/getLastSaveDateTime.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setLastSaveDateTime(Date)", "text": "Sets the total time spent in editing the document.", "tags": "METHOD", "url": "exp/setLastSaveDateTime.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeLastSaveDateTime()", "text": "Remove the total time spent in editing the document.", "tags": "METHOD", "url": "exp/removeLastSaveDateTime.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getPageCount()", "text": "Returns the page count or 0 if the {@link SummaryInformation} does", "tags": "METHOD", "url": "exp/getPageCount.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setPageCount(int)", "text": "Sets the page count.", "tags": "METHOD", "url": "exp/setPageCount.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removePageCount()", "text": "Removes the page count.", "tags": "METHOD", "url": "exp/removePageCount.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getWordCount()", "text": "Returns the word count or 0 if the {@link SummaryInformation} does not contain a word count.", "tags": "METHOD", "url": "exp/getWordCount.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setWordCount(int)", "text": "Sets the word count.", "tags": "METHOD", "url": "exp/setWordCount.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeWordCount()", "text": "Removes the word count.", "tags": "METHOD", "url": "exp/removeWordCount.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getCharCount()", "text": "Returns the character count or 0 if the {@link SummaryInformation} does not contain a char count.", "tags": "METHOD", "url": "exp/getCharCount.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setCharCount(int)", "text": "Sets the character count.", "tags": "METHOD", "url": "exp/setCharCount.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeCharCount()", "text": "Removes the character count.", "tags": "METHOD", "url": "exp/removeCharCount.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getThumbnail()", "text": "Returns the thumbnail (or {@code null}) <p>", "tags": "METHOD", "url": "exp/getThumbnail.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getThumbnailThumbnail()", "text": "Returns the thumbnail (or {@code null}), processed", "tags": "METHOD", "url": "exp/getThumbnailThumbnail.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setThumbnail(byte[])", "text": "Sets the thumbnail.", "tags": "METHOD", "url": "exp/setThumbnail.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeThumbnail()", "text": "Removes the thumbnail.", "tags": "METHOD", "url": "exp/removeThumbnail.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getApplicationName()", "text": "Returns the application name (or {@code null}).", "tags": "METHOD", "url": "exp/getApplicationName.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setApplicationName(String)", "text": "Sets the application name.", "tags": "METHOD", "url": "exp/setApplicationName.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeApplicationName()", "text": "Removes the application name.", "tags": "METHOD", "url": "exp/removeApplicationName.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.getSecurity()", "text": "Returns a security code which is one of the following values:", "tags": "METHOD", "url": "exp/getSecurity.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.setSecurity(int)", "text": "Sets the security code.", "tags": "METHOD", "url": "exp/setSecurity.html"},
                {"title": "org.apache.poi.hpsf.SummaryInformation.removeSecurity()", "text": "Removes the security code.", "tags": "METHOD", "url": "exp/removeSecurity.html"},
                {"title": "org.apache.poi.hpsf.Thumbnail.getThumbnail()", "text": "byte[]", "tags": "METHOD", "url": "exp/getThumbnail.html"},
                {"title": "org.apache.poi.hpsf.Thumbnail.setThumbnail(byte[])", "text": "byte[]", "tags": "METHOD", "url": "exp/setThumbnail.html"},
                {"title": "org.apache.poi.hpsf.Thumbnail.getClipboardFormatTag()", "text": "int {@link #CFTAG_WINDOWS CFTAG_WINDOWS}{@link #CFTAG_MACINTOSH CFTAG_MACINTOSH}{@link #CFTAG_FMTID CFTAG_FMTID}{@link #CFTAG_NODATA CFTAG_NODATA}", "tags": "METHOD", "url": "exp/getClipboardFormatTag.html"},
                {"title": "org.apache.poi.hpsf.Thumbnail.getClipboardFormat()", "text": "int {@link #CF_METAFILEPICT CF_METAFILEPICT}{@link #CF_DIB CF_DIB}{@link #CF_ENHMETAFILE CF_ENHMETAFILE}{@link #CF_BITMAP CF_BITMAP}", "tags": "METHOD", "url": "exp/getClipboardFormat.html"},
                {"title": "org.apache.poi.hpsf.Thumbnail.getThumbnailAsWMF()", "text": "byte[] byte[]", "tags": "METHOD", "url": "exp/getThumbnailAsWMF.html"},
                {"title": "org.apache.poi.hpsf.TypeWriter.writeToStream(OutputStream, Property[], int)", "text": "variant type.", "tags": "METHOD", "url": "exp/writeToStream.html"},
                {"title": "org.apache.poi.hpsf.UnicodeString.validLength(int, byte[], int)", "text": "Checks to see if the specified length seems valid,", "tags": "METHOD", "url": "exp/validLength.html"},
                {"title": "org.apache.poi.hpsf.Util.equals(Object[], Object[])", "text": "if they are not.", "tags": "METHOD", "url": "exp/equals.html"},
                {"title": "org.apache.poi.hpsf.Util.toString(Throwable)", "text": ".", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hpsf.Variant.getVariantLength(long)", "text": "variable, i", "tags": "METHOD", "url": "exp/getVariantLength.html"},
                {"title": "org.apache.poi.hpsf.VariantSupport.setLogUnsupportedTypes(boolean)", "text": "Specifies whether warnings about unsupported variant types are to be", "tags": "METHOD", "url": "exp/setLogUnsupportedTypes.html"},
                {"title": "org.apache.poi.hpsf.VariantSupport.isLogUnsupportedTypes()", "text": "Checks whether logging of unsupported variant types warning is turned", "tags": "METHOD", "url": "exp/isLogUnsupportedTypes.html"},
                {"title": "org.apache.poi.hpsf.VariantSupport.writeUnsupportedTypeMessage(UnsupportedVariantTypeException)", "text": "Writes a warning to {@code System", "tags": "METHOD", "url": "exp/writeUnsupportedTypeMessage.html"},
                {"title": "org.apache.poi.hpsf.VariantSupport.isSupportedType(int)", "text": "Checks whether HPSF supports the specified variant type", "tags": "METHOD", "url": "exp/isSupportedType.html"},
                {"title": "org.apache.poi.hpsf.VariantSupport.read(byte[], int, int, long, int)", "text": "Reads a variant type from a byte array", "tags": "METHOD", "url": "exp/read.html"},
                {"title": "org.apache.poi.hpsf.VariantSupport.write(OutputStream, long, Object, int)", "text": "Writes a variant value to an output stream", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hpsf.wellknown.PropertyIDMap.put(long, String)", "text": "returns the previous value associated with the specified", "tags": "METHOD", "url": "exp/put.html"},
                {"title": "org.apache.poi.hpsf.wellknown.SectionIDMap.getPIDString(byte[], long)", "text": "space of property ID strings and thus must be specified", "tags": "METHOD", "url": "exp/getPIDString.html"},
                {"title": "org.apache.poi.hpsf.wellknown.SectionIDMap.put(String, PropertyIDMap)", "text": "Associates the string representation of a section format ID with a {@link PropertyIDMap}", "tags": "METHOD", "url": "exp/put.html"},
                {"title": "org.apache.poi.hssf.dev.BiffViewer.createRecords(InputStream, PrintWriter, BiffRecordListener, boolean)", "text": "Create an array of records from an input stream", "tags": "METHOD", "url": "exp/createRecords.html"},
                {"title": "org.apache.poi.hssf.dev.BiffViewer.createRecord(RecordInputStream)", "text": "Essentially a duplicate of RecordFactory. Kept separate as not to screw up non-debug operations.", "tags": "METHOD", "url": "exp/createRecord.html"},
                {"title": "org.apache.poi.hssf.dev.CommandParseException.main(String[])", "text": "Method main with 1 argument just run straight biffview against given", "tags": "METHOD", "url": "exp/main.html"},
                {"title": "org.apache.poi.hssf.dev.BiffDumpingStream.hexDumpAligned(Writer, byte[], int, int, boolean)", "text": "Hex-dumps a portion of a byte array in typical format, also preserving dump-line alignment start of each line", "tags": "METHOD", "url": "exp/hexDumpAligned.html"},
                {"title": "org.apache.poi.hssf.dev.FormulaViewer.run()", "text": "Method run", "tags": "METHOD", "url": "exp/run.html"},
                {"title": "org.apache.poi.hssf.dev.FormulaViewer.parseFormulaRecord(FormulaRecord)", "text": "Method parseFormulaRecord", "tags": "METHOD", "url": "exp/parseFormulaRecord.html"},
                {"title": "org.apache.poi.hssf.dev.FormulaViewer.main(String[])", "text": "Method main pass me a filename and I'll try and parse the formulas from it", "tags": "METHOD", "url": "exp/main.html"},
                {"title": "org.apache.poi.hssf.eventmodel.ERFListener.processRecord(Record)", "text": "Process a Record.  This method is called by the EventRecordFactory when a record is returned.", "tags": "METHOD", "url": "exp/processRecord.html"},
                {"title": "org.apache.poi.hssf.eventmodel.EventRecordFactory.processRecord(Record)", "text": "sends the record event to all registered listeners. out of the event loop should the listener return false", "tags": "METHOD", "url": "exp/processRecord.html"},
                {"title": "org.apache.poi.hssf.eventmodel.EventRecordFactory.processRecords(InputStream)", "text": "Create an array of records from an input stream", "tags": "METHOD", "url": "exp/processRecords.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.AbortableHSSFListener.processRecord(Record)", "text": "This method, inherited from HSSFListener is implemented as a stub", "tags": "METHOD", "url": "exp/processRecord.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.AbortableHSSFListener.abortableProcessRecord(Record)", "text": "Process an HSSF Record", "tags": "METHOD", "url": "exp/abortableProcessRecord.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.dummyrecord.LastCellOfRowDummyRecord.getRow()", "text": "Returns the (0 based) number of the row we are currently working on.", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.dummyrecord.LastCellOfRowDummyRecord.getLastColumnNumber()", "text": "Returns the (0 based) number of the last column", "tags": "METHOD", "url": "exp/getLastColumnNumber.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.EventWorkbookBuilder.createStubWorkbook(ExternSheetRecord[], BoundSheetRecord[], SSTRecord)", "text": "Creates a stub Workbook from the supplied records, suitable for use with the {@link HSSFFormulaParser}", "tags": "METHOD", "url": "exp/createStubWorkbook.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.EventWorkbookBuilder.createStubWorkbook(ExternSheetRecord[], BoundSheetRecord[])", "text": "Creates a stub workbook from the supplied records, suitable for use with the {@link HSSFFormulaParser}", "tags": "METHOD", "url": "exp/createStubWorkbook.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.SheetRecordCollectingListener.processRecord(Record)", "text": "Process this record ourselves, and then pass it on to our child listener", "tags": "METHOD", "url": "exp/processRecord.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.SheetRecordCollectingListener.processRecordInternally(Record)", "text": "Process the record ourselves, but do not pass it on to the child Listener.", "tags": "METHOD", "url": "exp/processRecordInternally.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener.processRecord(Record)", "text": "Process this record ourselves, and then pass it on to our child listener", "tags": "METHOD", "url": "exp/processRecord.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener.processRecordInternally(Record)", "text": "Process the record ourselves, but do not pass it on to the child Listener.", "tags": "METHOD", "url": "exp/processRecordInternally.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener.formatNumberDateCell(CellValueRecordInterface)", "text": "Formats the given numeric of date cells contents as a String, in as", "tags": "METHOD", "url": "exp/formatNumberDateCell.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener.getFormatString(int)", "text": "Returns the format string, eg $##.##, for the given number format index.", "tags": "METHOD", "url": "exp/getFormatString.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener.getFormatString(CellValueRecordInterface)", "text": "Returns the format string, eg $##.##, used by your cell", "tags": "METHOD", "url": "exp/getFormatString.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.FormatTrackingHSSFListener.getFormatIndex(CellValueRecordInterface)", "text": "Returns the index of the format string, used by your cell, or -1 if none found", "tags": "METHOD", "url": "exp/getFormatIndex.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFRequest, POIFSFileSystem)", "text": "Processes a file into essentially record events.", "tags": "METHOD", "url": "exp/processWorkbookEvents.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processWorkbookEvents(HSSFRequest, DirectoryNode)", "text": "Processes a file into essentially record events.", "tags": "METHOD", "url": "exp/processWorkbookEvents.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFEventFactory.abortableProcessWorkbookEvents(HSSFRequest, POIFSFileSystem)", "text": "Processes a file into essentially record events.", "tags": "METHOD", "url": "exp/abortableProcessWorkbookEvents.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFEventFactory.abortableProcessWorkbookEvents(HSSFRequest, DirectoryNode)", "text": "Processes a file into essentially record events.", "tags": "METHOD", "url": "exp/abortableProcessWorkbookEvents.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFEventFactory.processEvents(HSSFRequest, InputStream)", "text": "Processes a DocumentInputStream into essentially Record events", "tags": "METHOD", "url": "exp/processEvents.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFEventFactory.abortableProcessEvents(HSSFRequest, InputStream)", "text": "Processes a DocumentInputStream into essentially Record events.", "tags": "METHOD", "url": "exp/abortableProcessEvents.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFEventFactory.genericProcessEvents(HSSFRequest, InputStream)", "text": "Processes a DocumentInputStream into essentially Record events.", "tags": "METHOD", "url": "exp/genericProcessEvents.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFListener.processRecord(Record)", "text": "process an HSSF Record. Called when a record occurs in an HSSF file.", "tags": "METHOD", "url": "exp/processRecord.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFRequest.addListener(HSSFListener, short)", "text": "add an event listener for a particular record type", "tags": "METHOD", "url": "exp/addListener.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFRequest.addListenerForAllRecords(HSSFListener)", "text": "This is the equivalent of calling addListener(myListener, sid) for EVERY", "tags": "METHOD", "url": "exp/addListenerForAllRecords.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFRequest.processRecord(Record)", "text": "Called by HSSFEventFactory, passes the Record to each listener associated with a record.sid.", "tags": "METHOD", "url": "exp/processRecord.html"},
                {"title": "org.apache.poi.hssf.eventusermodel.HSSFUserException.getReason()", "text": "null", "tags": "METHOD", "url": "exp/getReason.html"},
                {"title": "org.apache.poi.hssf.extractor.EventBasedExcelExtractor.getDocSummaryInformation()", "text": "Would return the document information metadata for the document, if we supported it", "tags": "METHOD", "url": "exp/getDocSummaryInformation.html"},
                {"title": "org.apache.poi.hssf.extractor.EventBasedExcelExtractor.getSummaryInformation()", "text": "Would return the summary information metadata for the document, if we supported it", "tags": "METHOD", "url": "exp/getSummaryInformation.html"},
                {"title": "org.apache.poi.hssf.extractor.EventBasedExcelExtractor.setIncludeCellComments(boolean)", "text": "Would control the inclusion of cell comments from the document, if we supported it", "tags": "METHOD", "url": "exp/setIncludeCellComments.html"},
                {"title": "org.apache.poi.hssf.extractor.EventBasedExcelExtractor.setIncludeHeadersFooters(boolean)", "text": "Would control the inclusion of headers and footers from the document, if we supported it", "tags": "METHOD", "url": "exp/setIncludeHeadersFooters.html"},
                {"title": "org.apache.poi.hssf.extractor.EventBasedExcelExtractor.setIncludeSheetNames(boolean)", "text": "Should sheet names be included? Default is true", "tags": "METHOD", "url": "exp/setIncludeSheetNames.html"},
                {"title": "org.apache.poi.hssf.extractor.EventBasedExcelExtractor.setFormulasNotResults(boolean)", "text": "Should we return the formula itself, and not the result it produces? Default is false", "tags": "METHOD", "url": "exp/setFormulasNotResults.html"},
                {"title": "org.apache.poi.hssf.extractor.EventBasedExcelExtractor.getText()", "text": "Retreives the text contents of the file", "tags": "METHOD", "url": "exp/getText.html"},
                {"title": "org.apache.poi.hssf.extractor.CommandArgs.main(String[])", "text": "Command line extractor.", "tags": "METHOD", "url": "exp/main.html"},
                {"title": "org.apache.poi.hssf.extractor.CommandArgs.setIncludeBlankCells(boolean)", "text": "Should blank cells be output? Default is to only", "tags": "METHOD", "url": "exp/setIncludeBlankCells.html"},
                {"title": "org.apache.poi.hssf.extractor.OldExcelExtractor.getBiffVersion()", "text": "The Biff version, largely corresponding to the Excel version", "tags": "METHOD", "url": "exp/getBiffVersion.html"},
                {"title": "org.apache.poi.hssf.extractor.OldExcelExtractor.getFileType()", "text": "The kind of the file, one of {@link BOFRecord#TYPE_WORKSHEET},", "tags": "METHOD", "url": "exp/getFileType.html"},
                {"title": "org.apache.poi.hssf.extractor.OldExcelExtractor.getText()", "text": "Retrieves the text contents of the file, as best we can for these old file formats", "tags": "METHOD", "url": "exp/getText.html"},
                {"title": "org.apache.poi.hssf.model.DrawingManager.allocateShapeId(short)", "text": "Allocates new shape id for the new drawing group id.", "tags": "METHOD", "url": "exp/allocateShapeId.html"},
                {"title": "org.apache.poi.hssf.model.DrawingManager2.clearDrawingGroups()", "text": "Clears the cached list of drawing groups", "tags": "METHOD", "url": "exp/clearDrawingGroups.html"},
                {"title": "org.apache.poi.hssf.model.DrawingManager2.createDgRecord()", "text": "Creates a new drawing group", "tags": "METHOD", "url": "exp/createDgRecord.html"},
                {"title": "org.apache.poi.hssf.model.DrawingManager2.allocateShapeId(short)", "text": "Allocates new shape id for the drawing group id.", "tags": "METHOD", "url": "exp/allocateShapeId.html"},
                {"title": "org.apache.poi.hssf.model.DrawingManager2.allocateShapeId(short, EscherDgRecord)", "text": "Allocates new shape id for the drawing group", "tags": "METHOD", "url": "exp/allocateShapeId.html"},
                {"title": "org.apache.poi.hssf.model.DrawingManager2.findNewDrawingGroupId()", "text": "Finds the next available (1 based) drawing group id", "tags": "METHOD", "url": "exp/findNewDrawingGroupId.html"},
                {"title": "org.apache.poi.hssf.model.DrawingManager2.getDgg()", "text": "Returns the drawing group container record", "tags": "METHOD", "url": "exp/getDgg.html"},
                {"title": "org.apache.poi.hssf.model.DrawingManager2.incrementDrawingsSaved()", "text": "Increment the drawing counter", "tags": "METHOD", "url": "exp/incrementDrawingsSaved.html"},
                {"title": "org.apache.poi.hssf.model.HSSFFormulaParser.parse(String, HSSFWorkbook)", "text": "Convenience method for parsing cell formulas. see {@link #parse(String, HSSFWorkbook, FormulaType, int)}", "tags": "METHOD", "url": "exp/parse.html"},
                {"title": "org.apache.poi.hssf.model.HSSFFormulaParser.parse(String, HSSFWorkbook, FormulaType, int)", "text": "The sheet index is required to resolve sheet-level names.  means that the scope of the name will be ignored and  the parser will match named ranges only by name", "tags": "METHOD", "url": "exp/parse.html"},
                {"title": "org.apache.poi.hssf.model.HSSFFormulaParser.toFormulaString(HSSFWorkbook, Ptg[])", "text": "Static method to convert an array of {@link Ptg}s in RPN order to a human readable string format in infix mode.", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.hssf.model.InternalSheet.createSheet(RecordStream)", "text": "read support  (offset used as starting point for search) for low level", "tags": "METHOD", "url": "exp/createSheet.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.cloneSheet()", "text": "Clones the low level records of this sheet and returns the new sheet instance", "tags": "METHOD", "url": "exp/cloneSheet.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createSheet()", "text": "Creates a sheet with all the usual records minus values and the \"index\"", "tags": "METHOD", "url": "exp/createSheet.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.updateFormulasAfterCellShift(FormulaShifter, int)", "text": "Updates formulas in cells and conditional formats due to moving of cells", "tags": "METHOD", "url": "exp/updateFormulasAfterCellShift.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setDimensions(int, short, int, short)", "text": "Per an earlier reported bug in working with Andy Khan's excel read library", "tags": "METHOD", "url": "exp/setDimensions.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getSizeOfInitialSheetRecords(int)", "text": "'initial sheet records' are between INDEX and the 'Row Blocks'", "tags": "METHOD", "url": "exp/getSizeOfInitialSheetRecords.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.addValueRecord(int, CellValueRecordInterface)", "text": "Adds a value record to the sheet's contained binary records", "tags": "METHOD", "url": "exp/addValueRecord.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.removeValueRecord(int, CellValueRecordInterface)", "text": "remove a value record from the records array. This method is not loc sensitive, it resets loc to = dimsloc so no worries.", "tags": "METHOD", "url": "exp/removeValueRecord.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.removeRow(RowRecord)", "text": "Removes a row record This method is not loc sensitive, it resets loc to = dimsloc so no worries.", "tags": "METHOD", "url": "exp/removeRow.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getCellValueIterator()", "text": "Get all the value records (from LOC)", "tags": "METHOD", "url": "exp/getCellValueIterator.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getNextRow()", "text": "get the NEXT RowRecord (from LOC)", "tags": "METHOD", "url": "exp/getNextRow.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getRow(int)", "text": "get the NEXT (from LOC) RowRecord where rownumber matches the given rownum", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createCalcMode()", "text": "creates the CalcMode record and sets it to 1 (automatic formula caculation)", "tags": "METHOD", "url": "exp/createCalcMode.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createCalcCount()", "text": "creates the CalcCount record and sets it to 100 (default number of iterations)", "tags": "METHOD", "url": "exp/createCalcCount.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createRefMode()", "text": "creates the RefMode record and sets it to A1 Mode (default reference mode)", "tags": "METHOD", "url": "exp/createRefMode.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createIteration()", "text": "creates the Iteration record and sets it to false (don't iteratively calculate formulas)", "tags": "METHOD", "url": "exp/createIteration.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createDelta()", "text": "creates the Delta record and sets it to 0.0010 (default accuracy)", "tags": "METHOD", "url": "exp/createDelta.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createSaveRecalc()", "text": "creates the SaveRecalc record and sets it to true (recalculate before saving)", "tags": "METHOD", "url": "exp/createSaveRecalc.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createPrintHeaders()", "text": "creates the PrintHeaders record and sets it to false (we don't create headers yet so why print them)", "tags": "METHOD", "url": "exp/createPrintHeaders.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createPrintGridlines()", "text": "creates the PrintGridlines record and sets it to false (that makes for ugly sheets).  As far as I can tell this does the same thing as the GridsetRecord", "tags": "METHOD", "url": "exp/createPrintGridlines.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createGridset()", "text": "creates the Gridset record and sets it to true (user has mucked with the gridlines)", "tags": "METHOD", "url": "exp/createGridset.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createGuts()", "text": "creates the Guts record and sets leftrowtopcol guttter and rowlevelmaxcollevelmax to 0", "tags": "METHOD", "url": "exp/createGuts.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createDefaultRowHeight()", "text": "creates the DefaultRowHeight Record and sets its options to 0 and rowheight to 0xff", "tags": "METHOD", "url": "exp/createDefaultRowHeight.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createWSBool()", "text": "creates the WSBoolRecord and sets its values to defaults", "tags": "METHOD", "url": "exp/createWSBool.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createDefaultColWidth()", "text": "creates the DefaultColWidth Record and sets it to 8", "tags": "METHOD", "url": "exp/createDefaultColWidth.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getDefaultColumnWidth()", "text": "get the default column width for the sheet (if the columns do not define their own width)", "tags": "METHOD", "url": "exp/getDefaultColumnWidth.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setGridsPrinted(boolean)", "text": "set whether gridlines printed or not.", "tags": "METHOD", "url": "exp/setGridsPrinted.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setDefaultColumnWidth(int)", "text": "set the default column width for the sheet (if the columns do not define their own width)", "tags": "METHOD", "url": "exp/setDefaultColumnWidth.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setDefaultRowHeight(short)", "text": "set the default row height for the sheet (if the rows do not define their own height)", "tags": "METHOD", "url": "exp/setDefaultRowHeight.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getDefaultRowHeight()", "text": "get the default row height for the sheet (if the rows do not define their own height)", "tags": "METHOD", "url": "exp/getDefaultRowHeight.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getColumnWidth(int)", "text": "get the width of a given column in units of 1256th of a character width", "tags": "METHOD", "url": "exp/getColumnWidth.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getXFIndexForColAt(short)", "text": "get the index to the ExtendedFormatRecord \"associated\" with", "tags": "METHOD", "url": "exp/getXFIndexForColAt.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setColumnWidth(int, int)", "text": "set the width for a given column in 1256th of a character width units", "tags": "METHOD", "url": "exp/setColumnWidth.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.isColumnHidden(int)", "text": "Get the hidden property for a given column.", "tags": "METHOD", "url": "exp/isColumnHidden.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setColumnHidden(int, boolean)", "text": "Get the hidden property for a given column.", "tags": "METHOD", "url": "exp/setColumnHidden.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.groupColumnRange(int, int, boolean)", "text": "Creates an outline group for the specified columns. if false indenting will be removed by one level.", "tags": "METHOD", "url": "exp/groupColumnRange.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createDimensions()", "text": "creates the Dimensions Record and sets it to bogus values (you should set this yourself or let the high level API do it for you)", "tags": "METHOD", "url": "exp/createDimensions.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createWindowTwo()", "text": "creates the WindowTwo Record and sets it to:", "tags": "METHOD", "url": "exp/createWindowTwo.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createSelection()", "text": "Creates the Selection record and sets it to nothing selected", "tags": "METHOD", "url": "exp/createSelection.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setLeftCol(short)", "text": "Sets the left column to show in desktop window pane.", "tags": "METHOD", "url": "exp/setLeftCol.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getActiveCellRow()", "text": "Returns the active row", "tags": "METHOD", "url": "exp/getActiveCellRow.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setActiveCellRow(int)", "text": "Sets the active row", "tags": "METHOD", "url": "exp/setActiveCellRow.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setActiveCellCol(short)", "text": "Sets the active column", "tags": "METHOD", "url": "exp/setActiveCellCol.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getGridsetRecord()", "text": "Gets the gridset record for this sheet.", "tags": "METHOD", "url": "exp/getGridsetRecord.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.findFirstRecordBySid(short)", "text": "Returns the first occurrence of a record matching a particular sid.", "tags": "METHOD", "url": "exp/findFirstRecordBySid.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setSCLRecord(SCLRecord)", "text": "Sets the SCL record or creates it in the correct place if it does not already exist.", "tags": "METHOD", "url": "exp/setSCLRecord.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.findFirstRecordLocBySid(short)", "text": "Finds the first occurrence of a record matching a particular sid and", "tags": "METHOD", "url": "exp/findFirstRecordLocBySid.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getPrintGridlines()", "text": "Returns the PrintGridlinesRecord.", "tags": "METHOD", "url": "exp/getPrintGridlines.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setPrintGridlines(PrintGridlinesRecord)", "text": "Sets the PrintGridlinesRecord.", "tags": "METHOD", "url": "exp/setPrintGridlines.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getPrintHeaders()", "text": "Returns the PrintHeadersRecord.", "tags": "METHOD", "url": "exp/getPrintHeaders.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setPrintHeaders(PrintHeadersRecord)", "text": "Sets the PrintHeadersRecord.", "tags": "METHOD", "url": "exp/setPrintHeaders.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setSelected(boolean)", "text": "Sets whether the sheet is selected", "tags": "METHOD", "url": "exp/setSelected.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createFreezePane(int, int, int, int)", "text": "Creates a split (freezepane). Any existing freezepane or split pane is overwritten.", "tags": "METHOD", "url": "exp/createFreezePane.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.createSplitPane(int, int, int, int, int)", "text": "Creates a split pane. Any existing freezepane or split pane is overwritten. PANE_UPPER_RIGHT, PANE_LOWER_LEFT, PANE_UPPER_LEFT", "tags": "METHOD", "url": "exp/createSplitPane.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getPaneInformation()", "text": "Returns the information regarding the currently configured pane (split or freeze).", "tags": "METHOD", "url": "exp/getPaneInformation.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setDisplayGridlines(boolean)", "text": "Sets whether the gridlines are shown in a viewer.", "tags": "METHOD", "url": "exp/setDisplayGridlines.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setDisplayFormulas(boolean)", "text": "Sets whether the formulas are shown in a viewer.", "tags": "METHOD", "url": "exp/setDisplayFormulas.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.isDisplayFormulas()", "text": "Returns if formulas are displayed.", "tags": "METHOD", "url": "exp/isDisplayFormulas.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setDisplayRowColHeadings(boolean)", "text": "Sets whether the RowColHeadings are shown in a viewer.", "tags": "METHOD", "url": "exp/setDisplayRowColHeadings.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.isDisplayRowColHeadings()", "text": "Returns if RowColHeadings are displayed.", "tags": "METHOD", "url": "exp/isDisplayRowColHeadings.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.setPrintRowColHeadings(boolean)", "text": "Sets whether the RowColHeadings are shown in a viewer.", "tags": "METHOD", "url": "exp/setPrintRowColHeadings.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.isPrintRowColHeadings()", "text": "Returns if RowColHeadings are displayed.", "tags": "METHOD", "url": "exp/isPrintRowColHeadings.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.aggregateDrawingRecords(DrawingManager2, boolean)", "text": "Finds the DrawingRecord for our sheet, and", "tags": "METHOD", "url": "exp/aggregateDrawingRecords.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.preSerialize()", "text": "Perform any work necessary before the sheet is about to be serialized", "tags": "METHOD", "url": "exp/preSerialize.html"},
                {"title": "org.apache.poi.hssf.model.RecordCloner.getNoteRecords()", "text": "Get the {@link NoteRecord}s (related to cell comments) for this sheet", "tags": "METHOD", "url": "exp/getNoteRecords.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createWorkbook(List<Record>)", "text": "read support  for low level", "tags": "METHOD", "url": "exp/createWorkbook.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createWorkbook()", "text": "Creates an empty workbook object with three blank sheets and all the empty fields.  Use this to create a workbook from scratch.", "tags": "METHOD", "url": "exp/createWorkbook.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getSpecificBuiltinRecord(byte, int)", "text": "Retrieves the Builtin NameRecord that matches the name and index There shouldn't be too many names to make the sequential search too slow", "tags": "METHOD", "url": "exp/getSpecificBuiltinRecord.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.removeBuiltinRecord(byte, int)", "text": "Removes the specified Builtin NameRecord that matches the name and index", "tags": "METHOD", "url": "exp/removeBuiltinRecord.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getFontIndex(FontRecord)", "text": "Retrieves the index of the given font", "tags": "METHOD", "url": "exp/getFontIndex.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.removeFontRecord(FontRecord)", "text": "Removes the given font record from the", "tags": "METHOD", "url": "exp/removeFontRecord.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getBackupRecord()", "text": "Returns the position of the backup record.", "tags": "METHOD", "url": "exp/getBackupRecord.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.setSheetName(int, String)", "text": "sets the name for a given sheet", "tags": "METHOD", "url": "exp/setSheetName.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.doesContainsSheetName(String, int)", "text": "Determines whether a workbook contains the provided sheet name.  For the purpose of comparison, long names are truncated to 31 chars.", "tags": "METHOD", "url": "exp/doesContainsSheetName.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.setSheetOrder(String, int)", "text": "sets the order of appearance for a given sheet.", "tags": "METHOD", "url": "exp/setSheetOrder.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getSheetName(int)", "text": "gets the name for a given sheet.", "tags": "METHOD", "url": "exp/getSheetName.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.isSheetHidden(int)", "text": "Gets the hidden flag for a given sheet", "tags": "METHOD", "url": "exp/isSheetHidden.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.isSheetVeryHidden(int)", "text": "Gets the very hidden flag for a given sheet", "tags": "METHOD", "url": "exp/isSheetVeryHidden.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getSheetVisibility(int)", "text": "Gets the hidden flag for a given sheet", "tags": "METHOD", "url": "exp/getSheetVisibility.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.setSheetHidden(int, boolean)", "text": "Hide or unhide a sheet", "tags": "METHOD", "url": "exp/setSheetHidden.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.setSheetHidden(int, SheetVisibility)", "text": "Hide or unhide a sheet.", "tags": "METHOD", "url": "exp/setSheetHidden.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getSheetIndex(String)", "text": "get the sheet's index", "tags": "METHOD", "url": "exp/getSheetIndex.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.checkSheets(int)", "text": "if we're trying to address one more sheet than we have, go ahead and add it!  if we're trying to address >1 more than we have throw an exception!", "tags": "METHOD", "url": "exp/checkSheets.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.fixTabIdRecord()", "text": "make the tabid record look like the current situation.", "tags": "METHOD", "url": "exp/fixTabIdRecord.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.removeExFormatRecord(ExtendedFormatRecord)", "text": "Removes the given ExtendedFormatRecord record from the", "tags": "METHOD", "url": "exp/removeExFormatRecord.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.removeExFormatRecord(int)", "text": "Removes ExtendedFormatRecord record with given index from the", "tags": "METHOD", "url": "exp/removeExFormatRecord.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getStyleRecord(int)", "text": "Returns the StyleRecord for the given", "tags": "METHOD", "url": "exp/getStyleRecord.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createStyleRecord(int)", "text": "Creates a new StyleRecord, for the given Extended", "tags": "METHOD", "url": "exp/createStyleRecord.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getSSTString(int)", "text": "given an index into the SST table, this function returns the corresponding String value", "tags": "METHOD", "url": "exp/getSSTString.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.serialize(int, byte[])", "text": "Serializes all records int the worksheet section into a big byte array. Use this to write the Workbook out.", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.preSerialize()", "text": "Perform any work necessary before the workbook is about to be serialized. Include in it ant code that modifies the workbook record stream and affects its size.", "tags": "METHOD", "url": "exp/preSerialize.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createWriteAccess()", "text": "creates the WriteAccess record containing the logged in user's name", "tags": "METHOD", "url": "exp/createWriteAccess.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createTabId()", "text": "creates the TabId record containing an array", "tags": "METHOD", "url": "exp/createTabId.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createFnGroupCount()", "text": "creates the FnGroupCount record containing the Magic number constant of 14.", "tags": "METHOD", "url": "exp/createFnGroupCount.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createWindowOne()", "text": "creates the WindowOne record with the following magic values:", "tags": "METHOD", "url": "exp/createWindowOne.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createBackup()", "text": "creates the Backup record with backup set to 0. (loose the data, who cares)", "tags": "METHOD", "url": "exp/createBackup.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createHideObj()", "text": "creates the HideObj record with hide object set to 0. (don't hide)", "tags": "METHOD", "url": "exp/createHideObj.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createDateWindow1904()", "text": "creates the DateWindow1904 record with windowing set to 0. (don't window)", "tags": "METHOD", "url": "exp/createDateWindow1904.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createPrecision()", "text": "creates the Precision record with precision set to true. (full precision)", "tags": "METHOD", "url": "exp/createPrecision.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createBookBool()", "text": "creates the BookBool record with saveLinkValues set to 0. (don't save link values)", "tags": "METHOD", "url": "exp/createBookBool.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createFont()", "text": "creates a Font record with the following magic values:", "tags": "METHOD", "url": "exp/createFont.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createFormat(int)", "text": "Creates a FormatRecord object a file as M$ Excel would create it.)", "tags": "METHOD", "url": "exp/createFormat.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createExtendedFormat(int)", "text": "Creates an ExtendedFormatRecord object a file as MS Excel would create it.)", "tags": "METHOD", "url": "exp/createExtendedFormat.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createExtendedFormat()", "text": "creates an default cell type ExtendedFormatRecord object.", "tags": "METHOD", "url": "exp/createExtendedFormat.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createStyle(int)", "text": "Creates a StyleRecord object a file as MS Excel would create it.", "tags": "METHOD", "url": "exp/createStyle.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createPalette()", "text": "Creates a palette record initialized to the default palette", "tags": "METHOD", "url": "exp/createPalette.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createBoundSheet(int)", "text": "create a \"bound sheet\" or \"bundlesheet\" (depending who you ask) record Always sets the sheet's bof to 0.  You'll need to set that yourself.", "tags": "METHOD", "url": "exp/createBoundSheet.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createCountry()", "text": "Creates the Country record with the default country set to 1 and current country set to 7 in case of russian locale (\"ru_RU\") and 1 otherwise", "tags": "METHOD", "url": "exp/createCountry.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createExtendedSST()", "text": "Creates the ExtendedSST record with numstrings per bucket set to 0x8", "tags": "METHOD", "url": "exp/createExtendedSST.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getOrCreateLinkTable()", "text": "lazy initialization Note - creating the link table causes creation of 1 EXTERNALBOOK and 1 EXTERNALSHEET record", "tags": "METHOD", "url": "exp/getOrCreateLinkTable.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.findSheetFirstNameFromExternSheet(int)", "text": "Finds the first sheet name by his extern sheet index", "tags": "METHOD", "url": "exp/findSheetFirstNameFromExternSheet.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getFirstSheetIndexFromExternSheetIndex(int)", "text": "Finds the (first) sheet index for a particular external sheet number.", "tags": "METHOD", "url": "exp/getFirstSheetIndexFromExternSheetIndex.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getLastSheetIndexFromExternSheetIndex(int)", "text": "Finds the last sheet index for a particular external sheet number, which may be the same as the first (except for multi-sheet references)", "tags": "METHOD", "url": "exp/getLastSheetIndexFromExternSheetIndex.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.checkExternSheet(int)", "text": "Returns the extern sheet number for specific sheet number. If this sheet doesn't exist in extern sheet, add it", "tags": "METHOD", "url": "exp/checkExternSheet.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.checkExternSheet(int, int)", "text": "Returns the extern sheet number for specific range of sheets. If this sheet range doesn't exist in extern sheet, add it", "tags": "METHOD", "url": "exp/checkExternSheet.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getNumNames()", "text": "gets the total number of names", "tags": "METHOD", "url": "exp/getNumNames.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getNameRecord(int)", "text": "gets the name record", "tags": "METHOD", "url": "exp/getNameRecord.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getNameCommentRecord(NameRecord)", "text": "gets the name comment record", "tags": "METHOD", "url": "exp/getNameCommentRecord.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createName()", "text": "creates new name", "tags": "METHOD", "url": "exp/createName.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.addName(NameRecord)", "text": "adds a name record", "tags": "METHOD", "url": "exp/addName.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createBuiltInName(byte, int)", "text": "Generates a NameRecord to represent a built-in region", "tags": "METHOD", "url": "exp/createBuiltInName.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.removeName(int)", "text": "removes the name", "tags": "METHOD", "url": "exp/removeName.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.updateNameCommentRecordCache(NameCommentRecord)", "text": "If a {@link NameCommentRecord} is added or the name it references is renamed, then this will update the lookup cache for it.", "tags": "METHOD", "url": "exp/updateNameCommentRecordCache.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getFormat(String, boolean)", "text": "Returns a format index that matches the passed in format.  It does not tie into HSSFDataFormat.", "tags": "METHOD", "url": "exp/getFormat.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getFormats()", "text": "Returns the list of FormatRecords in the workbook.", "tags": "METHOD", "url": "exp/getFormats.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createFormat(String)", "text": "Creates a FormatRecord, inserts it, and returns the index code.", "tags": "METHOD", "url": "exp/createFormat.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.findFirstRecordBySid(short)", "text": "Returns the first occurance of a record matching a particular sid.", "tags": "METHOD", "url": "exp/findFirstRecordBySid.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.findFirstRecordLocBySid(short)", "text": "Returns the index of a record matching a particular sid.", "tags": "METHOD", "url": "exp/findFirstRecordLocBySid.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.findNextRecordBySid(short, int)", "text": "Returns the next occurance of a record matching a particular sid.", "tags": "METHOD", "url": "exp/findNextRecordBySid.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.isUsing1904DateWindowing()", "text": "Whether date windowing is based on 121904 or 111900. Some versions of Excel (Mac) can save workbooks using 1904 date windowing.", "tags": "METHOD", "url": "exp/isUsing1904DateWindowing.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getCustomPalette()", "text": "Returns the custom palette in use for this workbook; if a custom palette record does not exist, then it is created.", "tags": "METHOD", "url": "exp/getCustomPalette.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.findDrawingGroup()", "text": "Finds the primary drawing group, if one already exists", "tags": "METHOD", "url": "exp/findDrawingGroup.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.createDrawingGroup()", "text": "Creates a primary drawing group record.  If it already exists then it's modified.", "tags": "METHOD", "url": "exp/createDrawingGroup.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.isWriteProtected()", "text": "is the workbook protected with a password (not encrypted)?", "tags": "METHOD", "url": "exp/isWriteProtected.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.writeProtectWorkbook(String, String)", "text": "protect a workbook with a password (not encypted, just sets writeprotect flags and the password.", "tags": "METHOD", "url": "exp/writeProtectWorkbook.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.unwriteProtectWorkbook()", "text": "removes the write protect flag", "tags": "METHOD", "url": "exp/unwriteProtectWorkbook.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.cloneDrawings(InternalSheet)", "text": "Check if the cloned sheet has drawings. If yes, then allocate a new drawing group ID and re-generate shape IDs", "tags": "METHOD", "url": "exp/cloneDrawings.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.updateNamesAfterCellShift(FormulaShifter)", "text": "Updates named ranges due to moving of cells", "tags": "METHOD", "url": "exp/updateNamesAfterCellShift.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.getRecalcId()", "text": "Get or create RecalcIdRecord", "tags": "METHOD", "url": "exp/getRecalcId.html"},
                {"title": "org.apache.poi.hssf.model.InternalWorkbook.changeExternalReference(String, String)", "text": "Changes an external referenced file to another file", "tags": "METHOD", "url": "exp/changeExternalReference.html"},
                {"title": "org.apache.poi.hssf.model.ExternalBookBlock.getIndexOfName(String)", "text": "Performs case-insensitive search", "tags": "METHOD", "url": "exp/getIndexOfName.html"},
                {"title": "org.apache.poi.hssf.model.ExternalBookBlock.getRecordCount()", "text": "TODO - would not be required if calling code used RecordStream or similar", "tags": "METHOD", "url": "exp/getRecordCount.html"},
                {"title": "org.apache.poi.hssf.model.ExternalBookBlock.nameAlreadyExists(NameRecord)", "text": "checks if the given name is already included in the linkTable", "tags": "METHOD", "url": "exp/nameAlreadyExists.html"},
                {"title": "org.apache.poi.hssf.model.ExternalBookBlock.findFirstRecordLocBySid(short)", "text": "copied from Workbook", "tags": "METHOD", "url": "exp/findFirstRecordLocBySid.html"},
                {"title": "org.apache.poi.hssf.model.ExternalBookBlock.getNameXPtg(String, int)", "text": "Finds the external name definition for the given name,", "tags": "METHOD", "url": "exp/getNameXPtg.html"},
                {"title": "org.apache.poi.hssf.model.ExternalBookBlock.addNameXPtg(String)", "text": "Register an external name in this workbook", "tags": "METHOD", "url": "exp/addNameXPtg.html"},
                {"title": "org.apache.poi.hssf.model.ExternalBookBlock.changeExternalReference(String, String)", "text": "Changes an external referenced file to another file", "tags": "METHOD", "url": "exp/changeExternalReference.html"},
                {"title": "org.apache.poi.hssf.model.RecordOrderer.addNewSheetRecord(List<RecordBase>, RecordBase)", "text": "Adds the specified new record in the correct place in sheet records list", "tags": "METHOD", "url": "exp/addNewSheetRecord.html"},
                {"title": "org.apache.poi.hssf.model.RecordOrderer.getWorksheetProtectionBlockInsertPos(List<RecordBase>)", "text": "Finds the index where the protection block should be inserted", "tags": "METHOD", "url": "exp/getWorksheetProtectionBlockInsertPos.html"},
                {"title": "org.apache.poi.hssf.model.RecordOrderer.isProtectionSubsequentRecord(Object)", "text": "These records may occur between the 'Worksheet Protection Block' and DIMENSION:", "tags": "METHOD", "url": "exp/isProtectionSubsequentRecord.html"},
                {"title": "org.apache.poi.hssf.model.RecordOrderer.findInsertPosForNewCondFormatTable(List<RecordBase>)", "text": "Find correct position to add new CFHeader record", "tags": "METHOD", "url": "exp/findInsertPosForNewCondFormatTable.html"},
                {"title": "org.apache.poi.hssf.model.RecordOrderer.findDataValidationTableInsertPos(List<RecordBase>)", "text": "Finds the index where the sheet validations header record should be inserted", "tags": "METHOD", "url": "exp/findDataValidationTableInsertPos.html"},
                {"title": "org.apache.poi.hssf.model.RecordOrderer.getDimensionsIndex(List<RecordBase>)", "text": "DIMENSIONS record is always present", "tags": "METHOD", "url": "exp/getDimensionsIndex.html"},
                {"title": "org.apache.poi.hssf.model.RecordOrderer.isEndOfRowBlock(int)", "text": "It is assumed that at least one row or cell value record has been found prior to the current record", "tags": "METHOD", "url": "exp/isEndOfRowBlock.html"},
                {"title": "org.apache.poi.hssf.model.RecordOrderer.isRowBlockRecord(int)", "text": "of the sheet records", "tags": "METHOD", "url": "exp/isRowBlockRecord.html"},
                {"title": "org.apache.poi.hssf.model.RowBlocksReader.getLooseMergedCells()", "text": "Some unconventional apps place {@link MergeCellsRecord}s within the row block.  They actually should be in the {@link MergedCellsTable} which is much later (see bug 45699).", "tags": "METHOD", "url": "exp/getLooseMergedCells.html"},
                {"title": "org.apache.poi.hssf.model.RowBlocksReader.getPlainRecordStream()", "text": "non-{@link ArrayRecord} and non-{@link TableRecord} Records.", "tags": "METHOD", "url": "exp/getPlainRecordStream.html"},
                {"title": "org.apache.poi.hssf.model.WorkbookRecordList.remove(Object)", "text": "Find the given record in the record list by identity and removes it", "tags": "METHOD", "url": "exp/remove.html"},
                {"title": "org.apache.poi.hssf.model.WorkbookRecordList.getNamepos()", "text": "Returns the namepos.", "tags": "METHOD", "url": "exp/getNamepos.html"},
                {"title": "org.apache.poi.hssf.model.WorkbookRecordList.getSupbookpos()", "text": "Returns the supbookpos.", "tags": "METHOD", "url": "exp/getSupbookpos.html"},
                {"title": "org.apache.poi.hssf.model.WorkbookRecordList.setNamepos(int)", "text": "Sets the namepos.", "tags": "METHOD", "url": "exp/setNamepos.html"},
                {"title": "org.apache.poi.hssf.model.WorkbookRecordList.setSupbookpos(int)", "text": "Sets the supbookpos.", "tags": "METHOD", "url": "exp/setSupbookpos.html"},
                {"title": "org.apache.poi.hssf.model.WorkbookRecordList.getExternsheetPos()", "text": "Returns the externsheetPos.", "tags": "METHOD", "url": "exp/getExternsheetPos.html"},
                {"title": "org.apache.poi.hssf.model.WorkbookRecordList.setExternsheetPos(int)", "text": "Sets the externsheetPos.", "tags": "METHOD", "url": "exp/setExternsheetPos.html"},
                {"title": "org.apache.poi.hssf.record.AbstractEscherHolderRecord.getEscherContainer()", "text": "If we have a EscherContainerRecord as one of our", "tags": "METHOD", "url": "exp/getEscherContainer.html"},
                {"title": "org.apache.poi.hssf.record.AbstractEscherHolderRecord.findFirstWithId(short)", "text": "Descends into all our children, returning the", "tags": "METHOD", "url": "exp/findFirstWithId.html"},
                {"title": "org.apache.poi.hssf.record.AbstractEscherHolderRecord.join(AbstractEscherHolderRecord)", "text": "Big drawing group records are split but it's easier to deal with them as a whole group so we need to join them together.", "tags": "METHOD", "url": "exp/join.html"},
                {"title": "org.apache.poi.hssf.record.AbstractEscherHolderRecord.decode()", "text": "Convert raw data to escher records.", "tags": "METHOD", "url": "exp/decode.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CFRecordsAggregate.createCFAggregate(RecordStream)", "text": "Create CFRecordsAggregate from a list of CF Records", "tags": "METHOD", "url": "exp/createCFAggregate.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CFRecordsAggregate.cloneCFAggregate()", "text": "Create a deep clone of the record", "tags": "METHOD", "url": "exp/cloneCFAggregate.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CFRecordsAggregate.toString()", "text": "String representation of CFRecordsAggregate", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CIRComparator.insertColumn(ColumnInfoRecord)", "text": "Inserts a column into the aggregate (at the end of the list).", "tags": "METHOD", "url": "exp/insertColumn.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CIRComparator.insertColumn(int, ColumnInfoRecord)", "text": "Inserts a column into the aggregate (at the position specified by .", "tags": "METHOD", "url": "exp/insertColumn.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CIRComparator.isColumnGroupCollapsed(int)", "text": "'Collapsed' state is stored in a single column col info record immediately after the outline group", "tags": "METHOD", "url": "exp/isColumnGroupCollapsed.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CIRComparator.setGroupHidden(int, int, boolean)", "text": "Sets all adjacent columns of the same outline level to the specified hidden status.", "tags": "METHOD", "url": "exp/setGroupHidden.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CIRComparator.setColumnInfoFields(ColumnInfoRecord, Short, Integer, Integer, Boolean, Boolean)", "text": "Sets all non null fields into the  parameter.", "tags": "METHOD", "url": "exp/setColumnInfoFields.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CIRComparator.attemptMergeColInfoRecords(int)", "text": "Attempts to merge the col info record at the specified index with either or both of its neighbours", "tags": "METHOD", "url": "exp/attemptMergeColInfoRecords.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CIRComparator.mergeColInfoRecords(ColumnInfoRecord, ColumnInfoRecord)", "text": "merges two column info records (if they are adjacent and have the same formatting, etc)", "tags": "METHOD", "url": "exp/mergeColInfoRecords.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CIRComparator.groupColumnRange(int, int, boolean)", "text": "Creates an outline group for the specified columns, by setting the level", "tags": "METHOD", "url": "exp/groupColumnRange.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.CIRComparator.findColumnInfo(int)", "text": "Finds the  which contains the specified columnIndex", "tags": "METHOD", "url": "exp/findColumnInfo.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate.handleMissingSharedFormulaRecord(FormulaRecord)", "text": "Sometimes the shared formula flag \"seems\" to be erroneously set (because the corresponding", "tags": "METHOD", "url": "exp/handleMissingSharedFormulaRecord.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate.getStringRecord()", "text": "debug only TODO - encapsulate", "tags": "METHOD", "url": "exp/getStringRecord.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate.setParsedExpression(Ptg[])", "text": "Also checks for a related shared formula and unlinks it if found", "tags": "METHOD", "url": "exp/setParsedExpression.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate.notifyFormulaChanging()", "text": "Should be called by any code which is either deleting this formula cell, or changing", "tags": "METHOD", "url": "exp/notifyFormulaChanging.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate.removeArrayFormula(int, int)", "text": "Removes an array formula", "tags": "METHOD", "url": "exp/removeArrayFormula.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.MergedCellsTable.read(RecordStream)", "text": "reads zero or more consecutive {@link MergeCellsRecord}s", "tags": "METHOD", "url": "exp/read.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.isComponentRecord(int)", "text": "'Page Settings Block'.", "tags": "METHOD", "url": "exp/isComponentRecord.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.setColumnBreak(short, short, short)", "text": "Sets a page break at the indicated column", "tags": "METHOD", "url": "exp/setColumnBreak.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.removeColumnBreak(int)", "text": "Removes a page break at the indicated column", "tags": "METHOD", "url": "exp/removeColumnBreak.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.createHCenter()", "text": "creates the HCenter Record and sets it to false (don't horizontally center)", "tags": "METHOD", "url": "exp/createHCenter.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.createVCenter()", "text": "creates the VCenter Record and sets it to false (don't horizontally center)", "tags": "METHOD", "url": "exp/createVCenter.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.createPrintSetup()", "text": "creates the PrintSetup Record and sets it to defaults and marks it invalid", "tags": "METHOD", "url": "exp/createPrintSetup.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.getHeader()", "text": "Returns the HeaderRecord.", "tags": "METHOD", "url": "exp/getHeader.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.setHeader(HeaderRecord)", "text": "Sets the HeaderRecord.", "tags": "METHOD", "url": "exp/setHeader.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.getFooter()", "text": "Returns the FooterRecord.", "tags": "METHOD", "url": "exp/getFooter.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.setFooter(FooterRecord)", "text": "Sets the FooterRecord.", "tags": "METHOD", "url": "exp/setFooter.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.getPrintSetup()", "text": "Returns the PrintSetupRecord.", "tags": "METHOD", "url": "exp/getPrintSetup.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.setPrintSetup(PrintSetupRecord)", "text": "Sets the PrintSetupRecord.", "tags": "METHOD", "url": "exp/setPrintSetup.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.getMargin(short)", "text": "Gets the size of the margin in inches.", "tags": "METHOD", "url": "exp/getMargin.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.setMargin(short, double)", "text": "Sets the size of the margin in inches.", "tags": "METHOD", "url": "exp/setMargin.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.shiftBreaks(PageBreakRecord, int, int, int)", "text": "Shifts all the page breaks in the range \"count\" number of rowscolumns", "tags": "METHOD", "url": "exp/shiftBreaks.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.setRowBreak(int, short, short)", "text": "Sets a page break at the indicated row", "tags": "METHOD", "url": "exp/setRowBreak.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.removeRowBreak(int)", "text": "Removes a page break at the indicated row", "tags": "METHOD", "url": "exp/removeRowBreak.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.isRowBroken(int)", "text": "Queries if the specified row has a page break", "tags": "METHOD", "url": "exp/isRowBroken.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.isColumnBroken(int)", "text": "Queries if the specified column has a page break", "tags": "METHOD", "url": "exp/isColumnBroken.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.shiftRowBreaks(int, int, int)", "text": "Shifts the horizontal page breaks for the indicated count", "tags": "METHOD", "url": "exp/shiftRowBreaks.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.shiftColumnBreaks(short, short, short)", "text": "Shifts the vertical page breaks for the indicated count", "tags": "METHOD", "url": "exp/shiftColumnBreaks.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.addLateHeaderFooter(HeaderFooterRecord)", "text": "HEADERFOOTER is new in 2007.  Some apps seem to have scattered this record long after the {@link PageSettingsBlock} where it belongs.", "tags": "METHOD", "url": "exp/addLateHeaderFooter.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.addLateRecords(RecordStream)", "text": "This method reads PageSettingsBlock records from the supplied RecordStream until the first", "tags": "METHOD", "url": "exp/addLateRecords.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.PLSAggregate.positionRecords(List<RecordBase>)", "text": "Some apps can define multiple HeaderFooterRecord records for a sheet", "tags": "METHOD", "url": "exp/positionRecords.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.RecordAggregate.visitContainedRecords(RecordVisitor)", "text": "Visit each of the atomic BIFF records contained in this {@link RecordAggregate} in the order", "tags": "METHOD", "url": "exp/visitContainedRecords.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.RecordVisitor.visitRecord(Record)", "text": "Implementors may call non-mutating methods on Record r.", "tags": "METHOD", "url": "exp/visitRecord.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.RowRecordsAggregate.addUnknownRecord(Record)", "text": "Handles UnknownRecords which appear within the rowcell records", "tags": "METHOD", "url": "exp/addUnknownRecord.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.RowRecordsAggregate.getRowBlockCount()", "text": "Returns the number of row blocks", "tags": "METHOD", "url": "exp/getRowBlockCount.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.RowRecordsAggregate.getRowCountForBlock(int)", "text": "Returns the number of physical rows within a block", "tags": "METHOD", "url": "exp/getRowCountForBlock.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.RowRecordsAggregate.getStartRowNumberForBlock(int)", "text": "Returns the physical row number of the first row in a block", "tags": "METHOD", "url": "exp/getStartRowNumberForBlock.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.RowRecordsAggregate.getEndRowNumberForBlock(int)", "text": "Returns the physical row number of the end row in a block", "tags": "METHOD", "url": "exp/getEndRowNumberForBlock.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.RowRecordsAggregate.writeHidden(RowRecord, int)", "text": "Hide all rows at or below the current outline level", "tags": "METHOD", "url": "exp/writeHidden.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.RowRecordsAggregate.createRow(int)", "text": "Create a row record.", "tags": "METHOD", "url": "exp/createRow.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.RowRecordsAggregate.getCellValueIterator()", "text": "Returns an iterator for the cell values", "tags": "METHOD", "url": "exp/getCellValueIterator.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.SharedFormulaGroup.getRecordForFirstCell(FormulaRecordAggregate)", "text": "Gets the {@link SharedValueRecordBase} record if it should be encoded immediately after the", "tags": "METHOD", "url": "exp/getRecordForFirstCell.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.SharedFormulaGroup.unlink(SharedFormulaRecord)", "text": "Converts all {@link FormulaRecord}s handled by to plain unshared formulas", "tags": "METHOD", "url": "exp/unlink.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.SharedFormulaGroup.addArrayRecord(ArrayRecord)", "text": "Add specified Array Record.", "tags": "METHOD", "url": "exp/addArrayRecord.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.SharedFormulaGroup.removeArrayFormula(int, int)", "text": "Removes the {@link ArrayRecord} for the cell group containing the specified cell. The caller should clear (set blank) all cells in the returned range.", "tags": "METHOD", "url": "exp/removeArrayFormula.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate.construct(CellValueRecordInterface, RecordStream, SharedValueManager)", "text": "Processes a single cell value record", "tags": "METHOD", "url": "exp/construct.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate.getRowCellBlockSize(int, int)", "text": "Tallies a count of the size of the cell records that are attached to the rows in the range specified.", "tags": "METHOD", "url": "exp/getRowCellBlockSize.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate.rowHasCells(int)", "text": "Returns true if the row has cells attached to it", "tags": "METHOD", "url": "exp/rowHasCells.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate.countBlanks(CellValueRecordInterface[], int)", "text": "starting from startIx.", "tags": "METHOD", "url": "exp/countBlanks.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.ValueIterator.iterator()", "text": "value iterator", "tags": "METHOD", "url": "exp/iterator.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.WorksheetProtectionBlock.isComponentRecord(int)", "text": "the 'Page Settings Block'.", "tags": "METHOD", "url": "exp/isComponentRecord.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.WorksheetProtectionBlock.addRecords(RecordStream)", "text": "This method reads {@link WorksheetProtectionBlock} records from the supplied RecordStream", "tags": "METHOD", "url": "exp/addRecords.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.WorksheetProtectionBlock.getProtect()", "text": "is created.", "tags": "METHOD", "url": "exp/getProtect.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.WorksheetProtectionBlock.getPassword()", "text": "one is created.", "tags": "METHOD", "url": "exp/getPassword.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.WorksheetProtectionBlock.protectSheet(String, boolean, boolean)", "text": "protect a spreadsheet with a password (not encrypted, just sets protect flags and the password.", "tags": "METHOD", "url": "exp/protectSheet.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.WorksheetProtectionBlock.createObjectProtect()", "text": "creates an ObjectProtect record with protect set to false.", "tags": "METHOD", "url": "exp/createObjectProtect.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.WorksheetProtectionBlock.createScenarioProtect()", "text": "creates a ScenarioProtect record with protect set to false.", "tags": "METHOD", "url": "exp/createScenarioProtect.html"},
                {"title": "org.apache.poi.hssf.record.aggregates.WorksheetProtectionBlock.createPassword()", "text": "creates a Password record with password set to 0x0000.", "tags": "METHOD", "url": "exp/createPassword.html"},
                {"title": "org.apache.poi.hssf.record.BiffHeaderInput.readRecordSID()", "text": "Read an unsigned short from the stream without decrypting", "tags": "METHOD", "url": "exp/readRecordSID.html"},
                {"title": "org.apache.poi.hssf.record.BiffHeaderInput.readDataSize()", "text": "Read an unsigned short from the stream without decrypting", "tags": "METHOD", "url": "exp/readDataSize.html"},
                {"title": "org.apache.poi.hssf.record.BlankRecord.setRow(int)", "text": "set the row this cell occurs on", "tags": "METHOD", "url": "exp/setRow.html"},
                {"title": "org.apache.poi.hssf.record.BlankRecord.getRow()", "text": "get the row this cell occurs on", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.hssf.record.BlankRecord.getColumn()", "text": "get the column this cell defines within the row", "tags": "METHOD", "url": "exp/getColumn.html"},
                {"title": "org.apache.poi.hssf.record.BlankRecord.setXFIndex(short)", "text": "set the index of the extended format record to style this cell with", "tags": "METHOD", "url": "exp/setXFIndex.html"},
                {"title": "org.apache.poi.hssf.record.BlankRecord.getXFIndex()", "text": "get the index of the extended format record to style this cell with", "tags": "METHOD", "url": "exp/getXFIndex.html"},
                {"title": "org.apache.poi.hssf.record.BlankRecord.getSid()", "text": "return the non static version of the id for this record.", "tags": "METHOD", "url": "exp/getSid.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord.setVersion(int)", "text": "Version number - for BIFF8 should be 0x06", "tags": "METHOD", "url": "exp/setVersion.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord.setType(int)", "text": "type of object this marks", "tags": "METHOD", "url": "exp/setType.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord.setBuild(int)", "text": "build that wrote this file", "tags": "METHOD", "url": "exp/setBuild.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord.setBuildYear(int)", "text": "Year of the build that wrote this file", "tags": "METHOD", "url": "exp/setBuildYear.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord.setHistoryBitMask(int)", "text": "set the history bit mask (not very useful)", "tags": "METHOD", "url": "exp/setHistoryBitMask.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord.setRequiredVersion(int)", "text": "set the minimum version required to read this file", "tags": "METHOD", "url": "exp/setRequiredVersion.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord.getVersion()", "text": "Version number - for BIFF8 should be 0x06", "tags": "METHOD", "url": "exp/getVersion.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord.getType()", "text": "type of object this marks", "tags": "METHOD", "url": "exp/getType.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord.getBuild()", "text": "get the build that wrote this file", "tags": "METHOD", "url": "exp/getBuild.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord.getBuildYear()", "text": "Year of the build that wrote this file", "tags": "METHOD", "url": "exp/getBuildYear.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord.getHistoryBitMask()", "text": "get the history bit mask (not very useful)", "tags": "METHOD", "url": "exp/getHistoryBitMask.html"},
                {"title": "org.apache.poi.hssf.record.BOFRecord.getRequiredVersion()", "text": "get the minimum version required to read this file", "tags": "METHOD", "url": "exp/getRequiredVersion.html"},
                {"title": "org.apache.poi.hssf.record.BoolErrRecord.setValue(boolean)", "text": "set the boolean value for the cell", "tags": "METHOD", "url": "exp/setValue.html"},
                {"title": "org.apache.poi.hssf.record.BoolErrRecord.setValue(byte)", "text": "set the error value for the cell", "tags": "METHOD", "url": "exp/setValue.html"},
                {"title": "org.apache.poi.hssf.record.BoolErrRecord.setValue(FormulaError)", "text": "set the error value for the cell", "tags": "METHOD", "url": "exp/setValue.html"},
                {"title": "org.apache.poi.hssf.record.BoolErrRecord.getBooleanValue()", "text": "get the value for the cell", "tags": "METHOD", "url": "exp/getBooleanValue.html"},
                {"title": "org.apache.poi.hssf.record.BoolErrRecord.getErrorValue()", "text": "get the error value for the cell", "tags": "METHOD", "url": "exp/getErrorValue.html"},
                {"title": "org.apache.poi.hssf.record.BoolErrRecord.isBoolean()", "text": "Indicates whether the call holds a boolean value", "tags": "METHOD", "url": "exp/isBoolean.html"},
                {"title": "org.apache.poi.hssf.record.BoolErrRecord.isError()", "text": "Indicates whether the call holds an error value", "tags": "METHOD", "url": "exp/isError.html"},
                {"title": "org.apache.poi.hssf.record.BottomMarginRecord.getMargin()", "text": "Get the margin field for the BottomMargin record.", "tags": "METHOD", "url": "exp/getMargin.html"},
                {"title": "org.apache.poi.hssf.record.BottomMarginRecord.setMargin(double)", "text": "Set the margin field for the BottomMargin record.", "tags": "METHOD", "url": "exp/setMargin.html"},
                {"title": "org.apache.poi.hssf.record.BoundSheetRecord.setPositionOfBof(int)", "text": "set the offset in bytes of the Beginning of File Marker within the HSSF Stream part of the POIFS file", "tags": "METHOD", "url": "exp/setPositionOfBof.html"},
                {"title": "org.apache.poi.hssf.record.BoundSheetRecord.setSheetname(String)", "text": "Set the sheetname for this sheet.  (this appears in the tabs at the bottom) for a safe way to create valid names", "tags": "METHOD", "url": "exp/setSheetname.html"},
                {"title": "org.apache.poi.hssf.record.BoundSheetRecord.getPositionOfBof()", "text": "get the offset in bytes of the Beginning of File Marker within the HSSF Stream part of the POIFS file", "tags": "METHOD", "url": "exp/getPositionOfBof.html"},
                {"title": "org.apache.poi.hssf.record.BoundSheetRecord.getSheetname()", "text": "get the sheetname for this sheet.  (this appears in the tabs at the bottom)", "tags": "METHOD", "url": "exp/getSheetname.html"},
                {"title": "org.apache.poi.hssf.record.BoundSheetRecord.isHidden()", "text": "Is the sheet hidden? Different from very hidden", "tags": "METHOD", "url": "exp/isHidden.html"},
                {"title": "org.apache.poi.hssf.record.BoundSheetRecord.setHidden(boolean)", "text": "Is the sheet hidden? Different from very hidden", "tags": "METHOD", "url": "exp/setHidden.html"},
                {"title": "org.apache.poi.hssf.record.BoundSheetRecord.isVeryHidden()", "text": "Is the sheet very hidden? Different from (normal) hidden", "tags": "METHOD", "url": "exp/isVeryHidden.html"},
                {"title": "org.apache.poi.hssf.record.BoundSheetRecord.setVeryHidden(boolean)", "text": "Is the sheet very hidden? Different from (normal) hidden", "tags": "METHOD", "url": "exp/setVeryHidden.html"},
                {"title": "org.apache.poi.hssf.record.BoundSheetRecord.orderByBofPosition(List<BoundSheetRecord>)", "text": "Converts a List of {@link BoundSheetRecord}s to an array and sorts by the position of their BOFs.", "tags": "METHOD", "url": "exp/orderByBofPosition.html"},
                {"title": "org.apache.poi.hssf.record.CellRecord.setXFIndex(short)", "text": "set the index to the ExtendedFormat", "tags": "METHOD", "url": "exp/setXFIndex.html"},
                {"title": "org.apache.poi.hssf.record.CellRecord.getXFIndex()", "text": "get the index to the ExtendedFormat", "tags": "METHOD", "url": "exp/getXFIndex.html"},
                {"title": "org.apache.poi.hssf.record.CellRecord.appendValueText(StringBuilder)", "text": "Append specific debug info (used by {@link #toString()} for the value", "tags": "METHOD", "url": "exp/appendValueText.html"},
                {"title": "org.apache.poi.hssf.record.CellRecord.getRecordName()", "text": "Gets the debug info BIFF record type name (used by {@link #toString()}.", "tags": "METHOD", "url": "exp/getRecordName.html"},
                {"title": "org.apache.poi.hssf.record.CellRecord.serializeValue(LittleEndianOutput)", "text": "writes out the value data for this cell record", "tags": "METHOD", "url": "exp/serializeValue.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.setBorderLeft(int)", "text": "set the type of border to use for the left border of the cell", "tags": "METHOD", "url": "exp/setBorderLeft.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.getBorderLeft()", "text": "get the type of border to use for the left border of the cell", "tags": "METHOD", "url": "exp/getBorderLeft.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.setBorderRight(int)", "text": "set the type of border to use for the right border of the cell", "tags": "METHOD", "url": "exp/setBorderRight.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.getBorderRight()", "text": "get the type of border to use for the right border of the cell", "tags": "METHOD", "url": "exp/getBorderRight.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.setBorderTop(int)", "text": "set the type of border to use for the top border of the cell", "tags": "METHOD", "url": "exp/setBorderTop.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.getBorderTop()", "text": "get the type of border to use for the top border of the cell", "tags": "METHOD", "url": "exp/getBorderTop.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.setBorderBottom(int)", "text": "set the type of border to use for the bottom border of the cell", "tags": "METHOD", "url": "exp/setBorderBottom.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.getBorderBottom()", "text": "get the type of border to use for the bottom border of the cell", "tags": "METHOD", "url": "exp/getBorderBottom.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.setBorderDiagonal(int)", "text": "set the type of border to use for the diagonal border of the cell", "tags": "METHOD", "url": "exp/setBorderDiagonal.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.getBorderDiagonal()", "text": "get the type of border to use for the diagonal border of the cell", "tags": "METHOD", "url": "exp/getBorderDiagonal.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.setLeftBorderColor(int)", "text": "set the color to use for the left border", "tags": "METHOD", "url": "exp/setLeftBorderColor.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.getLeftBorderColor()", "text": "get the color to use for the left border", "tags": "METHOD", "url": "exp/getLeftBorderColor.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.setRightBorderColor(int)", "text": "set the color to use for the right border", "tags": "METHOD", "url": "exp/setRightBorderColor.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.getRightBorderColor()", "text": "get the color to use for the right border", "tags": "METHOD", "url": "exp/getRightBorderColor.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.setTopBorderColor(int)", "text": "set the color to use for the top border", "tags": "METHOD", "url": "exp/setTopBorderColor.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.getTopBorderColor()", "text": "get the color to use for the top border", "tags": "METHOD", "url": "exp/getTopBorderColor.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.setBottomBorderColor(int)", "text": "set the color to use for the bottom border", "tags": "METHOD", "url": "exp/setBottomBorderColor.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.getBottomBorderColor()", "text": "get the color to use for the bottom border", "tags": "METHOD", "url": "exp/getBottomBorderColor.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.setDiagonalBorderColor(int)", "text": "set the color to use for the diagonal borders", "tags": "METHOD", "url": "exp/setDiagonalBorderColor.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.getDiagonalBorderColor()", "text": "get the color to use for the diagonal border", "tags": "METHOD", "url": "exp/getDiagonalBorderColor.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.setForwardDiagonalOn(boolean)", "text": "Ofoff bottom left to top right line", "tags": "METHOD", "url": "exp/setForwardDiagonalOn.html"},
                {"title": "org.apache.poi.hssf.record.cf.BorderFormatting.setBackwardDiagonalOn(boolean)", "text": "Ofoff top left to bottom right line", "tags": "METHOD", "url": "exp/setBackwardDiagonalOn.html"},
                {"title": "org.apache.poi.hssf.record.cf.FontFormatting.getFontHeight()", "text": "gets the height of the font in 120th point units", "tags": "METHOD", "url": "exp/getFontHeight.html"},
                {"title": "org.apache.poi.hssf.record.cf.FontFormatting.setStrikeout(boolean)", "text": "set the font to be stricken out or not", "tags": "METHOD", "url": "exp/setStrikeout.html"},
                {"title": "org.apache.poi.hssf.record.cf.FontFormatting.isStruckout()", "text": "get whether the font is to be stricken out or not", "tags": "METHOD", "url": "exp/isStruckout.html"},
                {"title": "org.apache.poi.hssf.record.cf.FontFormatting.setBold(boolean)", "text": "set the font weight to bold (weight=700) or to normal(weight=400) boldness.", "tags": "METHOD", "url": "exp/setBold.html"},
                {"title": "org.apache.poi.hssf.record.cf.FontFormatting.getEscapementType()", "text": "get the type of super or subscript for the font", "tags": "METHOD", "url": "exp/getEscapementType.html"},
                {"title": "org.apache.poi.hssf.record.cf.FontFormatting.setEscapementType(short)", "text": "set the escapement type for the font", "tags": "METHOD", "url": "exp/setEscapementType.html"},
                {"title": "org.apache.poi.hssf.record.cf.FontFormatting.getUnderlineType()", "text": "get the type of underlining for the font", "tags": "METHOD", "url": "exp/getUnderlineType.html"},
                {"title": "org.apache.poi.hssf.record.cf.FontFormatting.setUnderlineType(short)", "text": "set the type of underlining type for the font", "tags": "METHOD", "url": "exp/setUnderlineType.html"},
                {"title": "org.apache.poi.hssf.record.cf.PatternFormatting.setFillPattern(int)", "text": "setting fill pattern", "tags": "METHOD", "url": "exp/setFillPattern.html"},
                {"title": "org.apache.poi.hssf.record.cf.PatternFormatting.setFillBackgroundColor(int)", "text": "set the background fill color.", "tags": "METHOD", "url": "exp/setFillBackgroundColor.html"},
                {"title": "org.apache.poi.hssf.record.cf.PatternFormatting.setFillForegroundColor(int)", "text": "set the foreground fill color", "tags": "METHOD", "url": "exp/setFillForegroundColor.html"},
                {"title": "org.apache.poi.hssf.record.CFHeaderBase.setCellRanges(CellRangeAddress[])", "text": "Set cell ranges list to a single cell range and modify the enclosing cell range accordingly.", "tags": "METHOD", "url": "exp/setCellRanges.html"},
                {"title": "org.apache.poi.hssf.record.CFRule12Record.create(HSSFSheet, String)", "text": "Creates a new comparison operation rule", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.hssf.record.CFRule12Record.create(HSSFSheet, byte, String, String)", "text": "Creates a new comparison operation rule", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.hssf.record.CFRule12Record.create(HSSFSheet, byte, String, String, String)", "text": "Creates a new comparison operation rule", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.hssf.record.CFRule12Record.create(HSSFSheet, ExtendedColor)", "text": "Creates a new Data Bar formatting", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.hssf.record.CFRule12Record.create(HSSFSheet, IconSet)", "text": "Creates a new Icon Set  Multi-State formatting", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.hssf.record.CFRule12Record.createColorScale(HSSFSheet)", "text": "Creates a new Color Scale  Color Gradient formatting", "tags": "METHOD", "url": "exp/createColorScale.html"},
                {"title": "org.apache.poi.hssf.record.CFRule12Record.getParsedExpressionScale()", "text": "get the stack of the scale expression as a list", "tags": "METHOD", "url": "exp/getParsedExpressionScale.html"},
                {"title": "org.apache.poi.hssf.record.CFRule12Record.serialize(LittleEndianOutput)", "text": "called by the class that is responsible for writing this sucker", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.ComparisonOperator.getOptions()", "text": "get the option flags", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.hssf.record.ComparisonOperator.getParsedExpression1()", "text": "get the stack of the 1st expression as a list", "tags": "METHOD", "url": "exp/getParsedExpression1.html"},
                {"title": "org.apache.poi.hssf.record.ComparisonOperator.getParsedExpression2()", "text": "get the stack of the 2nd expression as a list", "tags": "METHOD", "url": "exp/getParsedExpression2.html"},
                {"title": "org.apache.poi.hssf.record.ComparisonOperator.parseFormula(String, HSSFSheet)", "text": "TODO - parse conditional format formulas properly i", "tags": "METHOD", "url": "exp/parseFormula.html"},
                {"title": "org.apache.poi.hssf.record.CFRuleRecord.create(HSSFSheet, String)", "text": "Creates a new comparison operation rule", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.hssf.record.CFRuleRecord.create(HSSFSheet, byte, String, String)", "text": "Creates a new comparison operation rule", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.hssf.record.CFRuleRecord.serialize(LittleEndianOutput)", "text": "called by the class that is responsible for writing this sucker", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.getForegroundColor()", "text": "Get the foreground color field for the AreaFormat record.", "tags": "METHOD", "url": "exp/getForegroundColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.setForegroundColor(int)", "text": "Set the foreground color field for the AreaFormat record.", "tags": "METHOD", "url": "exp/setForegroundColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.getBackgroundColor()", "text": "Get the background color field for the AreaFormat record.", "tags": "METHOD", "url": "exp/getBackgroundColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.setBackgroundColor(int)", "text": "Set the background color field for the AreaFormat record.", "tags": "METHOD", "url": "exp/setBackgroundColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.getPattern()", "text": "Get the pattern field for the AreaFormat record.", "tags": "METHOD", "url": "exp/getPattern.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.setPattern(short)", "text": "Set the pattern field for the AreaFormat record.", "tags": "METHOD", "url": "exp/setPattern.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.getFormatFlags()", "text": "Get the format flags field for the AreaFormat record.", "tags": "METHOD", "url": "exp/getFormatFlags.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.setFormatFlags(short)", "text": "Set the format flags field for the AreaFormat record.", "tags": "METHOD", "url": "exp/setFormatFlags.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.getForecolorIndex()", "text": "Get the forecolor index field for the AreaFormat record.", "tags": "METHOD", "url": "exp/getForecolorIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.setForecolorIndex(short)", "text": "Set the forecolor index field for the AreaFormat record.", "tags": "METHOD", "url": "exp/setForecolorIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.getBackcolorIndex()", "text": "Get the backcolor index field for the AreaFormat record.", "tags": "METHOD", "url": "exp/getBackcolorIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.setBackcolorIndex(short)", "text": "Set the backcolor index field for the AreaFormat record.", "tags": "METHOD", "url": "exp/setBackcolorIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.setAutomatic(boolean)", "text": "Sets the automatic field value. automatic formatting", "tags": "METHOD", "url": "exp/setAutomatic.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.isAutomatic()", "text": "automatic formatting", "tags": "METHOD", "url": "exp/isAutomatic.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.setInvert(boolean)", "text": "Sets the invert field value. swap foreground and background colours when data is negative", "tags": "METHOD", "url": "exp/setInvert.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaFormatRecord.isInvert()", "text": "swap foreground and background colours when data is negative", "tags": "METHOD", "url": "exp/isInvert.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaRecord.getFormatFlags()", "text": "Get the format flags field for the Area record.", "tags": "METHOD", "url": "exp/getFormatFlags.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaRecord.setFormatFlags(short)", "text": "Set the format flags field for the Area record.", "tags": "METHOD", "url": "exp/setFormatFlags.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaRecord.setStacked(boolean)", "text": "Sets the stacked field value. series is stacked", "tags": "METHOD", "url": "exp/setStacked.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaRecord.isStacked()", "text": "series is stacked", "tags": "METHOD", "url": "exp/isStacked.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaRecord.setDisplayAsPercentage(boolean)", "text": "Sets the display as percentage field value. results displayed as percentages", "tags": "METHOD", "url": "exp/setDisplayAsPercentage.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaRecord.isDisplayAsPercentage()", "text": "results displayed as percentages", "tags": "METHOD", "url": "exp/isDisplayAsPercentage.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaRecord.setShadow(boolean)", "text": "Sets the shadow field value. display a shadow for the chart", "tags": "METHOD", "url": "exp/setShadow.html"},
                {"title": "org.apache.poi.hssf.record.chart.AreaRecord.isShadow()", "text": "display a shadow for the chart", "tags": "METHOD", "url": "exp/isShadow.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisLineFormatRecord.getAxisType()", "text": "Get the axis type field for the AxisLineFormat record", "tags": "METHOD", "url": "exp/getAxisType.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisLineFormatRecord.setAxisType(short)", "text": "Set the axis type field for the AxisLineFormat record", "tags": "METHOD", "url": "exp/setAxisType.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.getMinimumCategory()", "text": "Get the minimum category field for the AxisOptions record.", "tags": "METHOD", "url": "exp/getMinimumCategory.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setMinimumCategory(short)", "text": "Set the minimum category field for the AxisOptions record.", "tags": "METHOD", "url": "exp/setMinimumCategory.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.getMaximumCategory()", "text": "Get the maximum category field for the AxisOptions record.", "tags": "METHOD", "url": "exp/getMaximumCategory.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setMaximumCategory(short)", "text": "Set the maximum category field for the AxisOptions record.", "tags": "METHOD", "url": "exp/setMaximumCategory.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.getMajorUnitValue()", "text": "Get the major unit value field for the AxisOptions record.", "tags": "METHOD", "url": "exp/getMajorUnitValue.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setMajorUnitValue(short)", "text": "Set the major unit value field for the AxisOptions record.", "tags": "METHOD", "url": "exp/setMajorUnitValue.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.getMajorUnit()", "text": "Get the major unit field for the AxisOptions record.", "tags": "METHOD", "url": "exp/getMajorUnit.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setMajorUnit(short)", "text": "Set the major unit field for the AxisOptions record.", "tags": "METHOD", "url": "exp/setMajorUnit.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.getMinorUnitValue()", "text": "Get the minor unit value field for the AxisOptions record.", "tags": "METHOD", "url": "exp/getMinorUnitValue.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setMinorUnitValue(short)", "text": "Set the minor unit value field for the AxisOptions record.", "tags": "METHOD", "url": "exp/setMinorUnitValue.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.getMinorUnit()", "text": "Get the minor unit field for the AxisOptions record.", "tags": "METHOD", "url": "exp/getMinorUnit.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setMinorUnit(short)", "text": "Set the minor unit field for the AxisOptions record.", "tags": "METHOD", "url": "exp/setMinorUnit.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.getBaseUnit()", "text": "Get the base unit field for the AxisOptions record.", "tags": "METHOD", "url": "exp/getBaseUnit.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setBaseUnit(short)", "text": "Set the base unit field for the AxisOptions record.", "tags": "METHOD", "url": "exp/setBaseUnit.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.getCrossingPoint()", "text": "Get the crossing point field for the AxisOptions record.", "tags": "METHOD", "url": "exp/getCrossingPoint.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setCrossingPoint(short)", "text": "Set the crossing point field for the AxisOptions record.", "tags": "METHOD", "url": "exp/setCrossingPoint.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.getOptions()", "text": "Get the options field for the AxisOptions record.", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setOptions(short)", "text": "Set the options field for the AxisOptions record.", "tags": "METHOD", "url": "exp/setOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setDefaultMinimum(boolean)", "text": "Sets the default minimum field value. use the default minimum category", "tags": "METHOD", "url": "exp/setDefaultMinimum.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.isDefaultMinimum()", "text": "use the default minimum category", "tags": "METHOD", "url": "exp/isDefaultMinimum.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setDefaultMaximum(boolean)", "text": "Sets the default maximum field value. use the default maximum category", "tags": "METHOD", "url": "exp/setDefaultMaximum.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.isDefaultMaximum()", "text": "use the default maximum category", "tags": "METHOD", "url": "exp/isDefaultMaximum.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setDefaultMajor(boolean)", "text": "Sets the default major field value. use the default major unit", "tags": "METHOD", "url": "exp/setDefaultMajor.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.isDefaultMajor()", "text": "use the default major unit", "tags": "METHOD", "url": "exp/isDefaultMajor.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setDefaultMinorUnit(boolean)", "text": "Sets the default minor unit field value. use the default minor unit", "tags": "METHOD", "url": "exp/setDefaultMinorUnit.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.isDefaultMinorUnit()", "text": "use the default minor unit", "tags": "METHOD", "url": "exp/isDefaultMinorUnit.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setIsDate(boolean)", "text": "Sets the isDate field value. this is a date axis", "tags": "METHOD", "url": "exp/setIsDate.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.isIsDate()", "text": "this is a date axis", "tags": "METHOD", "url": "exp/isIsDate.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setDefaultBase(boolean)", "text": "Sets the default base field value. use the default base unit", "tags": "METHOD", "url": "exp/setDefaultBase.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.isDefaultBase()", "text": "use the default base unit", "tags": "METHOD", "url": "exp/isDefaultBase.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setDefaultCross(boolean)", "text": "Sets the default cross field value. use the default crossing point", "tags": "METHOD", "url": "exp/setDefaultCross.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.isDefaultCross()", "text": "use the default crossing point", "tags": "METHOD", "url": "exp/isDefaultCross.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.setDefaultDateSettings(boolean)", "text": "Sets the default date settings field value. use default date setttings for this axis", "tags": "METHOD", "url": "exp/setDefaultDateSettings.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisOptionsRecord.isDefaultDateSettings()", "text": "use default date setttings for this axis", "tags": "METHOD", "url": "exp/isDefaultDateSettings.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisParentRecord.getAxisType()", "text": "Get the axis type field for the AxisParent record", "tags": "METHOD", "url": "exp/getAxisType.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisParentRecord.setAxisType(short)", "text": "Set the axis type field for the AxisParent record", "tags": "METHOD", "url": "exp/setAxisType.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisParentRecord.getX()", "text": "Get the x field for the AxisParent record.", "tags": "METHOD", "url": "exp/getX.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisParentRecord.setX(int)", "text": "Set the x field for the AxisParent record.", "tags": "METHOD", "url": "exp/setX.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisParentRecord.getY()", "text": "Get the y field for the AxisParent record.", "tags": "METHOD", "url": "exp/getY.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisParentRecord.setY(int)", "text": "Set the y field for the AxisParent record.", "tags": "METHOD", "url": "exp/setY.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisParentRecord.getWidth()", "text": "Get the width field for the AxisParent record.", "tags": "METHOD", "url": "exp/getWidth.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisParentRecord.setWidth(int)", "text": "Set the width field for the AxisParent record.", "tags": "METHOD", "url": "exp/setWidth.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisParentRecord.getHeight()", "text": "Get the height field for the AxisParent record.", "tags": "METHOD", "url": "exp/getHeight.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisParentRecord.setHeight(int)", "text": "Set the height field for the AxisParent record.", "tags": "METHOD", "url": "exp/setHeight.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisRecord.getAxisType()", "text": "Get the axis type field for the Axis record", "tags": "METHOD", "url": "exp/getAxisType.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisRecord.setAxisType(short)", "text": "Set the axis type field for the Axis record", "tags": "METHOD", "url": "exp/setAxisType.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisRecord.getReserved1()", "text": "Get the reserved1 field for the Axis record.", "tags": "METHOD", "url": "exp/getReserved1.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisRecord.setReserved1(int)", "text": "Set the reserved1 field for the Axis record.", "tags": "METHOD", "url": "exp/setReserved1.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisRecord.getReserved2()", "text": "Get the reserved2 field for the Axis record.", "tags": "METHOD", "url": "exp/getReserved2.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisRecord.setReserved2(int)", "text": "Set the reserved2 field for the Axis record.", "tags": "METHOD", "url": "exp/setReserved2.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisRecord.getReserved3()", "text": "Get the reserved3 field for the Axis record.", "tags": "METHOD", "url": "exp/getReserved3.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisRecord.setReserved3(int)", "text": "Set the reserved3 field for the Axis record.", "tags": "METHOD", "url": "exp/setReserved3.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisRecord.getReserved4()", "text": "Get the reserved4 field for the Axis record.", "tags": "METHOD", "url": "exp/getReserved4.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisRecord.setReserved4(int)", "text": "Set the reserved4 field for the Axis record.", "tags": "METHOD", "url": "exp/setReserved4.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisUsedRecord.getNumAxis()", "text": "Get the num axis field for the AxisUsed record.", "tags": "METHOD", "url": "exp/getNumAxis.html"},
                {"title": "org.apache.poi.hssf.record.chart.AxisUsedRecord.setNumAxis(short)", "text": "Set the num axis field for the AxisUsed record.", "tags": "METHOD", "url": "exp/setNumAxis.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.getBarSpace()", "text": "Get the bar space field for the Bar record.", "tags": "METHOD", "url": "exp/getBarSpace.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.setBarSpace(short)", "text": "Set the bar space field for the Bar record.", "tags": "METHOD", "url": "exp/setBarSpace.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.getCategorySpace()", "text": "Get the category space field for the Bar record.", "tags": "METHOD", "url": "exp/getCategorySpace.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.setCategorySpace(short)", "text": "Set the category space field for the Bar record.", "tags": "METHOD", "url": "exp/setCategorySpace.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.getFormatFlags()", "text": "Get the format flags field for the Bar record.", "tags": "METHOD", "url": "exp/getFormatFlags.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.setFormatFlags(short)", "text": "Set the format flags field for the Bar record.", "tags": "METHOD", "url": "exp/setFormatFlags.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.setHorizontal(boolean)", "text": "Sets the horizontal field value. true to display horizontal bar charts, false for vertical", "tags": "METHOD", "url": "exp/setHorizontal.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.isHorizontal()", "text": "true to display horizontal bar charts, false for vertical", "tags": "METHOD", "url": "exp/isHorizontal.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.setStacked(boolean)", "text": "Sets the stacked field value. stack displayed values", "tags": "METHOD", "url": "exp/setStacked.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.isStacked()", "text": "stack displayed values", "tags": "METHOD", "url": "exp/isStacked.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.setDisplayAsPercentage(boolean)", "text": "Sets the display as percentage field value. display chart values as a percentage", "tags": "METHOD", "url": "exp/setDisplayAsPercentage.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.isDisplayAsPercentage()", "text": "display chart values as a percentage", "tags": "METHOD", "url": "exp/isDisplayAsPercentage.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.setShadow(boolean)", "text": "Sets the shadow field value. display a shadow for the chart", "tags": "METHOD", "url": "exp/setShadow.html"},
                {"title": "org.apache.poi.hssf.record.chart.BarRecord.isShadow()", "text": "display a shadow for the chart", "tags": "METHOD", "url": "exp/isShadow.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.getCrossingPoint()", "text": "Get the crossing point field for the CategorySeriesAxis record.", "tags": "METHOD", "url": "exp/getCrossingPoint.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.setCrossingPoint(short)", "text": "Set the crossing point field for the CategorySeriesAxis record.", "tags": "METHOD", "url": "exp/setCrossingPoint.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.getLabelFrequency()", "text": "Get the label frequency field for the CategorySeriesAxis record.", "tags": "METHOD", "url": "exp/getLabelFrequency.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.setLabelFrequency(short)", "text": "Set the label frequency field for the CategorySeriesAxis record.", "tags": "METHOD", "url": "exp/setLabelFrequency.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.getTickMarkFrequency()", "text": "Get the tick mark frequency field for the CategorySeriesAxis record.", "tags": "METHOD", "url": "exp/getTickMarkFrequency.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.setTickMarkFrequency(short)", "text": "Set the tick mark frequency field for the CategorySeriesAxis record.", "tags": "METHOD", "url": "exp/setTickMarkFrequency.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.getOptions()", "text": "Get the options field for the CategorySeriesAxis record.", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.setOptions(short)", "text": "Set the options field for the CategorySeriesAxis record.", "tags": "METHOD", "url": "exp/setOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.setValueAxisCrossing(boolean)", "text": "Sets the value axis crossing field value. set true to indicate axis crosses between categories and false to cross axis midway", "tags": "METHOD", "url": "exp/setValueAxisCrossing.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.isValueAxisCrossing()", "text": "set true to indicate axis crosses between categories and false to cross axis midway", "tags": "METHOD", "url": "exp/isValueAxisCrossing.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.setCrossesFarRight(boolean)", "text": "Sets the crosses far right field value. axis crosses at the far right", "tags": "METHOD", "url": "exp/setCrossesFarRight.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.isCrossesFarRight()", "text": "axis crosses at the far right", "tags": "METHOD", "url": "exp/isCrossesFarRight.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.setReversed(boolean)", "text": "Sets the reversed field value. categories are displayed in reverse order", "tags": "METHOD", "url": "exp/setReversed.html"},
                {"title": "org.apache.poi.hssf.record.chart.CategorySeriesAxisRecord.isReversed()", "text": "categories are displayed in reverse order", "tags": "METHOD", "url": "exp/isReversed.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartRecord.getX()", "text": "Get the x field for the Chart record.", "tags": "METHOD", "url": "exp/getX.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartRecord.setX(int)", "text": "Set the x field for the Chart record.", "tags": "METHOD", "url": "exp/setX.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartRecord.getY()", "text": "Get the y field for the Chart record.", "tags": "METHOD", "url": "exp/getY.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartRecord.setY(int)", "text": "Set the y field for the Chart record.", "tags": "METHOD", "url": "exp/setY.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartRecord.getWidth()", "text": "Get the width field for the Chart record.", "tags": "METHOD", "url": "exp/getWidth.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartRecord.setWidth(int)", "text": "Set the width field for the Chart record.", "tags": "METHOD", "url": "exp/setWidth.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartRecord.getHeight()", "text": "Get the height field for the Chart record.", "tags": "METHOD", "url": "exp/getHeight.html"},
                {"title": "org.apache.poi.hssf.record.chart.ChartRecord.setHeight(int)", "text": "Set the height field for the Chart record.", "tags": "METHOD", "url": "exp/setHeight.html"},
                {"title": "org.apache.poi.hssf.record.chart.DataFormatRecord.getPointNumber()", "text": "Get the point number field for the DataFormat record.", "tags": "METHOD", "url": "exp/getPointNumber.html"},
                {"title": "org.apache.poi.hssf.record.chart.DataFormatRecord.setPointNumber(short)", "text": "Set the point number field for the DataFormat record.", "tags": "METHOD", "url": "exp/setPointNumber.html"},
                {"title": "org.apache.poi.hssf.record.chart.DataFormatRecord.getSeriesIndex()", "text": "Get the series index field for the DataFormat record.", "tags": "METHOD", "url": "exp/getSeriesIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.DataFormatRecord.setSeriesIndex(short)", "text": "Set the series index field for the DataFormat record.", "tags": "METHOD", "url": "exp/setSeriesIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.DataFormatRecord.getSeriesNumber()", "text": "Get the series number field for the DataFormat record.", "tags": "METHOD", "url": "exp/getSeriesNumber.html"},
                {"title": "org.apache.poi.hssf.record.chart.DataFormatRecord.setSeriesNumber(short)", "text": "Set the series number field for the DataFormat record.", "tags": "METHOD", "url": "exp/setSeriesNumber.html"},
                {"title": "org.apache.poi.hssf.record.chart.DataFormatRecord.getFormatFlags()", "text": "Get the format flags field for the DataFormat record.", "tags": "METHOD", "url": "exp/getFormatFlags.html"},
                {"title": "org.apache.poi.hssf.record.chart.DataFormatRecord.setFormatFlags(short)", "text": "Set the format flags field for the DataFormat record.", "tags": "METHOD", "url": "exp/setFormatFlags.html"},
                {"title": "org.apache.poi.hssf.record.chart.DataFormatRecord.setUseExcel4Colors(boolean)", "text": "Sets the use excel 4 colors field value. set true to use excel 4 colors.", "tags": "METHOD", "url": "exp/setUseExcel4Colors.html"},
                {"title": "org.apache.poi.hssf.record.chart.DataFormatRecord.isUseExcel4Colors()", "text": "set true to use excel 4 colors.", "tags": "METHOD", "url": "exp/isUseExcel4Colors.html"},
                {"title": "org.apache.poi.hssf.record.chart.DatRecord.getOptions()", "text": "Get the options field for the Dat record.", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.DatRecord.setOptions(short)", "text": "Set the options field for the Dat record.", "tags": "METHOD", "url": "exp/setOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.DatRecord.setHorizontalBorder(boolean)", "text": "Sets the horizontal border field value. has a horizontal border", "tags": "METHOD", "url": "exp/setHorizontalBorder.html"},
                {"title": "org.apache.poi.hssf.record.chart.DatRecord.isHorizontalBorder()", "text": "has a horizontal border", "tags": "METHOD", "url": "exp/isHorizontalBorder.html"},
                {"title": "org.apache.poi.hssf.record.chart.DatRecord.setVerticalBorder(boolean)", "text": "Sets the vertical border field value. has vertical border", "tags": "METHOD", "url": "exp/setVerticalBorder.html"},
                {"title": "org.apache.poi.hssf.record.chart.DatRecord.isVerticalBorder()", "text": "has vertical border", "tags": "METHOD", "url": "exp/isVerticalBorder.html"},
                {"title": "org.apache.poi.hssf.record.chart.DatRecord.setBorder(boolean)", "text": "Sets the border field value. data table has a border", "tags": "METHOD", "url": "exp/setBorder.html"},
                {"title": "org.apache.poi.hssf.record.chart.DatRecord.isBorder()", "text": "data table has a border", "tags": "METHOD", "url": "exp/isBorder.html"},
                {"title": "org.apache.poi.hssf.record.chart.DatRecord.setShowSeriesKey(boolean)", "text": "Sets the show series key field value. shows the series key", "tags": "METHOD", "url": "exp/setShowSeriesKey.html"},
                {"title": "org.apache.poi.hssf.record.chart.DatRecord.isShowSeriesKey()", "text": "shows the series key", "tags": "METHOD", "url": "exp/isShowSeriesKey.html"},
                {"title": "org.apache.poi.hssf.record.chart.DefaultDataLabelTextPropertiesRecord.getCategoryDataType()", "text": "Get the category data type field for the DefaultDataLabelTextProperties record", "tags": "METHOD", "url": "exp/getCategoryDataType.html"},
                {"title": "org.apache.poi.hssf.record.chart.DefaultDataLabelTextPropertiesRecord.setCategoryDataType(short)", "text": "Set the category data type field for the DefaultDataLabelTextProperties record", "tags": "METHOD", "url": "exp/setCategoryDataType.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontBasisRecord.getXBasis()", "text": "Get the x Basis field for the FontBasis record.", "tags": "METHOD", "url": "exp/getXBasis.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontBasisRecord.setXBasis(short)", "text": "Set the x Basis field for the FontBasis record.", "tags": "METHOD", "url": "exp/setXBasis.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontBasisRecord.getYBasis()", "text": "Get the y Basis field for the FontBasis record.", "tags": "METHOD", "url": "exp/getYBasis.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontBasisRecord.setYBasis(short)", "text": "Set the y Basis field for the FontBasis record.", "tags": "METHOD", "url": "exp/setYBasis.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontBasisRecord.getHeightBasis()", "text": "Get the height basis field for the FontBasis record.", "tags": "METHOD", "url": "exp/getHeightBasis.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontBasisRecord.setHeightBasis(short)", "text": "Set the height basis field for the FontBasis record.", "tags": "METHOD", "url": "exp/setHeightBasis.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontBasisRecord.getScale()", "text": "Get the scale field for the FontBasis record.", "tags": "METHOD", "url": "exp/getScale.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontBasisRecord.setScale(short)", "text": "Set the scale field for the FontBasis record.", "tags": "METHOD", "url": "exp/setScale.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontBasisRecord.getIndexToFontTable()", "text": "Get the index to font table field for the FontBasis record.", "tags": "METHOD", "url": "exp/getIndexToFontTable.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontBasisRecord.setIndexToFontTable(short)", "text": "Set the index to font table field for the FontBasis record.", "tags": "METHOD", "url": "exp/setIndexToFontTable.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontIndexRecord.getFontIndex()", "text": "Get the font index field for the FontIndex record.", "tags": "METHOD", "url": "exp/getFontIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.FontIndexRecord.setFontIndex(short)", "text": "Set the font index field for the FontIndex record.", "tags": "METHOD", "url": "exp/setFontIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.FrameRecord.getBorderType()", "text": "Get the border type field for the Frame record", "tags": "METHOD", "url": "exp/getBorderType.html"},
                {"title": "org.apache.poi.hssf.record.chart.FrameRecord.setBorderType(short)", "text": "Set the border type field for the Frame record", "tags": "METHOD", "url": "exp/setBorderType.html"},
                {"title": "org.apache.poi.hssf.record.chart.FrameRecord.getOptions()", "text": "Get the options field for the Frame record.", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.FrameRecord.setOptions(short)", "text": "Set the options field for the Frame record.", "tags": "METHOD", "url": "exp/setOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.FrameRecord.setAutoSize(boolean)", "text": "Sets the auto size field value. excel calculates the size automatically if true", "tags": "METHOD", "url": "exp/setAutoSize.html"},
                {"title": "org.apache.poi.hssf.record.chart.FrameRecord.isAutoSize()", "text": "excel calculates the size automatically if true", "tags": "METHOD", "url": "exp/isAutoSize.html"},
                {"title": "org.apache.poi.hssf.record.chart.FrameRecord.setAutoPosition(boolean)", "text": "Sets the auto position field value. excel calculates the position automatically", "tags": "METHOD", "url": "exp/setAutoPosition.html"},
                {"title": "org.apache.poi.hssf.record.chart.FrameRecord.isAutoPosition()", "text": "excel calculates the position automatically", "tags": "METHOD", "url": "exp/isAutoPosition.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.getXAxisUpperLeft()", "text": "Get the x axis upper left field for the Legend record.", "tags": "METHOD", "url": "exp/getXAxisUpperLeft.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setXAxisUpperLeft(int)", "text": "Set the x axis upper left field for the Legend record.", "tags": "METHOD", "url": "exp/setXAxisUpperLeft.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.getYAxisUpperLeft()", "text": "Get the y axis upper left field for the Legend record.", "tags": "METHOD", "url": "exp/getYAxisUpperLeft.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setYAxisUpperLeft(int)", "text": "Set the y axis upper left field for the Legend record.", "tags": "METHOD", "url": "exp/setYAxisUpperLeft.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.getXSize()", "text": "Get the x size field for the Legend record.", "tags": "METHOD", "url": "exp/getXSize.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setXSize(int)", "text": "Set the x size field for the Legend record.", "tags": "METHOD", "url": "exp/setXSize.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.getYSize()", "text": "Get the y size field for the Legend record.", "tags": "METHOD", "url": "exp/getYSize.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setYSize(int)", "text": "Set the y size field for the Legend record.", "tags": "METHOD", "url": "exp/setYSize.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.getType()", "text": "Get the type field for the Legend record", "tags": "METHOD", "url": "exp/getType.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setType(byte)", "text": "Set the type field for the Legend record", "tags": "METHOD", "url": "exp/setType.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.getSpacing()", "text": "Get the spacing field for the Legend record", "tags": "METHOD", "url": "exp/getSpacing.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setSpacing(byte)", "text": "Set the spacing field for the Legend record", "tags": "METHOD", "url": "exp/setSpacing.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.getOptions()", "text": "Get the options field for the Legend record.", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setOptions(short)", "text": "Set the options field for the Legend record.", "tags": "METHOD", "url": "exp/setOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setAutoPosition(boolean)", "text": "Sets the auto position field value. automatic positioning (1=docked)", "tags": "METHOD", "url": "exp/setAutoPosition.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.isAutoPosition()", "text": "automatic positioning (1=docked)", "tags": "METHOD", "url": "exp/isAutoPosition.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setAutoSeries(boolean)", "text": "Sets the auto series field value. excel 5 only (true)", "tags": "METHOD", "url": "exp/setAutoSeries.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.isAutoSeries()", "text": "excel 5 only (true)", "tags": "METHOD", "url": "exp/isAutoSeries.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setAutoXPositioning(boolean)", "text": "Sets the auto x positioning field value. position of legend on the x axis is automatic", "tags": "METHOD", "url": "exp/setAutoXPositioning.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.isAutoXPositioning()", "text": "position of legend on the x axis is automatic", "tags": "METHOD", "url": "exp/isAutoXPositioning.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setAutoYPositioning(boolean)", "text": "Sets the auto y positioning field value. position of legend on the y axis is automatic", "tags": "METHOD", "url": "exp/setAutoYPositioning.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.isAutoYPositioning()", "text": "position of legend on the y axis is automatic", "tags": "METHOD", "url": "exp/isAutoYPositioning.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setVertical(boolean)", "text": "Sets the vertical field value. vertical or horizontal legend (1 or 0 respectively).  Always 0 if not automatic.", "tags": "METHOD", "url": "exp/setVertical.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.isVertical()", "text": "vertical or horizontal legend (1 or 0 respectively).  Always 0 if not automatic.", "tags": "METHOD", "url": "exp/isVertical.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.setDataTable(boolean)", "text": "Sets the data table field value. 1 if chart contains data table", "tags": "METHOD", "url": "exp/setDataTable.html"},
                {"title": "org.apache.poi.hssf.record.chart.LegendRecord.isDataTable()", "text": "1 if chart contains data table", "tags": "METHOD", "url": "exp/isDataTable.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.getLineColor()", "text": "Get the line color field for the LineFormat record.", "tags": "METHOD", "url": "exp/getLineColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.setLineColor(int)", "text": "Set the line color field for the LineFormat record.", "tags": "METHOD", "url": "exp/setLineColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.getLinePattern()", "text": "Get the line pattern field for the LineFormat record", "tags": "METHOD", "url": "exp/getLinePattern.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.setLinePattern(short)", "text": "Set the line pattern field for the LineFormat record", "tags": "METHOD", "url": "exp/setLinePattern.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.getWeight()", "text": "Get the weight field for the LineFormat record", "tags": "METHOD", "url": "exp/getWeight.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.setWeight(short)", "text": "Set the weight field for the LineFormat record", "tags": "METHOD", "url": "exp/setWeight.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.getFormat()", "text": "Get the format field for the LineFormat record.", "tags": "METHOD", "url": "exp/getFormat.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.setFormat(short)", "text": "Set the format field for the LineFormat record.", "tags": "METHOD", "url": "exp/setFormat.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.getColourPaletteIndex()", "text": "Get the colour palette index field for the LineFormat record.", "tags": "METHOD", "url": "exp/getColourPaletteIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.setColourPaletteIndex(short)", "text": "Set the colour palette index field for the LineFormat record.", "tags": "METHOD", "url": "exp/setColourPaletteIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.setAuto(boolean)", "text": "Sets the auto field value. automatic format", "tags": "METHOD", "url": "exp/setAuto.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.isAuto()", "text": "automatic format", "tags": "METHOD", "url": "exp/isAuto.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.setDrawTicks(boolean)", "text": "Sets the draw ticks field value. draw tick marks", "tags": "METHOD", "url": "exp/setDrawTicks.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.isDrawTicks()", "text": "draw tick marks", "tags": "METHOD", "url": "exp/isDrawTicks.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.setUnknown(boolean)", "text": "Sets the unknown field value. book marks this as reserved = 0 but it seems to do something", "tags": "METHOD", "url": "exp/setUnknown.html"},
                {"title": "org.apache.poi.hssf.record.chart.LineFormatRecord.isUnknown()", "text": "book marks this as reserved = 0 but it seems to do something", "tags": "METHOD", "url": "exp/isUnknown.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord.getLinkType()", "text": "Get the link type field for the LinkedData record", "tags": "METHOD", "url": "exp/getLinkType.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord.setLinkType(byte)", "text": "Set the link type field for the LinkedData record", "tags": "METHOD", "url": "exp/setLinkType.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord.getReferenceType()", "text": "Get the reference type field for the LinkedData record", "tags": "METHOD", "url": "exp/getReferenceType.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord.setReferenceType(byte)", "text": "Set the reference type field for the LinkedData record", "tags": "METHOD", "url": "exp/setReferenceType.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord.getOptions()", "text": "Get the options field for the LinkedData record.", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord.setOptions(short)", "text": "Set the options field for the LinkedData record.", "tags": "METHOD", "url": "exp/setOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord.getIndexNumberFmtRecord()", "text": "Get the index number fmt record field for the LinkedData record.", "tags": "METHOD", "url": "exp/getIndexNumberFmtRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord.setIndexNumberFmtRecord(short)", "text": "Set the index number fmt record field for the LinkedData record.", "tags": "METHOD", "url": "exp/setIndexNumberFmtRecord.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord.getFormulaOfLink()", "text": "Get the formula of link field for the LinkedData record.", "tags": "METHOD", "url": "exp/getFormulaOfLink.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord.setFormulaOfLink(Ptg[])", "text": "Set the formula of link field for the LinkedData record.", "tags": "METHOD", "url": "exp/setFormulaOfLink.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord.setCustomNumberFormat(boolean)", "text": "Sets the custom number format field value. true if this object has a custom number format", "tags": "METHOD", "url": "exp/setCustomNumberFormat.html"},
                {"title": "org.apache.poi.hssf.record.chart.LinkedDataRecord.isCustomNumberFormat()", "text": "true if this object has a custom number format", "tags": "METHOD", "url": "exp/isCustomNumberFormat.html"},
                {"title": "org.apache.poi.hssf.record.chart.NumberFormatIndexRecord.getFormatIndex()", "text": "Get the format index field for the NumberFormatIndex record.", "tags": "METHOD", "url": "exp/getFormatIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.NumberFormatIndexRecord.setFormatIndex(short)", "text": "Set the format index field for the NumberFormatIndex record.", "tags": "METHOD", "url": "exp/setFormatIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.ObjectLinkRecord.getAnchorId()", "text": "Get the anchor id field for the ObjectLink record", "tags": "METHOD", "url": "exp/getAnchorId.html"},
                {"title": "org.apache.poi.hssf.record.chart.ObjectLinkRecord.setAnchorId(short)", "text": "Set the anchor id field for the ObjectLink record", "tags": "METHOD", "url": "exp/setAnchorId.html"},
                {"title": "org.apache.poi.hssf.record.chart.ObjectLinkRecord.getLink1()", "text": "Get the link 1 field for the ObjectLink record.", "tags": "METHOD", "url": "exp/getLink1.html"},
                {"title": "org.apache.poi.hssf.record.chart.ObjectLinkRecord.setLink1(short)", "text": "Set the link 1 field for the ObjectLink record.", "tags": "METHOD", "url": "exp/setLink1.html"},
                {"title": "org.apache.poi.hssf.record.chart.ObjectLinkRecord.getLink2()", "text": "Get the link 2 field for the ObjectLink record.", "tags": "METHOD", "url": "exp/getLink2.html"},
                {"title": "org.apache.poi.hssf.record.chart.ObjectLinkRecord.setLink2(short)", "text": "Set the link 2 field for the ObjectLink record.", "tags": "METHOD", "url": "exp/setLink2.html"},
                {"title": "org.apache.poi.hssf.record.chart.PlotGrowthRecord.getHorizontalScale()", "text": "Get the horizontalScale field for the PlotGrowth record.", "tags": "METHOD", "url": "exp/getHorizontalScale.html"},
                {"title": "org.apache.poi.hssf.record.chart.PlotGrowthRecord.setHorizontalScale(int)", "text": "Set the horizontalScale field for the PlotGrowth record.", "tags": "METHOD", "url": "exp/setHorizontalScale.html"},
                {"title": "org.apache.poi.hssf.record.chart.PlotGrowthRecord.getVerticalScale()", "text": "Get the verticalScale field for the PlotGrowth record.", "tags": "METHOD", "url": "exp/getVerticalScale.html"},
                {"title": "org.apache.poi.hssf.record.chart.PlotGrowthRecord.setVerticalScale(int)", "text": "Set the verticalScale field for the PlotGrowth record.", "tags": "METHOD", "url": "exp/setVerticalScale.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesChartGroupIndexRecord.getChartGroupIndex()", "text": "Get the chart group index field for the SeriesChartGroupIndex record.", "tags": "METHOD", "url": "exp/getChartGroupIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesChartGroupIndexRecord.setChartGroupIndex(short)", "text": "Set the chart group index field for the SeriesChartGroupIndex record.", "tags": "METHOD", "url": "exp/setChartGroupIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesIndexRecord.getIndex()", "text": "Get the index field for the SeriesIndex record.", "tags": "METHOD", "url": "exp/getIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesIndexRecord.setIndex(short)", "text": "Set the index field for the SeriesIndex record.", "tags": "METHOD", "url": "exp/setIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.getFormatFlags()", "text": "Get the format flags field for the SeriesLabels record.", "tags": "METHOD", "url": "exp/getFormatFlags.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.setFormatFlags(short)", "text": "Set the format flags field for the SeriesLabels record.", "tags": "METHOD", "url": "exp/setFormatFlags.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.setShowActual(boolean)", "text": "Sets the show actual field value. show actual value of the data point", "tags": "METHOD", "url": "exp/setShowActual.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.isShowActual()", "text": "show actual value of the data point", "tags": "METHOD", "url": "exp/isShowActual.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.setShowPercent(boolean)", "text": "Sets the show percent field value. show value as percentage of total (pie charts only)", "tags": "METHOD", "url": "exp/setShowPercent.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.isShowPercent()", "text": "show value as percentage of total (pie charts only)", "tags": "METHOD", "url": "exp/isShowPercent.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.setLabelAsPercentage(boolean)", "text": "Sets the label as percentage field value. show category labelvalue as percentage (pie charts only)", "tags": "METHOD", "url": "exp/setLabelAsPercentage.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.isLabelAsPercentage()", "text": "show category labelvalue as percentage (pie charts only)", "tags": "METHOD", "url": "exp/isLabelAsPercentage.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.setSmoothedLine(boolean)", "text": "Sets the smoothed line field value. show smooth line", "tags": "METHOD", "url": "exp/setSmoothedLine.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.isSmoothedLine()", "text": "show smooth line", "tags": "METHOD", "url": "exp/isSmoothedLine.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.setShowLabel(boolean)", "text": "Sets the show label field value. display category label", "tags": "METHOD", "url": "exp/setShowLabel.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.isShowLabel()", "text": "display category label", "tags": "METHOD", "url": "exp/isShowLabel.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.setShowBubbleSizes(boolean)", "text": "Sets the show bubble sizes field value. ??", "tags": "METHOD", "url": "exp/setShowBubbleSizes.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesLabelsRecord.isShowBubbleSizes()", "text": "??", "tags": "METHOD", "url": "exp/isShowBubbleSizes.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesListRecord.getSeriesNumbers()", "text": "Get the series numbers field for the SeriesList record.", "tags": "METHOD", "url": "exp/getSeriesNumbers.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord.getCategoryDataType()", "text": "Get the category data type field for the Series record", "tags": "METHOD", "url": "exp/getCategoryDataType.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord.setCategoryDataType(short)", "text": "Set the category data type field for the Series record", "tags": "METHOD", "url": "exp/setCategoryDataType.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord.getValuesDataType()", "text": "Get the values data type field for the Series record", "tags": "METHOD", "url": "exp/getValuesDataType.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord.setValuesDataType(short)", "text": "Set the values data type field for the Series record", "tags": "METHOD", "url": "exp/setValuesDataType.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord.getNumCategories()", "text": "Get the num categories field for the Series record.", "tags": "METHOD", "url": "exp/getNumCategories.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord.setNumCategories(short)", "text": "Set the num categories field for the Series record.", "tags": "METHOD", "url": "exp/setNumCategories.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord.getNumValues()", "text": "Get the num values field for the Series record.", "tags": "METHOD", "url": "exp/getNumValues.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord.setNumValues(short)", "text": "Set the num values field for the Series record.", "tags": "METHOD", "url": "exp/setNumValues.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord.getBubbleSeriesType()", "text": "Get the bubble series type field for the Series record", "tags": "METHOD", "url": "exp/getBubbleSeriesType.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord.setBubbleSeriesType(short)", "text": "Set the bubble series type field for the Series record", "tags": "METHOD", "url": "exp/setBubbleSeriesType.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord.getNumBubbleValues()", "text": "Get the num bubble values field for the Series record.", "tags": "METHOD", "url": "exp/getNumBubbleValues.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesRecord.setNumBubbleValues(short)", "text": "Set the num bubble values field for the Series record.", "tags": "METHOD", "url": "exp/setNumBubbleValues.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesTextRecord.getId()", "text": "Get the id field for the SeriesText record.", "tags": "METHOD", "url": "exp/getId.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesTextRecord.setId(int)", "text": "Set the id field for the SeriesText record.", "tags": "METHOD", "url": "exp/setId.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesTextRecord.getText()", "text": "Get the text field for the SeriesText record.", "tags": "METHOD", "url": "exp/getText.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesTextRecord.setText(String)", "text": "Set the text field for the SeriesText record.", "tags": "METHOD", "url": "exp/setText.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesToChartGroupRecord.getChartGroupIndex()", "text": "Get the chart group index field for the SeriesToChartGroup record.", "tags": "METHOD", "url": "exp/getChartGroupIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.SeriesToChartGroupRecord.setChartGroupIndex(short)", "text": "Set the chart group index field for the SeriesToChartGroup record.", "tags": "METHOD", "url": "exp/setChartGroupIndex.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.getFlags()", "text": "Get the flags field for the SheetProperties record.", "tags": "METHOD", "url": "exp/getFlags.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.getEmpty()", "text": "Get the empty field for the SheetProperties record", "tags": "METHOD", "url": "exp/getEmpty.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.setEmpty(byte)", "text": "Set the empty field for the SheetProperties record", "tags": "METHOD", "url": "exp/setEmpty.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.setChartTypeManuallyFormatted(boolean)", "text": "Sets the chart type manually formatted field value. Has the chart type been manually formatted?", "tags": "METHOD", "url": "exp/setChartTypeManuallyFormatted.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.isChartTypeManuallyFormatted()", "text": "Has the chart type been manually formatted?", "tags": "METHOD", "url": "exp/isChartTypeManuallyFormatted.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.setPlotVisibleOnly(boolean)", "text": "Sets the plot visible only field value. Only show visible cells on the chart.", "tags": "METHOD", "url": "exp/setPlotVisibleOnly.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.isPlotVisibleOnly()", "text": "Only show visible cells on the chart.", "tags": "METHOD", "url": "exp/isPlotVisibleOnly.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.setDoNotSizeWithWindow(boolean)", "text": "Sets the do not size with window field value. Do not size the chart when the window changes size", "tags": "METHOD", "url": "exp/setDoNotSizeWithWindow.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.isDoNotSizeWithWindow()", "text": "Do not size the chart when the window changes size", "tags": "METHOD", "url": "exp/isDoNotSizeWithWindow.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.setDefaultPlotDimensions(boolean)", "text": "Sets the default plot dimensions field value. Indicates that the default area dimensions should be used.", "tags": "METHOD", "url": "exp/setDefaultPlotDimensions.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.isDefaultPlotDimensions()", "text": "Indicates that the default area dimensions should be used.", "tags": "METHOD", "url": "exp/isDefaultPlotDimensions.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.setAutoPlotArea(boolean)", "text": "Sets the auto plot area field value. ??", "tags": "METHOD", "url": "exp/setAutoPlotArea.html"},
                {"title": "org.apache.poi.hssf.record.chart.SheetPropertiesRecord.isAutoPlotArea()", "text": "??", "tags": "METHOD", "url": "exp/isAutoPlotArea.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.getHorizontalAlignment()", "text": "Get the horizontal alignment field for the Text record", "tags": "METHOD", "url": "exp/getHorizontalAlignment.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setHorizontalAlignment(byte)", "text": "Set the horizontal alignment field for the Text record", "tags": "METHOD", "url": "exp/setHorizontalAlignment.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.getVerticalAlignment()", "text": "Get the vertical alignment field for the Text record", "tags": "METHOD", "url": "exp/getVerticalAlignment.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setVerticalAlignment(byte)", "text": "Set the vertical alignment field for the Text record", "tags": "METHOD", "url": "exp/setVerticalAlignment.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.getDisplayMode()", "text": "Get the display mode field for the Text record", "tags": "METHOD", "url": "exp/getDisplayMode.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setDisplayMode(short)", "text": "Set the display mode field for the Text record", "tags": "METHOD", "url": "exp/setDisplayMode.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.getRgbColor()", "text": "Get the rgbColor field for the Text record.", "tags": "METHOD", "url": "exp/getRgbColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setRgbColor(int)", "text": "Set the rgbColor field for the Text record.", "tags": "METHOD", "url": "exp/setRgbColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.getX()", "text": "Get the x field for the Text record.", "tags": "METHOD", "url": "exp/getX.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setX(int)", "text": "Set the x field for the Text record.", "tags": "METHOD", "url": "exp/setX.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.getY()", "text": "Get the y field for the Text record.", "tags": "METHOD", "url": "exp/getY.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setY(int)", "text": "Set the y field for the Text record.", "tags": "METHOD", "url": "exp/setY.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.getWidth()", "text": "Get the width field for the Text record.", "tags": "METHOD", "url": "exp/getWidth.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setWidth(int)", "text": "Set the width field for the Text record.", "tags": "METHOD", "url": "exp/setWidth.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.getHeight()", "text": "Get the height field for the Text record.", "tags": "METHOD", "url": "exp/getHeight.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setHeight(int)", "text": "Set the height field for the Text record.", "tags": "METHOD", "url": "exp/setHeight.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.getOptions1()", "text": "Get the options1 field for the Text record.", "tags": "METHOD", "url": "exp/getOptions1.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setOptions1(short)", "text": "Set the options1 field for the Text record.", "tags": "METHOD", "url": "exp/setOptions1.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.getIndexOfColorValue()", "text": "Get the index of color value field for the Text record.", "tags": "METHOD", "url": "exp/getIndexOfColorValue.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setIndexOfColorValue(short)", "text": "Set the index of color value field for the Text record.", "tags": "METHOD", "url": "exp/setIndexOfColorValue.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.getOptions2()", "text": "Get the options2 field for the Text record.", "tags": "METHOD", "url": "exp/getOptions2.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setOptions2(short)", "text": "Set the options2 field for the Text record.", "tags": "METHOD", "url": "exp/setOptions2.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.getTextRotation()", "text": "Get the text rotation field for the Text record.", "tags": "METHOD", "url": "exp/getTextRotation.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setTextRotation(short)", "text": "Set the text rotation field for the Text record.", "tags": "METHOD", "url": "exp/setTextRotation.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setAutoColor(boolean)", "text": "Sets the auto color field value. true = automaticly selected colour, false = user-selected", "tags": "METHOD", "url": "exp/setAutoColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.isAutoColor()", "text": "true = automaticly selected colour, false = user-selected", "tags": "METHOD", "url": "exp/isAutoColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setShowKey(boolean)", "text": "Sets the show key field value. true = draw legend", "tags": "METHOD", "url": "exp/setShowKey.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.isShowKey()", "text": "true = draw legend", "tags": "METHOD", "url": "exp/isShowKey.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setShowValue(boolean)", "text": "Sets the show value field value. false = text is category label", "tags": "METHOD", "url": "exp/setShowValue.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.isShowValue()", "text": "false = text is category label", "tags": "METHOD", "url": "exp/isShowValue.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setVertical(boolean)", "text": "Sets the vertical field value. true = text is vertical", "tags": "METHOD", "url": "exp/setVertical.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.isVertical()", "text": "true = text is vertical", "tags": "METHOD", "url": "exp/isVertical.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setAutoGeneratedText(boolean)", "text": "Sets the auto generated text field value.", "tags": "METHOD", "url": "exp/setAutoGeneratedText.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setGenerated(boolean)", "text": "Sets the generated field value.", "tags": "METHOD", "url": "exp/setGenerated.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setAutoLabelDeleted(boolean)", "text": "Sets the auto label deleted field value.", "tags": "METHOD", "url": "exp/setAutoLabelDeleted.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setAutoBackground(boolean)", "text": "Sets the auto background field value.", "tags": "METHOD", "url": "exp/setAutoBackground.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setRotation(short)", "text": "Sets the rotation field value.", "tags": "METHOD", "url": "exp/setRotation.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setShowCategoryLabelAsPercentage(boolean)", "text": "Sets the show category label as percentage field value.", "tags": "METHOD", "url": "exp/setShowCategoryLabelAsPercentage.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setShowValueAsPercentage(boolean)", "text": "Sets the show value as percentage field value.", "tags": "METHOD", "url": "exp/setShowValueAsPercentage.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setShowBubbleSizes(boolean)", "text": "Sets the show bubble sizes field value.", "tags": "METHOD", "url": "exp/setShowBubbleSizes.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setShowLabel(boolean)", "text": "Sets the show label field value.", "tags": "METHOD", "url": "exp/setShowLabel.html"},
                {"title": "org.apache.poi.hssf.record.chart.TextRecord.setDataLabelPlacement(short)", "text": "Sets the data label placement field value.", "tags": "METHOD", "url": "exp/setDataLabelPlacement.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.getMajorTickType()", "text": "Get the major tick type field for the Tick record.", "tags": "METHOD", "url": "exp/getMajorTickType.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setMajorTickType(byte)", "text": "Set the major tick type field for the Tick record.", "tags": "METHOD", "url": "exp/setMajorTickType.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.getMinorTickType()", "text": "Get the minor tick type field for the Tick record.", "tags": "METHOD", "url": "exp/getMinorTickType.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setMinorTickType(byte)", "text": "Set the minor tick type field for the Tick record.", "tags": "METHOD", "url": "exp/setMinorTickType.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.getLabelPosition()", "text": "Get the label position field for the Tick record.", "tags": "METHOD", "url": "exp/getLabelPosition.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setLabelPosition(byte)", "text": "Set the label position field for the Tick record.", "tags": "METHOD", "url": "exp/setLabelPosition.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.getBackground()", "text": "Get the background field for the Tick record.", "tags": "METHOD", "url": "exp/getBackground.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setBackground(byte)", "text": "Set the background field for the Tick record.", "tags": "METHOD", "url": "exp/setBackground.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.getLabelColorRgb()", "text": "Get the label color rgb field for the Tick record.", "tags": "METHOD", "url": "exp/getLabelColorRgb.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setLabelColorRgb(int)", "text": "Set the label color rgb field for the Tick record.", "tags": "METHOD", "url": "exp/setLabelColorRgb.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.getZero1()", "text": "Get the zero 1 field for the Tick record.", "tags": "METHOD", "url": "exp/getZero1.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setZero1(int)", "text": "Set the zero 1 field for the Tick record.", "tags": "METHOD", "url": "exp/setZero1.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.getZero2()", "text": "Get the zero 2 field for the Tick record.", "tags": "METHOD", "url": "exp/getZero2.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setZero2(int)", "text": "Set the zero 2 field for the Tick record.", "tags": "METHOD", "url": "exp/setZero2.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.getOptions()", "text": "Get the options field for the Tick record.", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setOptions(short)", "text": "Set the options field for the Tick record.", "tags": "METHOD", "url": "exp/setOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.getTickColor()", "text": "Get the tick color field for the Tick record.", "tags": "METHOD", "url": "exp/getTickColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setTickColor(short)", "text": "Set the tick color field for the Tick record.", "tags": "METHOD", "url": "exp/setTickColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.getZero3()", "text": "Get the zero 3 field for the Tick record.", "tags": "METHOD", "url": "exp/getZero3.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setZero3(short)", "text": "Set the zero 3 field for the Tick record.", "tags": "METHOD", "url": "exp/setZero3.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setAutoTextColor(boolean)", "text": "Sets the auto text color field value. use the quote unquote automatic color for text", "tags": "METHOD", "url": "exp/setAutoTextColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.isAutoTextColor()", "text": "use the quote unquote automatic color for text", "tags": "METHOD", "url": "exp/isAutoTextColor.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setAutoTextBackground(boolean)", "text": "Sets the auto text background field value. use the quote unquote automatic color for text background", "tags": "METHOD", "url": "exp/setAutoTextBackground.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.isAutoTextBackground()", "text": "use the quote unquote automatic color for text background", "tags": "METHOD", "url": "exp/isAutoTextBackground.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setRotation(short)", "text": "Sets the rotation field value. rotate text (0=none, 1=normal, 2=90 degrees counterclockwise, 3=90 degrees clockwise)", "tags": "METHOD", "url": "exp/setRotation.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.getRotation()", "text": "rotate text (0=none, 1=normal, 2=90 degrees counterclockwise, 3=90 degrees clockwise)", "tags": "METHOD", "url": "exp/getRotation.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.setAutorotate(boolean)", "text": "Sets the autorotate field value. automatically rotate the text", "tags": "METHOD", "url": "exp/setAutorotate.html"},
                {"title": "org.apache.poi.hssf.record.chart.TickRecord.isAutorotate()", "text": "automatically rotate the text", "tags": "METHOD", "url": "exp/isAutorotate.html"},
                {"title": "org.apache.poi.hssf.record.chart.UnitsRecord.getUnits()", "text": "Get the units field for the Units record.", "tags": "METHOD", "url": "exp/getUnits.html"},
                {"title": "org.apache.poi.hssf.record.chart.UnitsRecord.setUnits(short)", "text": "Set the units field for the Units record.", "tags": "METHOD", "url": "exp/setUnits.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.getMinimumAxisValue()", "text": "Get the minimum axis value field for the ValueRange record.", "tags": "METHOD", "url": "exp/getMinimumAxisValue.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setMinimumAxisValue(double)", "text": "Set the minimum axis value field for the ValueRange record.", "tags": "METHOD", "url": "exp/setMinimumAxisValue.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.getMaximumAxisValue()", "text": "Get the maximum axis value field for the ValueRange record.", "tags": "METHOD", "url": "exp/getMaximumAxisValue.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setMaximumAxisValue(double)", "text": "Set the maximum axis value field for the ValueRange record.", "tags": "METHOD", "url": "exp/setMaximumAxisValue.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.getMajorIncrement()", "text": "Get the major increment field for the ValueRange record.", "tags": "METHOD", "url": "exp/getMajorIncrement.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setMajorIncrement(double)", "text": "Set the major increment field for the ValueRange record.", "tags": "METHOD", "url": "exp/setMajorIncrement.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.getMinorIncrement()", "text": "Get the minor increment field for the ValueRange record.", "tags": "METHOD", "url": "exp/getMinorIncrement.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setMinorIncrement(double)", "text": "Set the minor increment field for the ValueRange record.", "tags": "METHOD", "url": "exp/setMinorIncrement.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.getCategoryAxisCross()", "text": "Get the category axis cross field for the ValueRange record.", "tags": "METHOD", "url": "exp/getCategoryAxisCross.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setCategoryAxisCross(double)", "text": "Set the category axis cross field for the ValueRange record.", "tags": "METHOD", "url": "exp/setCategoryAxisCross.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.getOptions()", "text": "Get the options field for the ValueRange record.", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setOptions(short)", "text": "Set the options field for the ValueRange record.", "tags": "METHOD", "url": "exp/setOptions.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setAutomaticMinimum(boolean)", "text": "Sets the automatic minimum field value. automatic minimum value selected", "tags": "METHOD", "url": "exp/setAutomaticMinimum.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.isAutomaticMinimum()", "text": "automatic minimum value selected", "tags": "METHOD", "url": "exp/isAutomaticMinimum.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setAutomaticMaximum(boolean)", "text": "Sets the automatic maximum field value. automatic maximum value selected", "tags": "METHOD", "url": "exp/setAutomaticMaximum.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.isAutomaticMaximum()", "text": "automatic maximum value selected", "tags": "METHOD", "url": "exp/isAutomaticMaximum.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setAutomaticMajor(boolean)", "text": "Sets the automatic major field value. automatic major unit selected", "tags": "METHOD", "url": "exp/setAutomaticMajor.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.isAutomaticMajor()", "text": "automatic major unit selected", "tags": "METHOD", "url": "exp/isAutomaticMajor.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setAutomaticMinor(boolean)", "text": "Sets the automatic minor field value. automatic minor unit selected", "tags": "METHOD", "url": "exp/setAutomaticMinor.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.isAutomaticMinor()", "text": "automatic minor unit selected", "tags": "METHOD", "url": "exp/isAutomaticMinor.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setAutomaticCategoryCrossing(boolean)", "text": "Sets the automatic category crossing field value. category crossing point is automatically selected", "tags": "METHOD", "url": "exp/setAutomaticCategoryCrossing.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.isAutomaticCategoryCrossing()", "text": "category crossing point is automatically selected", "tags": "METHOD", "url": "exp/isAutomaticCategoryCrossing.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setLogarithmicScale(boolean)", "text": "Sets the logarithmic scale field value. use logarithmic scale", "tags": "METHOD", "url": "exp/setLogarithmicScale.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.isLogarithmicScale()", "text": "use logarithmic scale", "tags": "METHOD", "url": "exp/isLogarithmicScale.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setValuesInReverse(boolean)", "text": "Sets the values in reverse field value. values are reverses in graph", "tags": "METHOD", "url": "exp/setValuesInReverse.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.isValuesInReverse()", "text": "values are reverses in graph", "tags": "METHOD", "url": "exp/isValuesInReverse.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setCrossCategoryAxisAtMaximum(boolean)", "text": "Sets the cross category axis at maximum field value. category axis to cross at maximum value", "tags": "METHOD", "url": "exp/setCrossCategoryAxisAtMaximum.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.isCrossCategoryAxisAtMaximum()", "text": "category axis to cross at maximum value", "tags": "METHOD", "url": "exp/isCrossCategoryAxisAtMaximum.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.setReserved(boolean)", "text": "Sets the reserved field value. reserved, must equal 1 (excel dev. guide says otherwise)", "tags": "METHOD", "url": "exp/setReserved.html"},
                {"title": "org.apache.poi.hssf.record.chart.ValueRangeRecord.isReserved()", "text": "reserved, must equal 1 (excel dev. guide says otherwise)", "tags": "METHOD", "url": "exp/isReserved.html"},
                {"title": "org.apache.poi.hssf.record.ColumnInfoRecord.setFirstColumn(int)", "text": "set the first column this record defines formatting info for", "tags": "METHOD", "url": "exp/setFirstColumn.html"},
                {"title": "org.apache.poi.hssf.record.ColumnInfoRecord.setLastColumn(int)", "text": "set the last column this record defines formatting info for", "tags": "METHOD", "url": "exp/setLastColumn.html"},
                {"title": "org.apache.poi.hssf.record.ColumnInfoRecord.setColumnWidth(int)", "text": "set the columns' width in 1256 of a character width", "tags": "METHOD", "url": "exp/setColumnWidth.html"},
                {"title": "org.apache.poi.hssf.record.ColumnInfoRecord.setXFIndex(int)", "text": "set the columns' default format info", "tags": "METHOD", "url": "exp/setXFIndex.html"},
                {"title": "org.apache.poi.hssf.record.ColumnInfoRecord.setHidden(boolean)", "text": "set whether or not these cells are hidden", "tags": "METHOD", "url": "exp/setHidden.html"},
                {"title": "org.apache.poi.hssf.record.ColumnInfoRecord.setOutlineLevel(int)", "text": "set the outline level for the cells", "tags": "METHOD", "url": "exp/setOutlineLevel.html"},
                {"title": "org.apache.poi.hssf.record.ColumnInfoRecord.setCollapsed(boolean)", "text": "set whether the cells are collapsed", "tags": "METHOD", "url": "exp/setCollapsed.html"},
                {"title": "org.apache.poi.hssf.record.ColumnInfoRecord.getFirstColumn()", "text": "get the first column this record defines formatting info for", "tags": "METHOD", "url": "exp/getFirstColumn.html"},
                {"title": "org.apache.poi.hssf.record.ColumnInfoRecord.getLastColumn()", "text": "get the last column this record defines formatting info for", "tags": "METHOD", "url": "exp/getLastColumn.html"},
                {"title": "org.apache.poi.hssf.record.ColumnInfoRecord.getXFIndex()", "text": "get the columns' default format info", "tags": "METHOD", "url": "exp/getXFIndex.html"},
                {"title": "org.apache.poi.hssf.record.common.ExtRst.getDataSize()", "text": "Returns our size, excluding our 4 byte header", "tags": "METHOD", "url": "exp/getDataSize.html"},
                {"title": "org.apache.poi.hssf.record.common.PhRun.equals(Object)", "text": "Our handling of equals is inconsistent with compareTo.  The trouble is because we don't truely understand rich text fields yet it's difficult to make a sound comparison.", "tags": "METHOD", "url": "exp/equals.html"},
                {"title": "org.apache.poi.hssf.record.common.PhRun.getCharCount()", "text": "get the number of characters in the string, as an un-wrapped int", "tags": "METHOD", "url": "exp/getCharCount.html"},
                {"title": "org.apache.poi.hssf.record.common.PhRun.getCharCountShort()", "text": "get the number of characters in the string, wrapped as needed to fit within a short", "tags": "METHOD", "url": "exp/getCharCountShort.html"},
                {"title": "org.apache.poi.hssf.record.common.PhRun.addFormatRun(FormatRun)", "text": "Adds a font run to the formatted string", "tags": "METHOD", "url": "exp/addFormatRun.html"},
                {"title": "org.apache.poi.hssf.record.common.PhRun.swapFontUse(short, short)", "text": "Swaps all use in the string of one font index", "tags": "METHOD", "url": "exp/swapFontUse.html"},
                {"title": "org.apache.poi.hssf.record.common.PhRun.getDebugInfo()", "text": "return a character representation of the fields of this record", "tags": "METHOD", "url": "exp/getDebugInfo.html"},
                {"title": "org.apache.poi.hssf.record.common.PhRun.serialize(ContinuableRecordOutput)", "text": "Serialises out the String", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.getObjectType()", "text": "Get the object type field for the CommonObjectData record", "tags": "METHOD", "url": "exp/getObjectType.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.setObjectType(short)", "text": "Set the object type field for the CommonObjectData record", "tags": "METHOD", "url": "exp/setObjectType.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.getObjectId()", "text": "Get the object id field for the CommonObjectData record.", "tags": "METHOD", "url": "exp/getObjectId.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.setObjectId(int)", "text": "Set the object id field for the CommonObjectData record.", "tags": "METHOD", "url": "exp/setObjectId.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.getOption()", "text": "Get the option field for the CommonObjectData record.", "tags": "METHOD", "url": "exp/getOption.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.setOption(short)", "text": "Set the option field for the CommonObjectData record.", "tags": "METHOD", "url": "exp/setOption.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.getReserved1()", "text": "Get the reserved1 field for the CommonObjectData record.", "tags": "METHOD", "url": "exp/getReserved1.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.setReserved1(int)", "text": "Set the reserved1 field for the CommonObjectData record.", "tags": "METHOD", "url": "exp/setReserved1.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.getReserved2()", "text": "Get the reserved2 field for the CommonObjectData record.", "tags": "METHOD", "url": "exp/getReserved2.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.setReserved2(int)", "text": "Set the reserved2 field for the CommonObjectData record.", "tags": "METHOD", "url": "exp/setReserved2.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.getReserved3()", "text": "Get the reserved3 field for the CommonObjectData record.", "tags": "METHOD", "url": "exp/getReserved3.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.setReserved3(int)", "text": "Set the reserved3 field for the CommonObjectData record.", "tags": "METHOD", "url": "exp/setReserved3.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.setLocked(boolean)", "text": "Sets the locked field value. true if object is locked when sheet has been protected", "tags": "METHOD", "url": "exp/setLocked.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.isLocked()", "text": "true if object is locked when sheet has been protected", "tags": "METHOD", "url": "exp/isLocked.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.setPrintable(boolean)", "text": "Sets the printable field value. object appears when printed", "tags": "METHOD", "url": "exp/setPrintable.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.isPrintable()", "text": "object appears when printed", "tags": "METHOD", "url": "exp/isPrintable.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.setAutofill(boolean)", "text": "Sets the autofill field value. whether object uses an automatic fill style", "tags": "METHOD", "url": "exp/setAutofill.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.isAutofill()", "text": "whether object uses an automatic fill style", "tags": "METHOD", "url": "exp/isAutofill.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.setAutoline(boolean)", "text": "Sets the autoline field value. whether object uses an automatic line style", "tags": "METHOD", "url": "exp/setAutoline.html"},
                {"title": "org.apache.poi.hssf.record.CommonObjectDataSubRecord.isAutoline()", "text": "whether object uses an automatic line style", "tags": "METHOD", "url": "exp/isAutoline.html"},
                {"title": "org.apache.poi.hssf.record.cont.ContinuableRecord.serialize(ContinuableRecordOutput)", "text": "Serializes this record's content to the supplied data output", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.cont.ContinuableRecord.getRecordSize()", "text": "(Note - if any {@link ContinueRecord} is required, this result includes the size of those too)", "tags": "METHOD", "url": "exp/getRecordSize.html"},
                {"title": "org.apache.poi.hssf.record.cont.ContinuableRecordOutput.terminate()", "text": "Terminates the last record (also updates its 'ushort size' field)", "tags": "METHOD", "url": "exp/terminate.html"},
                {"title": "org.apache.poi.hssf.record.cont.ContinuableRecordOutput.writeContinue()", "text": "Terminates the current record and starts a new {@link ContinueRecord} (regardless of how much space is still available in the current record).", "tags": "METHOD", "url": "exp/writeContinue.html"},
                {"title": "org.apache.poi.hssf.record.cont.ContinuableRecordOutput.writeContinueIfRequired(int)", "text": "Will terminate the current record and start a new {@link ContinueRecord} if there isn't space for the requested number of bytes", "tags": "METHOD", "url": "exp/writeContinueIfRequired.html"},
                {"title": "org.apache.poi.hssf.record.cont.ContinuableRecordOutput.writeStringData(String)", "text": "Writes the 'optionFlags' byte and encoded character data of a unicode string", "tags": "METHOD", "url": "exp/writeStringData.html"},
                {"title": "org.apache.poi.hssf.record.cont.ContinuableRecordOutput.writeString(String, int, int)", "text": "Writes a unicode string complete with header and character data", "tags": "METHOD", "url": "exp/writeString.html"},
                {"title": "org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput.getTotalSize()", "text": "includes 4 byte header", "tags": "METHOD", "url": "exp/getTotalSize.html"},
                {"title": "org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput.terminate()", "text": "Finishes writing the current record and updates 'ushort size' field.<br> After this method is called, only {@link #getTotalSize()} may be called.", "tags": "METHOD", "url": "exp/terminate.html"},
                {"title": "org.apache.poi.hssf.record.ContinueRecord.getData()", "text": "get the data for continuation", "tags": "METHOD", "url": "exp/getData.html"},
                {"title": "org.apache.poi.hssf.record.CRNCountRecord.getSid()", "text": "return the non static version of the id for this record.", "tags": "METHOD", "url": "exp/getSid.html"},
                {"title": "org.apache.poi.hssf.record.CRNRecord.getSid()", "text": "return the non static version of the id for this record.", "tags": "METHOD", "url": "exp/getSid.html"},
                {"title": "org.apache.poi.hssf.record.crypto.Biff8DecryptingStream.readRecordSID()", "text": "Reads an unsigned short value without decrypting", "tags": "METHOD", "url": "exp/readRecordSID.html"},
                {"title": "org.apache.poi.hssf.record.crypto.Biff8DecryptingStream.readDataSize()", "text": "Reads an unsigned short value without decrypting", "tags": "METHOD", "url": "exp/readDataSize.html"},
                {"title": "org.apache.poi.hssf.record.crypto.Biff8DecryptingStream.isNeverEncryptedRecord(int)", "text": "TODO: Additionally, the lbPlyPos (position_of_BOF) field of the BoundSheet8 record MUST NOT be encrypted.", "tags": "METHOD", "url": "exp/isNeverEncryptedRecord.html"},
                {"title": "org.apache.poi.hssf.record.crypto.Biff8EncryptionKey.setCurrentUserPassword(String)", "text": "Sets the BIFF8 encryptiondecryption password for the current thread.", "tags": "METHOD", "url": "exp/setCurrentUserPassword.html"},
                {"title": "org.apache.poi.hssf.record.crypto.Biff8EncryptionKey.getCurrentUserPassword()", "text": "if it is currently unset.", "tags": "METHOD", "url": "exp/getCurrentUserPassword.html"},
                {"title": "org.apache.poi.hssf.record.DConRefRecord.getReadablePath()", "text": "See MS-XLS 2.5.277 (VirtualPath)", "tags": "METHOD", "url": "exp/getReadablePath.html"},
                {"title": "org.apache.poi.hssf.record.DConRefRecord.isExternalRef()", "text": "Checks if the data source in this reference record is external to this sheet or internal.", "tags": "METHOD", "url": "exp/isExternalRef.html"},
                {"title": "org.apache.poi.hssf.record.DeltaRecord.getMaxChange()", "text": "get the maximum change", "tags": "METHOD", "url": "exp/getMaxChange.html"},
                {"title": "org.apache.poi.hssf.record.DrawingGroupRecord.processChildRecords()", "text": "Process the bytes into escher records", "tags": "METHOD", "url": "exp/processChildRecords.html"},
                {"title": "org.apache.poi.hssf.record.DrawingRecord.clone()", "text": "Cloning of drawing records must be executed through HSSFPatriarch, because all id's must be changed", "tags": "METHOD", "url": "exp/clone.html"},
                {"title": "org.apache.poi.hssf.record.DVALRecord.setObjectID(int)", "text": "set the object ID of the drop down arrow object for list boxes", "tags": "METHOD", "url": "exp/setObjectID.html"},
                {"title": "org.apache.poi.hssf.record.DVALRecord.setDVRecNo(int)", "text": "Set the number of following DV records", "tags": "METHOD", "url": "exp/setDVRecNo.html"},
                {"title": "org.apache.poi.hssf.record.DVRecord.getListExplicitFormula()", "text": "formula,  otherwise", "tags": "METHOD", "url": "exp/getListExplicitFormula.html"},
                {"title": "org.apache.poi.hssf.record.DVRecord.getSuppressDropdownArrow()", "text": "used,  otherwise", "tags": "METHOD", "url": "exp/getSuppressDropdownArrow.html"},
                {"title": "org.apache.poi.hssf.record.DVRecord.getShowErrorOnInvalidValue()", "text": "in the cell,  otherwise", "tags": "METHOD", "url": "exp/getShowErrorOnInvalidValue.html"},
                {"title": "org.apache.poi.hssf.record.DVRecord.getConditionOperator()", "text": "get the condition operator", "tags": "METHOD", "url": "exp/getConditionOperator.html"},
                {"title": "org.apache.poi.hssf.record.DVRecord.resolveTitleText(String)", "text": "When entered via the UI, Excel translates empty string into \"\0\"", "tags": "METHOD", "url": "exp/resolveTitleText.html"},
                {"title": "org.apache.poi.hssf.record.DVRecord.clone()", "text": "Clones the object. Uses serialisation, as the contents are somewhat complex", "tags": "METHOD", "url": "exp/clone.html"},
                {"title": "org.apache.poi.hssf.record.EmbeddedObjectRefSubRecord.getStreamId()", "text": "Gets the stream ID containing the actual data", "tags": "METHOD", "url": "exp/getStreamId.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.toString()", "text": "Calculates the string representation of this record.  This is simply a dump of all the records.", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.toXml(String)", "text": "Calculates the xml representation of this record.  This is simply a dump of all the records.", "tags": "METHOD", "url": "exp/toXml.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.createAggregate(List<RecordBase>, int)", "text": "Collapses the drawing records into an aggregate", "tags": "METHOD", "url": "exp/createAggregate.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.serialize(int, byte[])", "text": "Serializes this aggregate to a byte array.  Since this is an aggregate record it will effectively serialize the aggregated records.", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.writeDataIntoDrawingRecord(byte[], int, int, byte[], int)", "text": "drawing or continue record)", "tags": "METHOD", "url": "exp/writeDataIntoDrawingRecord.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.getEscherRecordSize(List<EscherRecord>)", "text": "How many bytes do the raw escher records contain.", "tags": "METHOD", "url": "exp/getEscherRecordSize.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.associateShapeToObjRecord(EscherRecord, Record)", "text": "Associates an escher record to an OBJ record or a TXO record.", "tags": "METHOD", "url": "exp/associateShapeToObjRecord.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.removeShapeToObjRecord(EscherRecord)", "text": "Remove echerRecord and associated to it Obj or TextObj record", "tags": "METHOD", "url": "exp/removeShapeToObjRecord.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.buildBaseTree()", "text": "create base tree with such structure:", "tags": "METHOD", "url": "exp/buildBaseTree.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.setDgId(short)", "text": "EscherDgContainer", "tags": "METHOD", "url": "exp/setDgId.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.setMainSpRecordId(int)", "text": "EscherDgContainer", "tags": "METHOD", "url": "exp/setMainSpRecordId.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.getShapeToObjMapping()", "text": "to their {@link TextObjectRecord} or {@link ObjRecord} ", "tags": "METHOD", "url": "exp/getShapeToObjMapping.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.getTailRecords()", "text": "Every HSSFComment shape has a link to a NoteRecord from the tailRec collection.", "tags": "METHOD", "url": "exp/getTailRecords.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.addTailRecord(NoteRecord)", "text": "Add tail record to existing map", "tags": "METHOD", "url": "exp/addTailRecord.html"},
                {"title": "org.apache.poi.hssf.record.EscherAggregate.removeTailRecord(NoteRecord)", "text": "Remove tail record from the existing map", "tags": "METHOD", "url": "exp/removeTailRecord.html"},
                {"title": "org.apache.poi.hssf.record.ExtendedFormatRecord.cloneStyleFrom(ExtendedFormatRecord)", "text": "Clones all the style information from another", "tags": "METHOD", "url": "exp/cloneStyleFrom.html"},
                {"title": "org.apache.poi.hssf.record.ExtendedFormatRecord.equals(Object)", "text": "Will consider two different records with the same", "tags": "METHOD", "url": "exp/equals.html"},
                {"title": "org.apache.poi.hssf.record.ExternalNameRecord.isAutomaticLink()", "text": "For OLE and DDE, links can be either 'automatic' or 'manual'", "tags": "METHOD", "url": "exp/isAutomaticLink.html"},
                {"title": "org.apache.poi.hssf.record.ExternalNameRecord.isPicureLink()", "text": "only for OLE and DDE", "tags": "METHOD", "url": "exp/isPicureLink.html"},
                {"title": "org.apache.poi.hssf.record.ExternalNameRecord.isStdDocumentNameIdentifier()", "text": "DDE links only. If , this denotes the 'StdDocumentName'", "tags": "METHOD", "url": "exp/isStdDocumentNameIdentifier.html"},
                {"title": "org.apache.poi.hssf.record.ExternalNameRecord.getIx()", "text": "If this is a local name, then this is the (1 based)", "tags": "METHOD", "url": "exp/getIx.html"},
                {"title": "org.apache.poi.hssf.record.RefSubRecord.addREFRecord(RefSubRecord)", "text": "adds REF struct (ExternSheetSubRecord)", "tags": "METHOD", "url": "exp/addREFRecord.html"},
                {"title": "org.apache.poi.hssf.record.RefSubRecord.getNumOfREFRecords()", "text": "returns the number of REF Records, which is in model", "tags": "METHOD", "url": "exp/getNumOfREFRecords.html"},
                {"title": "org.apache.poi.hssf.record.RefSubRecord.getSid()", "text": "return the non static version of the id for this record.", "tags": "METHOD", "url": "exp/getSid.html"},
                {"title": "org.apache.poi.hssf.record.RefSubRecord.getFirstSheetIndexFromRefIndex(int)", "text": "Returns the first sheet that the reference applies to, or", "tags": "METHOD", "url": "exp/getFirstSheetIndexFromRefIndex.html"},
                {"title": "org.apache.poi.hssf.record.RefSubRecord.getLastSheetIndexFromRefIndex(int)", "text": "Returns the last sheet that the reference applies to, or", "tags": "METHOD", "url": "exp/getLastSheetIndexFromRefIndex.html"},
                {"title": "org.apache.poi.hssf.record.RefSubRecord.addRef(int, int, int)", "text": "Add a zero-based reference to a {@link org", "tags": "METHOD", "url": "exp/addRef.html"},
                {"title": "org.apache.poi.hssf.record.InfoSubRecord.getRecordSizeForStrings(int)", "text": "Given a number of strings (in the sst), returns the size of the extsst record", "tags": "METHOD", "url": "exp/getRecordSizeForStrings.html"},
                {"title": "org.apache.poi.hssf.record.FileSharingRecord.setReadOnly(short)", "text": "set the readonly flag", "tags": "METHOD", "url": "exp/setReadOnly.html"},
                {"title": "org.apache.poi.hssf.record.FileSharingRecord.getReadOnly()", "text": "get the readonly", "tags": "METHOD", "url": "exp/getReadOnly.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setFontHeight(short)", "text": "sets the height of the font in 120th point units", "tags": "METHOD", "url": "exp/setFontHeight.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setAttributes(short)", "text": "set the font attributes (see individual bit setters that reference this method)", "tags": "METHOD", "url": "exp/setAttributes.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setItalic(boolean)", "text": "set the font to be italics or not", "tags": "METHOD", "url": "exp/setItalic.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setStrikeout(boolean)", "text": "set the font to be stricken out or not", "tags": "METHOD", "url": "exp/setStrikeout.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setMacoutline(boolean)", "text": "whether to use the mac outline font style thing (mac only) - Some mac person should comment this instead of me doing it (since I have no idea)", "tags": "METHOD", "url": "exp/setMacoutline.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setMacshadow(boolean)", "text": "whether to use the mac shado font style thing (mac only) - Some mac person should comment this instead of me doing it (since I have no idea)", "tags": "METHOD", "url": "exp/setMacshadow.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setColorPaletteIndex(short)", "text": "set the font's color palette index", "tags": "METHOD", "url": "exp/setColorPaletteIndex.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setBoldWeight(short)", "text": "set the bold weight for this font (100-1000dec or 0x64-0x3e8).  Default is 0x190 for normal and 0x2bc for bold", "tags": "METHOD", "url": "exp/setBoldWeight.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setSuperSubScript(short)", "text": "set the type of super or subscript for the font", "tags": "METHOD", "url": "exp/setSuperSubScript.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setUnderline(byte)", "text": "set the type of underlining for the font", "tags": "METHOD", "url": "exp/setUnderline.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setFamily(byte)", "text": "set the font family (TODO)", "tags": "METHOD", "url": "exp/setFamily.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setCharset(byte)", "text": "set the character set", "tags": "METHOD", "url": "exp/setCharset.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.setFontName(String)", "text": "set the name of the font", "tags": "METHOD", "url": "exp/setFontName.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.getFontHeight()", "text": "gets the height of the font in 120th point units", "tags": "METHOD", "url": "exp/getFontHeight.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.getAttributes()", "text": "get the font attributes (see individual bit getters that reference this method)", "tags": "METHOD", "url": "exp/getAttributes.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.isItalic()", "text": "get whether the font is to be italics or not", "tags": "METHOD", "url": "exp/isItalic.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.isStruckout()", "text": "get whether the font is to be stricken out or not", "tags": "METHOD", "url": "exp/isStruckout.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.isMacoutlined()", "text": "whether to use the mac outline font style thing (mac only) - Some mac person should comment this instead of me doing it (since I have no idea)", "tags": "METHOD", "url": "exp/isMacoutlined.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.isMacshadowed()", "text": "whether to use the mac shado font style thing (mac only) - Some mac person should comment this instead of me doing it (since I have no idea)", "tags": "METHOD", "url": "exp/isMacshadowed.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.getColorPaletteIndex()", "text": "get the font's color palette index", "tags": "METHOD", "url": "exp/getColorPaletteIndex.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.getBoldWeight()", "text": "get the bold weight for this font (100-1000dec or 0x64-0x3e8).  Default is 0x190 for normal and 0x2bc for bold", "tags": "METHOD", "url": "exp/getBoldWeight.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.getSuperSubScript()", "text": "get the type of super or subscript for the font", "tags": "METHOD", "url": "exp/getSuperSubScript.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.getUnderline()", "text": "get the type of underlining for the font", "tags": "METHOD", "url": "exp/getUnderline.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.getFamily()", "text": "get the font family (TODO)", "tags": "METHOD", "url": "exp/getFamily.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.getCharset()", "text": "get the character set", "tags": "METHOD", "url": "exp/getCharset.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.getFontName()", "text": "get the name of the font", "tags": "METHOD", "url": "exp/getFontName.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.cloneStyleFrom(FontRecord)", "text": "Clones all the font style information from another", "tags": "METHOD", "url": "exp/cloneStyleFrom.html"},
                {"title": "org.apache.poi.hssf.record.FontRecord.sameProperties(FontRecord)", "text": "Does this FontRecord have all the same font", "tags": "METHOD", "url": "exp/sameProperties.html"},
                {"title": "org.apache.poi.hssf.record.FormatRecord.getIndexCode()", "text": "get the format index code (for built in formats)", "tags": "METHOD", "url": "exp/getIndexCode.html"},
                {"title": "org.apache.poi.hssf.record.FormatRecord.getFormatString()", "text": "get the format string", "tags": "METHOD", "url": "exp/getFormatString.html"},
                {"title": "org.apache.poi.hssf.record.SpecialCachedValue.create(long)", "text": "is a normal (non NaN) double value.", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.hssf.record.SpecialCachedValue.setValue(double)", "text": "set the calculated value of the formula", "tags": "METHOD", "url": "exp/setValue.html"},
                {"title": "org.apache.poi.hssf.record.SpecialCachedValue.hasCachedResultString()", "text": "{@link StringRecord} representing the cached text result of the formula evaluation.", "tags": "METHOD", "url": "exp/hasCachedResultString.html"},
                {"title": "org.apache.poi.hssf.record.SpecialCachedValue.setOptions(short)", "text": "set the option flags", "tags": "METHOD", "url": "exp/setOptions.html"},
                {"title": "org.apache.poi.hssf.record.SpecialCachedValue.getValue()", "text": "get the calculated value of the formula", "tags": "METHOD", "url": "exp/getValue.html"},
                {"title": "org.apache.poi.hssf.record.SpecialCachedValue.getOptions()", "text": "get the option flags", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.hssf.record.FtCblsSubRecord.toString()", "text": "Convert this record to string. Used by BiffViewer and other utilities.", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hssf.record.FtCblsSubRecord.serialize(LittleEndianOutput)", "text": "Serialize the record data into the supplied array of bytes", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.FtCfSubRecord.toString()", "text": "Convert this record to string. Used by BiffViewer and other utilities.", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hssf.record.FtCfSubRecord.serialize(LittleEndianOutput)", "text": "Serialize the record data into the supplied array of bytes", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.FtPioGrbitSubRecord.setFlagByBit(int, boolean)", "text": "Use one of the bitmasks MANUAL_ADVANCE_BIT ... CURSOR_VISIBLE_BIT", "tags": "METHOD", "url": "exp/setFlagByBit.html"},
                {"title": "org.apache.poi.hssf.record.FtPioGrbitSubRecord.toString()", "text": "Convert this record to string. Used by BiffViewer and other utilities.", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hssf.record.FtPioGrbitSubRecord.serialize(LittleEndianOutput)", "text": "Serialize the record data into the supplied array of bytes", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.HeaderFooterBase.setText(String)", "text": "set the footer string", "tags": "METHOD", "url": "exp/setText.html"},
                {"title": "org.apache.poi.hssf.record.HeaderFooterBase.getTextLength()", "text": "get the length of the footer string", "tags": "METHOD", "url": "exp/getTextLength.html"},
                {"title": "org.apache.poi.hssf.record.HeaderFooterRecord.serialize(LittleEndianOutput)", "text": "spit the record out AS IS. no interpretation or identification", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.HeaderFooterRecord.getGuid()", "text": "If this header belongs to a specific sheet view , the sheet view?s GUID will be saved here", "tags": "METHOD", "url": "exp/getGuid.html"},
                {"title": "org.apache.poi.hssf.record.GUID.parse(String)", "text": "Read a GUID in standard text form e.g. -&gt; <br> 0x13579BDF, 0x0246, 0x8ACE 0x0123456789ABCDEF", "tags": "METHOD", "url": "exp/parse.html"},
                {"title": "org.apache.poi.hssf.record.GUID.setFirstColumn(int)", "text": "Set the first column (zero-based) of the range that contains this hyperlink", "tags": "METHOD", "url": "exp/setFirstColumn.html"},
                {"title": "org.apache.poi.hssf.record.GUID.setLastColumn(int)", "text": "Set the last column (zero-based) of the range that contains this hyperlink", "tags": "METHOD", "url": "exp/setLastColumn.html"},
                {"title": "org.apache.poi.hssf.record.GUID.setFirstRow(int)", "text": "Set the first row (zero-based) of the range that contains this hyperlink", "tags": "METHOD", "url": "exp/setFirstRow.html"},
                {"title": "org.apache.poi.hssf.record.GUID.setLastRow(int)", "text": "Set the last row (zero-based) of the range that contains this hyperlink", "tags": "METHOD", "url": "exp/setLastRow.html"},
                {"title": "org.apache.poi.hssf.record.GUID.getLabel()", "text": "Return text label for this hyperlink", "tags": "METHOD", "url": "exp/getLabel.html"},
                {"title": "org.apache.poi.hssf.record.GUID.setLabel(String)", "text": "Sets text label for this hyperlink", "tags": "METHOD", "url": "exp/setLabel.html"},
                {"title": "org.apache.poi.hssf.record.GUID.getAddress()", "text": "Hyperlink address. Depending on the hyperlink type it can be URL, e-mail, path to a file, etc.", "tags": "METHOD", "url": "exp/getAddress.html"},
                {"title": "org.apache.poi.hssf.record.GUID.setAddress(String)", "text": "Hyperlink address. Depending on the hyperlink type it can be URL, e-mail, path to a file, etc.", "tags": "METHOD", "url": "exp/setAddress.html"},
                {"title": "org.apache.poi.hssf.record.GUID.getLinkOptions()", "text": "Link options. Must be a combination of HLINK_ constants. For testing only", "tags": "METHOD", "url": "exp/getLinkOptions.html"},
                {"title": "org.apache.poi.hssf.record.GUID.isUrlLink()", "text": "Based on the link options, is this a url?", "tags": "METHOD", "url": "exp/isUrlLink.html"},
                {"title": "org.apache.poi.hssf.record.GUID.isFileLink()", "text": "Based on the link options, is this a file?", "tags": "METHOD", "url": "exp/isFileLink.html"},
                {"title": "org.apache.poi.hssf.record.GUID.isDocumentLink()", "text": "Based on the link options, is this a document?", "tags": "METHOD", "url": "exp/isDocumentLink.html"},
                {"title": "org.apache.poi.hssf.record.GUID.newUrlLink()", "text": "Initialize a new url link", "tags": "METHOD", "url": "exp/newUrlLink.html"},
                {"title": "org.apache.poi.hssf.record.GUID.newFileLink()", "text": "Initialize a new file link", "tags": "METHOD", "url": "exp/newFileLink.html"},
                {"title": "org.apache.poi.hssf.record.GUID.newDocumentLink()", "text": "Initialize a new document link", "tags": "METHOD", "url": "exp/newDocumentLink.html"},
                {"title": "org.apache.poi.hssf.record.IterationRecord.setIteration(boolean)", "text": "set whether or not to iterate for calculations", "tags": "METHOD", "url": "exp/setIteration.html"},
                {"title": "org.apache.poi.hssf.record.IterationRecord.getIteration()", "text": "get whether or not to iterate for calculations", "tags": "METHOD", "url": "exp/getIteration.html"},
                {"title": "org.apache.poi.hssf.record.LabelRecord.getStringLength()", "text": "get the number of characters this string contains", "tags": "METHOD", "url": "exp/getStringLength.html"},
                {"title": "org.apache.poi.hssf.record.LabelRecord.isUnCompressedUnicode()", "text": "is this uncompressed unicode (16bit)?  Or just 8-bit compressed?", "tags": "METHOD", "url": "exp/isUnCompressedUnicode.html"},
                {"title": "org.apache.poi.hssf.record.LabelRecord.getValue()", "text": "get the value", "tags": "METHOD", "url": "exp/getValue.html"},
                {"title": "org.apache.poi.hssf.record.LabelRecord.serialize(int, byte[])", "text": "THROWS A RUNTIME EXCEPTION..  USE LABELSSTRecords.  YOU HAVE NO REASON to use LABELRecord!!", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.LabelRecord.setColumn(short)", "text": "NO-OP!", "tags": "METHOD", "url": "exp/setColumn.html"},
                {"title": "org.apache.poi.hssf.record.LabelRecord.setRow(int)", "text": "NO-OP!", "tags": "METHOD", "url": "exp/setRow.html"},
                {"title": "org.apache.poi.hssf.record.LabelRecord.setXFIndex(short)", "text": "no op!", "tags": "METHOD", "url": "exp/setXFIndex.html"},
                {"title": "org.apache.poi.hssf.record.LabelSSTRecord.setSSTIndex(int)", "text": "set the index to the string in the SSTRecord", "tags": "METHOD", "url": "exp/setSSTIndex.html"},
                {"title": "org.apache.poi.hssf.record.LabelSSTRecord.getSSTIndex()", "text": "get the index to the string in the SSTRecord", "tags": "METHOD", "url": "exp/getSSTIndex.html"},
                {"title": "org.apache.poi.hssf.record.LbsDropData.setStyle(int)", "text": "Set the style of this dropdown. <ul>", "tags": "METHOD", "url": "exp/setStyle.html"},
                {"title": "org.apache.poi.hssf.record.LbsDropData.setNumLines(int)", "text": "Set the number of lines to be displayed in the dropdown.", "tags": "METHOD", "url": "exp/setNumLines.html"},
                {"title": "org.apache.poi.hssf.record.LeftMarginRecord.getMargin()", "text": "Get the margin field for the LeftMargin record.", "tags": "METHOD", "url": "exp/getMargin.html"},
                {"title": "org.apache.poi.hssf.record.LeftMarginRecord.setMargin(double)", "text": "Set the margin field for the LeftMargin record.", "tags": "METHOD", "url": "exp/setMargin.html"},
                {"title": "org.apache.poi.hssf.record.Margin.getMargin()", "text": "Get the margin field for the Margin.", "tags": "METHOD", "url": "exp/getMargin.html"},
                {"title": "org.apache.poi.hssf.record.Margin.setMargin(double)", "text": "Set the margin field for the Margin.", "tags": "METHOD", "url": "exp/setMargin.html"},
                {"title": "org.apache.poi.hssf.record.MergeCellsRecord.getNumAreas()", "text": "get the number of merged areas.  If this drops down to 0 you should just go ahead and delete the record.", "tags": "METHOD", "url": "exp/getNumAreas.html"},
                {"title": "org.apache.poi.hssf.record.MulBlankRecord.getNumColumns()", "text": "get the number of columns this contains (last-first +1)", "tags": "METHOD", "url": "exp/getNumColumns.html"},
                {"title": "org.apache.poi.hssf.record.MulBlankRecord.getXFAt(int)", "text": "returns the xf index for column (coffset = column - field_2_first_col)", "tags": "METHOD", "url": "exp/getXFAt.html"},
                {"title": "org.apache.poi.hssf.record.MulRKRecord.getFirstColumn()", "text": "starting column (first cell this holds in the row)", "tags": "METHOD", "url": "exp/getFirstColumn.html"},
                {"title": "org.apache.poi.hssf.record.MulRKRecord.getLastColumn()", "text": "ending column (last cell this holds in the row)", "tags": "METHOD", "url": "exp/getLastColumn.html"},
                {"title": "org.apache.poi.hssf.record.MulRKRecord.getNumColumns()", "text": "get the number of columns this contains (last-first +1)", "tags": "METHOD", "url": "exp/getNumColumns.html"},
                {"title": "org.apache.poi.hssf.record.MulRKRecord.getXFAt(int)", "text": "returns the xf index for column (coffset = column - field_2_first_col)", "tags": "METHOD", "url": "exp/getXFAt.html"},
                {"title": "org.apache.poi.hssf.record.MulRKRecord.getRKNumberAt(int)", "text": "returns the rk number for column (coffset = column - field_2_first_col)", "tags": "METHOD", "url": "exp/getRKNumberAt.html"},
                {"title": "org.apache.poi.hssf.record.NameCommentRecord.getSid()", "text": "return the non static version of the id for this record.", "tags": "METHOD", "url": "exp/getSid.html"},
                {"title": "org.apache.poi.hssf.record.NameCommentRecord.setNameText(String)", "text": "Updates the name we're associated with, normally used when renaming that Name", "tags": "METHOD", "url": "exp/setNameText.html"},
                {"title": "org.apache.poi.hssf.record.Option.setOptionFlag(short)", "text": "sets the option flag for the named range", "tags": "METHOD", "url": "exp/setOptionFlag.html"},
                {"title": "org.apache.poi.hssf.record.Option.setKeyboardShortcut(byte)", "text": "sets the keyboard shortcut", "tags": "METHOD", "url": "exp/setKeyboardShortcut.html"},
                {"title": "org.apache.poi.hssf.record.Option.getSheetNumber()", "text": "For named ranges, and built-in names", "tags": "METHOD", "url": "exp/getSheetNumber.html"},
                {"title": "org.apache.poi.hssf.record.Option.setNameText(String)", "text": "sets the name of the named range", "tags": "METHOD", "url": "exp/setNameText.html"},
                {"title": "org.apache.poi.hssf.record.Option.setCustomMenuText(String)", "text": "sets the custom menu text", "tags": "METHOD", "url": "exp/setCustomMenuText.html"},
                {"title": "org.apache.poi.hssf.record.Option.setDescriptionText(String)", "text": "sets the description text", "tags": "METHOD", "url": "exp/setDescriptionText.html"},
                {"title": "org.apache.poi.hssf.record.Option.setHelpTopicText(String)", "text": "sets the help topic text", "tags": "METHOD", "url": "exp/setHelpTopicText.html"},
                {"title": "org.apache.poi.hssf.record.Option.setStatusBarText(String)", "text": "sets the status bar text", "tags": "METHOD", "url": "exp/setStatusBarText.html"},
                {"title": "org.apache.poi.hssf.record.Option.getOptionFlag()", "text": "gets the option flag", "tags": "METHOD", "url": "exp/getOptionFlag.html"},
                {"title": "org.apache.poi.hssf.record.Option.getKeyboardShortcut()", "text": "returns the keyboard shortcut", "tags": "METHOD", "url": "exp/getKeyboardShortcut.html"},
                {"title": "org.apache.poi.hssf.record.Option.getNameTextLength()", "text": "gets the name length, in characters", "tags": "METHOD", "url": "exp/getNameTextLength.html"},
                {"title": "org.apache.poi.hssf.record.Option.setFunction(boolean)", "text": "Indicates that the defined name refers to a user-defined function. This attribute is used when there is an add-in or other code project associated with the file.", "tags": "METHOD", "url": "exp/setFunction.html"},
                {"title": "org.apache.poi.hssf.record.Option.isBuiltInName()", "text": "Convenience Function to determine if the name is a built-in name", "tags": "METHOD", "url": "exp/isBuiltInName.html"},
                {"title": "org.apache.poi.hssf.record.Option.getNameText()", "text": "gets the name", "tags": "METHOD", "url": "exp/getNameText.html"},
                {"title": "org.apache.poi.hssf.record.Option.getBuiltInName()", "text": "Gets the Built In Name", "tags": "METHOD", "url": "exp/getBuiltInName.html"},
                {"title": "org.apache.poi.hssf.record.Option.getNameDefinition()", "text": "gets the definition, reference (Formula)", "tags": "METHOD", "url": "exp/getNameDefinition.html"},
                {"title": "org.apache.poi.hssf.record.Option.getCustomMenuText()", "text": "get the custom menu text", "tags": "METHOD", "url": "exp/getCustomMenuText.html"},
                {"title": "org.apache.poi.hssf.record.Option.getDescriptionText()", "text": "gets the description text", "tags": "METHOD", "url": "exp/getDescriptionText.html"},
                {"title": "org.apache.poi.hssf.record.Option.getHelpTopicText()", "text": "get the help topic text", "tags": "METHOD", "url": "exp/getHelpTopicText.html"},
                {"title": "org.apache.poi.hssf.record.Option.getStatusBarText()", "text": "gets the status bar text", "tags": "METHOD", "url": "exp/getStatusBarText.html"},
                {"title": "org.apache.poi.hssf.record.Option.serialize(ContinuableRecordOutput)", "text": "NameRecord can span into", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.Option.getExternSheetNumber()", "text": "gets the extern sheet number", "tags": "METHOD", "url": "exp/getExternSheetNumber.html"},
                {"title": "org.apache.poi.hssf.record.Option.getSid()", "text": "return the non static version of the id for this record.", "tags": "METHOD", "url": "exp/getSid.html"},
                {"title": "org.apache.poi.hssf.record.Option.translateBuiltInName(byte)", "text": "Creates a human readable name for built in types", "tags": "METHOD", "url": "exp/translateBuiltInName.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord.toString()", "text": "Convert this record to string. Used by BiffViewer and other utilities.", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord.getRow()", "text": "Return the row that contains the comment", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord.setRow(int)", "text": "Specify the row that contains the comment", "tags": "METHOD", "url": "exp/setRow.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord.getColumn()", "text": "Return the column that contains the comment", "tags": "METHOD", "url": "exp/getColumn.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord.setColumn(int)", "text": "Specify the column that contains the comment", "tags": "METHOD", "url": "exp/setColumn.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord.getFlags()", "text": "Options flags.", "tags": "METHOD", "url": "exp/getFlags.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord.setFlags(short)", "text": "Options flag", "tags": "METHOD", "url": "exp/setFlags.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord.authorIsMultibyte()", "text": "For unit testing only!", "tags": "METHOD", "url": "exp/authorIsMultibyte.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord.getShapeId()", "text": "Object id for OBJ record that contains the comment", "tags": "METHOD", "url": "exp/getShapeId.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord.setShapeId(int)", "text": "Object id for OBJ record that contains the comment", "tags": "METHOD", "url": "exp/setShapeId.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord.getAuthor()", "text": "Name of the original comment author", "tags": "METHOD", "url": "exp/getAuthor.html"},
                {"title": "org.apache.poi.hssf.record.NoteRecord.setAuthor(String)", "text": "Name of the original comment author", "tags": "METHOD", "url": "exp/setAuthor.html"},
                {"title": "org.apache.poi.hssf.record.NoteStructureSubRecord.toString()", "text": "Convert this record to string. Used by BiffViewer and other utilities.", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hssf.record.NoteStructureSubRecord.serialize(LittleEndianOutput)", "text": "Serialize the record data into the supplied array of bytes", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.NumberRecord.setValue(double)", "text": "set the value for the cell", "tags": "METHOD", "url": "exp/setValue.html"},
                {"title": "org.apache.poi.hssf.record.NumberRecord.getValue()", "text": "get the value for the cell", "tags": "METHOD", "url": "exp/getValue.html"},
                {"title": "org.apache.poi.hssf.record.ObjRecord.canPaddingBeDiscarded(byte[], int)", "text": "Some XLS files have ObjRecords with nearly 8Kb of excessive padding", "tags": "METHOD", "url": "exp/canPaddingBeDiscarded.html"},
                {"title": "org.apache.poi.hssf.record.OldCellRecord.getXFIndex()", "text": "get the index to the ExtendedFormat, for non-Biff2", "tags": "METHOD", "url": "exp/getXFIndex.html"},
                {"title": "org.apache.poi.hssf.record.OldCellRecord.isBiff2()", "text": "Is this a Biff2 record, or newer?", "tags": "METHOD", "url": "exp/isBiff2.html"},
                {"title": "org.apache.poi.hssf.record.OldCellRecord.appendValueText(StringBuilder)", "text": "Append specific debug info (used by {@link #toString()} for the value", "tags": "METHOD", "url": "exp/appendValueText.html"},
                {"title": "org.apache.poi.hssf.record.OldCellRecord.getRecordName()", "text": "Gets the debug info BIFF record type name (used by {@link #toString()}.", "tags": "METHOD", "url": "exp/getRecordName.html"},
                {"title": "org.apache.poi.hssf.record.OldFormulaRecord.getValue()", "text": "get the calculated value of the formula", "tags": "METHOD", "url": "exp/getValue.html"},
                {"title": "org.apache.poi.hssf.record.OldFormulaRecord.getOptions()", "text": "get the option flags", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.hssf.record.OldLabelRecord.getStringLength()", "text": "get the number of characters this string contains", "tags": "METHOD", "url": "exp/getStringLength.html"},
                {"title": "org.apache.poi.hssf.record.OldLabelRecord.getValue()", "text": "Get the String of the cell", "tags": "METHOD", "url": "exp/getValue.html"},
                {"title": "org.apache.poi.hssf.record.OldLabelRecord.serialize(int, byte[])", "text": "Not supported", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.OldSheetRecord.getPositionOfBof()", "text": "get the offset in bytes of the Beginning of File Marker within the HSSF Stream part of the POIFS file", "tags": "METHOD", "url": "exp/getPositionOfBof.html"},
                {"title": "org.apache.poi.hssf.record.OldSheetRecord.getSheetname()", "text": "get the sheetname for this sheet.  (this appears in the tabs at the bottom)", "tags": "METHOD", "url": "exp/getSheetname.html"},
                {"title": "org.apache.poi.hssf.record.Break.addBreak(int, int, int)", "text": "Adds the page break at the specified parameters", "tags": "METHOD", "url": "exp/addBreak.html"},
                {"title": "org.apache.poi.hssf.record.Break.removeBreak(int)", "text": "Removes the break indicated by the parameter", "tags": "METHOD", "url": "exp/removeBreak.html"},
                {"title": "org.apache.poi.hssf.record.Break.getBreak(int)", "text": "Retrieves the region at the rowcolumn indicated", "tags": "METHOD", "url": "exp/getBreak.html"},
                {"title": "org.apache.poi.hssf.record.PaletteRecord.getColor(int)", "text": "Returns the color value at a given index does not exist", "tags": "METHOD", "url": "exp/getColor.html"},
                {"title": "org.apache.poi.hssf.record.PaletteRecord.setColor(short, byte, byte, byte)", "text": "Sets the color value at a given index", "tags": "METHOD", "url": "exp/setColor.html"},
                {"title": "org.apache.poi.hssf.record.PaletteRecord.createDefaultPalette()", "text": "Creates the default palette as PaletteRecord binary data", "tags": "METHOD", "url": "exp/createDefaultPalette.html"},
                {"title": "org.apache.poi.hssf.record.PaneRecord.getX()", "text": "Get the x field for the Pane record.", "tags": "METHOD", "url": "exp/getX.html"},
                {"title": "org.apache.poi.hssf.record.PaneRecord.setX(short)", "text": "Set the x field for the Pane record.", "tags": "METHOD", "url": "exp/setX.html"},
                {"title": "org.apache.poi.hssf.record.PaneRecord.getY()", "text": "Get the y field for the Pane record.", "tags": "METHOD", "url": "exp/getY.html"},
                {"title": "org.apache.poi.hssf.record.PaneRecord.setY(short)", "text": "Set the y field for the Pane record.", "tags": "METHOD", "url": "exp/setY.html"},
                {"title": "org.apache.poi.hssf.record.PaneRecord.getTopRow()", "text": "Get the top row field for the Pane record.", "tags": "METHOD", "url": "exp/getTopRow.html"},
                {"title": "org.apache.poi.hssf.record.PaneRecord.setTopRow(short)", "text": "Set the top row field for the Pane record.", "tags": "METHOD", "url": "exp/setTopRow.html"},
                {"title": "org.apache.poi.hssf.record.PaneRecord.getLeftColumn()", "text": "Get the left column field for the Pane record.", "tags": "METHOD", "url": "exp/getLeftColumn.html"},
                {"title": "org.apache.poi.hssf.record.PaneRecord.setLeftColumn(short)", "text": "Set the left column field for the Pane record.", "tags": "METHOD", "url": "exp/setLeftColumn.html"},
                {"title": "org.apache.poi.hssf.record.PaneRecord.getActivePane()", "text": "Get the active pane field for the Pane record", "tags": "METHOD", "url": "exp/getActivePane.html"},
                {"title": "org.apache.poi.hssf.record.PaneRecord.setActivePane(short)", "text": "Set the active pane field for the Pane record", "tags": "METHOD", "url": "exp/setActivePane.html"},
                {"title": "org.apache.poi.hssf.record.PasswordRecord.getPassword()", "text": "get the password", "tags": "METHOD", "url": "exp/getPassword.html"},
                {"title": "org.apache.poi.hssf.record.PasswordRecord.clone()", "text": "Clone this record.", "tags": "METHOD", "url": "exp/clone.html"},
                {"title": "org.apache.poi.hssf.record.PasswordRev4Record.setPassword(short)", "text": "set the password", "tags": "METHOD", "url": "exp/setPassword.html"},
                {"title": "org.apache.poi.hssf.record.ProtectionRev4Record.setProtect(boolean)", "text": "set whether the this is protected sharedtracked workbook or not", "tags": "METHOD", "url": "exp/setProtect.html"},
                {"title": "org.apache.poi.hssf.record.ProtectionRev4Record.getProtect()", "text": "get whether the this is protected sharedtracked workbook or not", "tags": "METHOD", "url": "exp/getProtect.html"},
                {"title": "org.apache.poi.hssf.record.ProtectRecord.setProtect(boolean)", "text": "set whether the sheet is protected or not", "tags": "METHOD", "url": "exp/setProtect.html"},
                {"title": "org.apache.poi.hssf.record.ProtectRecord.getProtect()", "text": "get whether the sheet is protected or not", "tags": "METHOD", "url": "exp/getProtect.html"},
                {"title": "org.apache.poi.hssf.record.Record.serialize()", "text": "called by the class that is responsible for writing this sucker", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.Record.toString()", "text": "get a string representation of the record (for biffviewdebugging)", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hssf.record.Record.getSid()", "text": "return the non static version of the id for this record.", "tags": "METHOD", "url": "exp/getSid.html"},
                {"title": "org.apache.poi.hssf.record.Record.cloneViaReserialise()", "text": "Clone the current record, via a call to serialize", "tags": "METHOD", "url": "exp/cloneViaReserialise.html"},
                {"title": "org.apache.poi.hssf.record.RecordBase.serialize(int, byte[])", "text": "called by the class that is responsible for writing this sucker", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.RecordBase.getRecordSize()", "text": "gives the current serialized size of the record. Should include the sid and reclength (4 bytes).", "tags": "METHOD", "url": "exp/getRecordSize.html"},
                {"title": "org.apache.poi.hssf.record.ReflectionMethodRecordCreator.getRecordClass(int)", "text": "Debug  diagnosis method<p>", "tags": "METHOD", "url": "exp/getRecordClass.html"},
                {"title": "org.apache.poi.hssf.record.ReflectionMethodRecordCreator.createRecord(RecordInputStream)", "text": "create a record, if there are MUL records than multiple records are returned digested into the non-mul form.", "tags": "METHOD", "url": "exp/createRecord.html"},
                {"title": "org.apache.poi.hssf.record.ReflectionMethodRecordCreator.convertToNumberRecord(RKRecord)", "text": "RK record is a slightly smaller alternative to NumberRecord POI likes NumberRecord better", "tags": "METHOD", "url": "exp/convertToNumberRecord.html"},
                {"title": "org.apache.poi.hssf.record.ReflectionMethodRecordCreator.convertRKRecords(MulRKRecord)", "text": "Converts a {@link MulRKRecord} into an equivalent array of {@link NumberRecord NumberRecords}", "tags": "METHOD", "url": "exp/convertRKRecords.html"},
                {"title": "org.apache.poi.hssf.record.ReflectionMethodRecordCreator.convertBlankRecords(MulBlankRecord)", "text": "Converts a {@link MulBlankRecord} into an equivalent array of {@link BlankRecord BlankRecords}", "tags": "METHOD", "url": "exp/convertBlankRecords.html"},
                {"title": "org.apache.poi.hssf.record.ReflectionMethodRecordCreator.recordsToMap(Class<? extends Record>[])", "text": "gets the record constructors and sticks them in the map by SID most of org.apache.poi.hssf.record.", "tags": "METHOD", "url": "exp/recordsToMap.html"},
                {"title": "org.apache.poi.hssf.record.ReflectionMethodRecordCreator.createRecords(InputStream)", "text": "Create an array of records from an input stream", "tags": "METHOD", "url": "exp/createRecords.html"},
                {"title": "org.apache.poi.hssf.record.StreamEncryptionInfo.getLastRecord()", "text": "This will typically be the first or second record read. Possibly if stream was empty", "tags": "METHOD", "url": "exp/getLastRecord.html"},
                {"title": "org.apache.poi.hssf.record.StreamEncryptionInfo.hasBOFRecord()", "text": "in some test cases", "tags": "METHOD", "url": "exp/hasBOFRecord.html"},
                {"title": "org.apache.poi.hssf.record.StreamEncryptionInfo.getNextUnreadRecord()", "text": "a recently read {@link MulRKRecord}.  if not present.", "tags": "METHOD", "url": "exp/getNextUnreadRecord.html"},
                {"title": "org.apache.poi.hssf.record.StreamEncryptionInfo.readNextRecord()", "text": "this pass didn't return a record that's suitable for returning (eg was a continue record).", "tags": "METHOD", "url": "exp/readNextRecord.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.hasNextRecord()", "text": "Note - this method is expected to be called only when completed reading the current BIFF", "tags": "METHOD", "url": "exp/hasNextRecord.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.nextRecord()", "text": "Moves to the next record in the stream.", "tags": "METHOD", "url": "exp/nextRecord.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.readByte()", "text": "Reads an 8 bit, signed value", "tags": "METHOD", "url": "exp/readByte.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.readShort()", "text": "Reads a 16 bit, signed value", "tags": "METHOD", "url": "exp/readShort.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.readInt()", "text": "Reads a 32 bit, signed value", "tags": "METHOD", "url": "exp/readInt.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.readLong()", "text": "Reads a 64 bit, signed value", "tags": "METHOD", "url": "exp/readLong.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.readUByte()", "text": "Reads an 8 bit, unsigned value", "tags": "METHOD", "url": "exp/readUByte.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.readUShort()", "text": "Reads a 16 bit, unsigned value.", "tags": "METHOD", "url": "exp/readUShort.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.readUnicodeLEString(int)", "text": "given a byte array of 16-bit unicode characters, compress to 8-bit and", "tags": "METHOD", "url": "exp/readUnicodeLEString.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.readRemainder()", "text": "Returns the remaining bytes for the current record.", "tags": "METHOD", "url": "exp/readRemainder.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.remaining()", "text": "The remaining number of bytes in the  record.", "tags": "METHOD", "url": "exp/remaining.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.mark(int)", "text": "Mark the stream position - experimental function", "tags": "METHOD", "url": "exp/mark.html"},
                {"title": "org.apache.poi.hssf.record.SimpleHeaderInput.reset()", "text": "Resets the stream position to the previously marked position. Experimental function - this only works, when nextRecord() wasn't called in the meantime.", "tags": "METHOD", "url": "exp/reset.html"},
                {"title": "org.apache.poi.hssf.record.RefreshAllRecord.setRefreshAll(boolean)", "text": "set whether to refresh all external data when loading a sheet", "tags": "METHOD", "url": "exp/setRefreshAll.html"},
                {"title": "org.apache.poi.hssf.record.RefreshAllRecord.getRefreshAll()", "text": "get whether to refresh all external data when loading a sheet", "tags": "METHOD", "url": "exp/getRefreshAll.html"},
                {"title": "org.apache.poi.hssf.record.RightMarginRecord.getMargin()", "text": "Get the margin field for the RightMargin record.", "tags": "METHOD", "url": "exp/getMargin.html"},
                {"title": "org.apache.poi.hssf.record.RightMarginRecord.setMargin(double)", "text": "Set the margin field for the RightMargin record.", "tags": "METHOD", "url": "exp/setMargin.html"},
                {"title": "org.apache.poi.hssf.record.RKRecord.getRKNumber()", "text": "Extract the value of the number", "tags": "METHOD", "url": "exp/getRKNumber.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setEmpty()", "text": "Updates the firstCol and lastCol fields to the reserved value (-1) to signify that this row is empty", "tags": "METHOD", "url": "exp/setEmpty.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setRowNumber(int)", "text": "set the logical row number for this row (0 based index)", "tags": "METHOD", "url": "exp/setRowNumber.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setFirstCol(int)", "text": "set the logical col number for the first cell this row (0 based index)", "tags": "METHOD", "url": "exp/setFirstCol.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setHeight(short)", "text": "set the height of the row", "tags": "METHOD", "url": "exp/setHeight.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setOptimize(short)", "text": "set whether to optimize or not (set to 0)", "tags": "METHOD", "url": "exp/setOptimize.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setOutlineLevel(short)", "text": "set the outline level of this row", "tags": "METHOD", "url": "exp/setOutlineLevel.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setColapsed(boolean)", "text": "set whether or not to collapse this row", "tags": "METHOD", "url": "exp/setColapsed.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setZeroHeight(boolean)", "text": "set whether or not to display this row with 0 height", "tags": "METHOD", "url": "exp/setZeroHeight.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setBadFontHeight(boolean)", "text": "set whether the font and row height are not compatible", "tags": "METHOD", "url": "exp/setBadFontHeight.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setFormatted(boolean)", "text": "set whether the row has been formatted (even if its got all blank cells)", "tags": "METHOD", "url": "exp/setFormatted.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setXFIndex(short)", "text": "if the row is formatted then this is the index to the extended format record", "tags": "METHOD", "url": "exp/setXFIndex.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setTopBorder(boolean)", "text": "bit that specifies whether any cell in the row has a thick top border, or any cell in the row directly above the current row has a thick bottom border.", "tags": "METHOD", "url": "exp/setTopBorder.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setBottomBorder(boolean)", "text": "A bit that specifies whether any cell in the row has a medium or thick", "tags": "METHOD", "url": "exp/setBottomBorder.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.setPhoeneticGuide(boolean)", "text": "A bit that specifies whether the phonetic guide feature is enabled for any cell in this row.", "tags": "METHOD", "url": "exp/setPhoeneticGuide.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getRowNumber()", "text": "get the logical row number for this row (0 based index)", "tags": "METHOD", "url": "exp/getRowNumber.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getFirstCol()", "text": "get the logical col number for the first cell this row (0 based index)", "tags": "METHOD", "url": "exp/getFirstCol.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getLastCol()", "text": "get the logical col number for the last cell this row (0 based index), plus one", "tags": "METHOD", "url": "exp/getLastCol.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getHeight()", "text": "get the height of the row", "tags": "METHOD", "url": "exp/getHeight.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getOptimize()", "text": "get whether to optimize or not (set to 0)", "tags": "METHOD", "url": "exp/getOptimize.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getOptionFlags()", "text": "gets the option bitmask.  (use the individual bit setters that refer to this method)", "tags": "METHOD", "url": "exp/getOptionFlags.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getOutlineLevel()", "text": "get the outline level of this row", "tags": "METHOD", "url": "exp/getOutlineLevel.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getColapsed()", "text": "get whether or not to colapse this row", "tags": "METHOD", "url": "exp/getColapsed.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getZeroHeight()", "text": "get whether or not to display this row with 0 height", "tags": "METHOD", "url": "exp/getZeroHeight.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getBadFontHeight()", "text": "get whether the font and row height are not compatible", "tags": "METHOD", "url": "exp/getBadFontHeight.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getFormatted()", "text": "get whether the row has been formatted (even if its got all blank cells)", "tags": "METHOD", "url": "exp/getFormatted.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getOptionFlags2()", "text": "gets the 2nd option bitmask.  (use the individual bit setters that refer to this method)", "tags": "METHOD", "url": "exp/getOptionFlags2.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getXFIndex()", "text": "if the row is formatted then this is the index to the extended format record", "tags": "METHOD", "url": "exp/getXFIndex.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getTopBorder()", "text": "A bit that specifies whether any cell in the row has a thick top border, or any cell in the row directly above the current row has a thick bottom border.", "tags": "METHOD", "url": "exp/getTopBorder.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getBottomBorder()", "text": "A bit that specifies whether any cell in the row has a medium or thick bottom border, or any cell in the row directly below the current row has a medium or thick top border.", "tags": "METHOD", "url": "exp/getBottomBorder.html"},
                {"title": "org.apache.poi.hssf.record.RowRecord.getPhoeneticGuide()", "text": "A bit that specifies whether the phonetic guide feature is enabled for any cell in this row.", "tags": "METHOD", "url": "exp/getPhoeneticGuide.html"},
                {"title": "org.apache.poi.hssf.record.SCLRecord.getNumerator()", "text": "Get the numerator field for the SCL record.", "tags": "METHOD", "url": "exp/getNumerator.html"},
                {"title": "org.apache.poi.hssf.record.SCLRecord.setNumerator(short)", "text": "Set the numerator field for the SCL record.", "tags": "METHOD", "url": "exp/setNumerator.html"},
                {"title": "org.apache.poi.hssf.record.SCLRecord.getDenominator()", "text": "Get the denominator field for the SCL record.", "tags": "METHOD", "url": "exp/getDenominator.html"},
                {"title": "org.apache.poi.hssf.record.SCLRecord.setDenominator(short)", "text": "Set the denominator field for the SCL record.", "tags": "METHOD", "url": "exp/setDenominator.html"},
                {"title": "org.apache.poi.hssf.record.SelectionRecord.setPane(byte)", "text": "set which window pane this is for", "tags": "METHOD", "url": "exp/setPane.html"},
                {"title": "org.apache.poi.hssf.record.SelectionRecord.setActiveCellRow(int)", "text": "set the active cell's row", "tags": "METHOD", "url": "exp/setActiveCellRow.html"},
                {"title": "org.apache.poi.hssf.record.SelectionRecord.setActiveCellCol(short)", "text": "set the active cell's col", "tags": "METHOD", "url": "exp/setActiveCellCol.html"},
                {"title": "org.apache.poi.hssf.record.SelectionRecord.setActiveCellRef(short)", "text": "set the active cell's reference number", "tags": "METHOD", "url": "exp/setActiveCellRef.html"},
                {"title": "org.apache.poi.hssf.record.SelectionRecord.getActiveCellRow()", "text": "get the active cell's row", "tags": "METHOD", "url": "exp/getActiveCellRow.html"},
                {"title": "org.apache.poi.hssf.record.SelectionRecord.getActiveCellCol()", "text": "get the active cell's col", "tags": "METHOD", "url": "exp/getActiveCellCol.html"},
                {"title": "org.apache.poi.hssf.record.SelectionRecord.getActiveCellRef()", "text": "get the active cell's reference number", "tags": "METHOD", "url": "exp/getActiveCellRef.html"},
                {"title": "org.apache.poi.hssf.record.SharedValueRecordBase.isFirstCell(int, int)", "text": "object's range", "tags": "METHOD", "url": "exp/isFirstCell.html"},
                {"title": "org.apache.poi.hssf.record.SSTDeserializer.manufactureStrings(int, RecordInputStream)", "text": "This is the starting point where strings are constructed", "tags": "METHOD", "url": "exp/manufactureStrings.html"},
                {"title": "org.apache.poi.hssf.record.SSTRecord.addString(UnicodeString)", "text": "Add a string.", "tags": "METHOD", "url": "exp/addString.html"},
                {"title": "org.apache.poi.hssf.record.SSTRecord.getString(int)", "text": "Get a particular string by its index", "tags": "METHOD", "url": "exp/getString.html"},
                {"title": "org.apache.poi.hssf.record.SSTRecord.toString()", "text": "Return a debugging string representation", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hssf.record.SSTRecord.getStrings()", "text": "UnicodeStrings", "tags": "METHOD", "url": "exp/getStrings.html"},
                {"title": "org.apache.poi.hssf.record.SSTRecord.createExtSSTRecord(int)", "text": "Creates an extended string record based on the current contents of", "tags": "METHOD", "url": "exp/createExtSSTRecord.html"},
                {"title": "org.apache.poi.hssf.record.SSTRecord.calcExtSSTRecordSize()", "text": "Calculates the size in bytes of the EXTSST record as it would be if the record was serialized.", "tags": "METHOD", "url": "exp/calcExtSSTRecordSize.html"},
                {"title": "org.apache.poi.hssf.record.StandardRecord.serialize(int, byte[])", "text": "Write the data content of this BIFF record including the sid and record length", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.StandardRecord.serialize(LittleEndianOutput)", "text": "Write the data content of this BIFF record", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.StringRecord.setString(String)", "text": "Sets the string represented by this record.", "tags": "METHOD", "url": "exp/setString.html"},
                {"title": "org.apache.poi.hssf.record.StyleRecord.setXFIndex(int)", "text": "set the actual index of the style extended format record", "tags": "METHOD", "url": "exp/setXFIndex.html"},
                {"title": "org.apache.poi.hssf.record.StyleRecord.getXFIndex()", "text": "get the actual index of the style extended format record", "tags": "METHOD", "url": "exp/getXFIndex.html"},
                {"title": "org.apache.poi.hssf.record.StyleRecord.setName(String)", "text": "set the style's name", "tags": "METHOD", "url": "exp/setName.html"},
                {"title": "org.apache.poi.hssf.record.StyleRecord.setBuiltinStyle(int)", "text": "if this is a builtin style set the number of the built in style", "tags": "METHOD", "url": "exp/setBuiltinStyle.html"},
                {"title": "org.apache.poi.hssf.record.StyleRecord.setOutlineStyleLevel(int)", "text": "set the row or column level of the style (if builtin 1||2)", "tags": "METHOD", "url": "exp/setOutlineStyleLevel.html"},
                {"title": "org.apache.poi.hssf.record.StyleRecord.getName()", "text": "get the style's name", "tags": "METHOD", "url": "exp/getName.html"},
                {"title": "org.apache.poi.hssf.record.SubRecord.createSubRecord(LittleEndianInput, int)", "text": "read a sub-record from the supplied stream we need it to propagate to next sub-records as it defines what data follows", "tags": "METHOD", "url": "exp/createSubRecord.html"},
                {"title": "org.apache.poi.hssf.record.SubRecord.getDataSize()", "text": "record size).  Note however, that ushort encoded after the record sid is usually but not always the data size.", "tags": "METHOD", "url": "exp/getDataSize.html"},
                {"title": "org.apache.poi.hssf.record.SubRecord.isTerminating()", "text": "Wether this record terminates the sub-record stream", "tags": "METHOD", "url": "exp/isTerminating.html"},
                {"title": "org.apache.poi.hssf.record.TabIdRecord.setTabIdArray(short[])", "text": "set the tab array.  (0,1,2).", "tags": "METHOD", "url": "exp/setTabIdArray.html"},
                {"title": "org.apache.poi.hssf.record.TextObjectRecord.setHorizontalTextAlignment(int)", "text": "Sets the Horizontal text alignment field value.", "tags": "METHOD", "url": "exp/setHorizontalTextAlignment.html"},
                {"title": "org.apache.poi.hssf.record.TextObjectRecord.setVerticalTextAlignment(int)", "text": "Sets the Vertical text alignment field value.", "tags": "METHOD", "url": "exp/setVerticalTextAlignment.html"},
                {"title": "org.apache.poi.hssf.record.TextObjectRecord.setTextLocked(boolean)", "text": "Sets the text locked field value.", "tags": "METHOD", "url": "exp/setTextLocked.html"},
                {"title": "org.apache.poi.hssf.record.TextObjectRecord.getTextOrientation()", "text": "Get the text orientation field for the TextObjectBase record. TEXT_ORIENTATION_ROT_RIGHT TEXT_ORIENTATION_ROT_LEFT", "tags": "METHOD", "url": "exp/getTextOrientation.html"},
                {"title": "org.apache.poi.hssf.record.TextObjectRecord.setTextOrientation(int)", "text": "Set the text orientation field for the TextObjectBase record", "tags": "METHOD", "url": "exp/setTextOrientation.html"},
                {"title": "org.apache.poi.hssf.record.TopMarginRecord.getMargin()", "text": "Get the margin field for the TopMargin record.", "tags": "METHOD", "url": "exp/getMargin.html"},
                {"title": "org.apache.poi.hssf.record.TopMarginRecord.setMargin(double)", "text": "Set the margin field for the TopMargin record.", "tags": "METHOD", "url": "exp/setMargin.html"},
                {"title": "org.apache.poi.hssf.record.UnknownRecord.serialize(LittleEndianOutput)", "text": "spit the record out AS IS. no interpretation or identification", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.UnknownRecord.toString()", "text": "print a sort of string representation ([UNKNOWN RECORD] id = x [UNKNOWN RECORD])", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hssf.record.UnknownRecord.getBiffName(int)", "text": "These BIFF record types are known but still uninterpreted by POI", "tags": "METHOD", "url": "exp/getBiffName.html"},
                {"title": "org.apache.poi.hssf.record.UserSViewBegin.serialize(LittleEndianOutput)", "text": "spit the record out AS IS. no interpretation or identification", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.UserSViewEnd.serialize(LittleEndianOutput)", "text": "spit the record out AS IS. no interpretation or identification", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.hssf.record.WindowOneRecord.setFirstVisibleTab(int)", "text": "Sets the first visible sheet in the worksheet tab-bar.  This method does hide, select or focus sheets.  It just sets the scroll position in the tab-bar.", "tags": "METHOD", "url": "exp/setFirstVisibleTab.html"},
                {"title": "org.apache.poi.hssf.record.WindowOneRecord.getFirstVisibleTab()", "text": "I.E. the scroll position of the tab-bar.", "tags": "METHOD", "url": "exp/getFirstVisibleTab.html"},
                {"title": "org.apache.poi.hssf.record.WindowProtectRecord.setProtect(boolean)", "text": "set whether this window should be protected or not", "tags": "METHOD", "url": "exp/setProtect.html"},
                {"title": "org.apache.poi.hssf.record.WindowProtectRecord.getProtect()", "text": "is this window protected or not", "tags": "METHOD", "url": "exp/getProtect.html"},
                {"title": "org.apache.poi.hssf.record.WindowTwoRecord.setActive(boolean)", "text": "is the sheet currently displayed in the window", "tags": "METHOD", "url": "exp/setActive.html"},
                {"title": "org.apache.poi.hssf.record.WriteAccessRecord.setUsername(String)", "text": "set the username for the user that created the report. HSSF uses the logged in user.", "tags": "METHOD", "url": "exp/setUsername.html"},
                {"title": "org.apache.poi.hssf.record.WriteAccessRecord.getUsername()", "text": "get the username for the user that created the report", "tags": "METHOD", "url": "exp/getUsername.html"},
                {"title": "org.apache.poi.hssf.usermodel.FormulaPair.createNumericConstraint(int, int, String, String)", "text": "Creates a number based data validation constraint", "tags": "METHOD", "url": "exp/createNumericConstraint.html"},
                {"title": "org.apache.poi.hssf.usermodel.FormulaPair.createTimeConstraint(int, String, String)", "text": "Creates a time based data validation constraint", "tags": "METHOD", "url": "exp/createTimeConstraint.html"},
                {"title": "org.apache.poi.hssf.usermodel.FormulaPair.createDateConstraint(int, String, String, String)", "text": "Creates a date based data validation constraint", "tags": "METHOD", "url": "exp/createDateConstraint.html"},
                {"title": "org.apache.poi.hssf.usermodel.FormulaPair.getFormulaFromTextExpression(String)", "text": "Distinguishes formula expressions from simple value expressions", "tags": "METHOD", "url": "exp/getFormulaFromTextExpression.html"},
                {"title": "org.apache.poi.hssf.usermodel.FormulaPair.isListValidationType()", "text": "Convenience method", "tags": "METHOD", "url": "exp/isListValidationType.html"},
                {"title": "org.apache.poi.hssf.usermodel.FormulaPair.isExplicitList()", "text": "Convenience method", "tags": "METHOD", "url": "exp/isExplicitList.html"},
                {"title": "org.apache.poi.hssf.usermodel.FormulaPair.setValue1(double)", "text": "Sets a numeric value for expression 1.", "tags": "METHOD", "url": "exp/setValue1.html"},
                {"title": "org.apache.poi.hssf.usermodel.FormulaPair.setValue2(double)", "text": "Sets a numeric value for expression 2.", "tags": "METHOD", "url": "exp/setValue2.html"},
                {"title": "org.apache.poi.hssf.usermodel.FormulaPair.convertDoubleFormula(String, Double, HSSFSheet)", "text": "Empty array if both formula and value are", "tags": "METHOD", "url": "exp/convertDoubleFormula.html"},
                {"title": "org.apache.poi.hssf.usermodel.EscherGraphics.fillPolygon(int[], int[], int)", "text": "Fills a (closed) polygon, as defined by a pair of arrays, which", "tags": "METHOD", "url": "exp/fillPolygon.html"},
                {"title": "org.apache.poi.hssf.usermodel.EscherGraphics2d.fillPolygon(int[], int[], int)", "text": "Fills a (closed) polygon, as defined by a pair of arrays, which", "tags": "METHOD", "url": "exp/fillPolygon.html"},
                {"title": "org.apache.poi.hssf.usermodel.FontDetails.getCharWidth(char)", "text": "Retrieves the width of the specified character", "tags": "METHOD", "url": "exp/getCharWidth.html"},
                {"title": "org.apache.poi.hssf.usermodel.FontDetails.create(String, Properties)", "text": "Create an instance of  by loading them from the", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.hssf.usermodel.FontDetails.getStringWidth(String)", "text": "Gets the width of all characters in a string.", "tags": "METHOD", "url": "exp/getStringWidth.html"},
                {"title": "org.apache.poi.hssf.usermodel.FontDetails.split(String, String, int)", "text": "Split the given string into an array of strings using the given delimiter.", "tags": "METHOD", "url": "exp/split.html"},
                {"title": "org.apache.poi.hssf.usermodel.HeaderFooter.getRawText()", "text": "Possibly empty string if no header or footer is set.  Never .", "tags": "METHOD", "url": "exp/getRawText.html"},
                {"title": "org.apache.poi.hssf.usermodel.HeaderFooter.updateHeaderFooterText(String[])", "text": "Creates the complete footer string based on the left, center, and middle strings.", "tags": "METHOD", "url": "exp/updateHeaderFooterText.html"},
                {"title": "org.apache.poi.hssf.usermodel.HeaderFooter.setHeaderFooterText(String)", "text": "empty string never", "tags": "METHOD", "url": "exp/setHeaderFooterText.html"},
                {"title": "org.apache.poi.hssf.usermodel.HeaderFooter.fontSize(short)", "text": "the new font size", "tags": "METHOD", "url": "exp/fontSize.html"},
                {"title": "org.apache.poi.hssf.usermodel.HeaderFooter.font(String, String)", "text": "the new font", "tags": "METHOD", "url": "exp/font.html"},
                {"title": "org.apache.poi.hssf.usermodel.HeaderFooter.stripFields(String)", "text": "Removes any fields (eg macros, page markers etc) from the string", "tags": "METHOD", "url": "exp/stripFields.html"},
                {"title": "org.apache.poi.hssf.usermodel.HeaderFooter.occursPairs()", "text": "underline  turn off underline", "tags": "METHOD", "url": "exp/occursPairs.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getSheet()", "text": "Returns the HSSFSheet this cell belongs to", "tags": "METHOD", "url": "exp/getSheet.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getRow()", "text": "Returns the HSSFRow this cell belongs to", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.determineType(CellValueRecordInterface)", "text": "used internally -- given a cell value record, figure out its type", "tags": "METHOD", "url": "exp/determineType.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getBoundWorkbook()", "text": "Returns the Workbook that this Cell is bound to", "tags": "METHOD", "url": "exp/getBoundWorkbook.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.updateCellNum(short)", "text": "Updates the cell record's idea of what column it belongs in (0 based)", "tags": "METHOD", "url": "exp/updateCellNum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getAddress()", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/getAddress.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.setCellType(CellType)", "text": "Set the cells type (numeric, formula or string)", "tags": "METHOD", "url": "exp/setCellType.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getCellTypeEnum()", "text": "get the cells type (numeric, formula or string) Will be deleted when we make the CellType enum transition. See bug 59791.", "tags": "METHOD", "url": "exp/getCellTypeEnum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.setCellValue(double)", "text": "set a numeric value for the cell", "tags": "METHOD", "url": "exp/setCellValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.setCellValue(Date)", "text": "set a date value for the cell", "tags": "METHOD", "url": "exp/setCellValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.setCellValue(Calendar)", "text": "set a date value for the cell", "tags": "METHOD", "url": "exp/setCellValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.setCellValue(String)", "text": "set a string value for the cell", "tags": "METHOD", "url": "exp/setCellValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.notifyFormulaChanging()", "text": "Should be called any time that a formula could potentially be deleted. Does nothing if this cell currently does not hold a formula", "tags": "METHOD", "url": "exp/notifyFormulaChanging.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getNumericCellValue()", "text": "Get the value of the cell as a number", "tags": "METHOD", "url": "exp/getNumericCellValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getDateCellValue()", "text": "Get the value of the cell as a date", "tags": "METHOD", "url": "exp/getDateCellValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getStringCellValue()", "text": "get the value of the cell as a string - for numeric cells we throw an exception", "tags": "METHOD", "url": "exp/getStringCellValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getRichStringCellValue()", "text": "get the value of the cell as a string - for numeric cells we throw an exception", "tags": "METHOD", "url": "exp/getRichStringCellValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.setCellValue(boolean)", "text": "set a boolean value for the cell", "tags": "METHOD", "url": "exp/setCellValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.setCellErrorValue(FormulaError)", "text": "set a error value for the cell", "tags": "METHOD", "url": "exp/setCellErrorValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.convertCellValueToBoolean()", "text": "Chooses a new boolean value for the cell when its type is changing", "tags": "METHOD", "url": "exp/convertCellValueToBoolean.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getBooleanCellValue()", "text": "get the value of the cell as a boolean.  For strings, numbers, and errors, we throw an exception. For blank cells we return a false.", "tags": "METHOD", "url": "exp/getBooleanCellValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getErrorCellValue()", "text": "get the value of the cell as an error code.  For strings, numbers, and booleans, we throw an exception. For blank cells we return a 0.", "tags": "METHOD", "url": "exp/getErrorCellValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getCellStyle()", "text": "get the style for the cell.  This is a reference to a cell style contained in the workbook object.", "tags": "METHOD", "url": "exp/getCellStyle.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.setAsActiveCell()", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/setAsActiveCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.toString()", "text": "Returns a string representation of the cell", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.setCellComment(Comment)", "text": "Assign a comment to this cell", "tags": "METHOD", "url": "exp/setCellComment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getCellComment()", "text": "Returns comment associated with this cell", "tags": "METHOD", "url": "exp/getCellComment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.removeCellComment()", "text": "Removes the comment for this cell, if", "tags": "METHOD", "url": "exp/removeCellComment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.setHyperlink(Hyperlink)", "text": "Assign a hyperlink to this cell. If the supplied hyperlink is null, the hyperlink for this cell will be removed.", "tags": "METHOD", "url": "exp/setHyperlink.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.removeHyperlink()", "text": "Removes the hyperlink for this cell, if there is one.", "tags": "METHOD", "url": "exp/removeHyperlink.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.getCachedFormulaResultTypeEnum()", "text": "Only valid for formula cells", "tags": "METHOD", "url": "exp/getCachedFormulaResultTypeEnum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.notifyArrayFormulaChanging(String)", "text": "The purpose of this method is to validate the cell state prior to modification", "tags": "METHOD", "url": "exp/notifyArrayFormulaChanging.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.notifyArrayFormulaChanging()", "text": "Called when this cell is modified.", "tags": "METHOD", "url": "exp/notifyArrayFormulaChanging.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCell.applyUserCellStyle(HSSFCellStyle)", "text": "Applying a user-defined style (UDS) is special", "tags": "METHOD", "url": "exp/applyUserCellStyle.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getIndex()", "text": "get the index within the HSSFWorkbook (sequence within the collection of ExtnededFormat objects) unless you're comparing which one is which)", "tags": "METHOD", "url": "exp/getIndex.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getParentStyle()", "text": "Return the parent style for this cell style", "tags": "METHOD", "url": "exp/getParentStyle.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setDataFormat(short)", "text": "set the data format (must be a valid format)", "tags": "METHOD", "url": "exp/setDataFormat.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getDataFormat()", "text": "get the index of the format", "tags": "METHOD", "url": "exp/getDataFormat.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getDataFormatString()", "text": "Get the contents of the format string, by looking up the DataFormat against the bound workbook", "tags": "METHOD", "url": "exp/getDataFormatString.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getDataFormatString(org.apache.poi.ss.usermodel.Workbook)", "text": "Get the contents of the format string, by looking up the DataFormat against the supplied workbook", "tags": "METHOD", "url": "exp/getDataFormatString.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getDataFormatString(org.apache.poi.hssf.model.InternalWorkbook)", "text": "Get the contents of the format string, by looking up the DataFormat against the supplied low level workbook", "tags": "METHOD", "url": "exp/getDataFormatString.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setFont(Font)", "text": "set the font for this style", "tags": "METHOD", "url": "exp/setFont.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getFontIndex()", "text": "gets the index of the font for this style", "tags": "METHOD", "url": "exp/getFontIndex.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getFont(org.apache.poi.ss.usermodel.Workbook)", "text": "gets the font for this style", "tags": "METHOD", "url": "exp/getFont.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setHidden(boolean)", "text": "set the cell's using this style to be hidden", "tags": "METHOD", "url": "exp/setHidden.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getHidden()", "text": "get whether the cell's using this style are to be hidden", "tags": "METHOD", "url": "exp/getHidden.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setLocked(boolean)", "text": "set the cell's using this style to be locked", "tags": "METHOD", "url": "exp/setLocked.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getLocked()", "text": "get whether the cell's using this style are to be locked", "tags": "METHOD", "url": "exp/getLocked.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setQuotePrefixed(boolean)", "text": "Turn on or off \"Quote Prefix\" or \"123 Prefix\" for the style,", "tags": "METHOD", "url": "exp/setQuotePrefixed.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getQuotePrefixed()", "text": "Is \"Quote Prefix\" or \"123 Prefix\" enabled for the cell?", "tags": "METHOD", "url": "exp/getQuotePrefixed.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setAlignment(HorizontalAlignment)", "text": "set the type of horizontal alignment for the cell", "tags": "METHOD", "url": "exp/setAlignment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getAlignmentEnum()", "text": "get the type of horizontal alignment for the cell", "tags": "METHOD", "url": "exp/getAlignmentEnum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setWrapText(boolean)", "text": "set whether the text should be wrapped", "tags": "METHOD", "url": "exp/setWrapText.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getWrapText()", "text": "get whether the text should be wrapped", "tags": "METHOD", "url": "exp/getWrapText.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setVerticalAlignment(VerticalAlignment)", "text": "set the type of vertical alignment for the cell", "tags": "METHOD", "url": "exp/setVerticalAlignment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getVerticalAlignmentEnum()", "text": "get the type of vertical alignment for the cell", "tags": "METHOD", "url": "exp/getVerticalAlignmentEnum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setRotation(short)", "text": "set the degree of rotation for the text in the cell", "tags": "METHOD", "url": "exp/setRotation.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getRotation()", "text": "get the degree of rotation for the text in the cell", "tags": "METHOD", "url": "exp/getRotation.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setIndention(short)", "text": "set the number of spaces to indent the text in the cell", "tags": "METHOD", "url": "exp/setIndention.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getIndention()", "text": "get the number of spaces to indent the text in the cell", "tags": "METHOD", "url": "exp/getIndention.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setBorderLeft(BorderStyle)", "text": "set the type of border to use for the left border of the cell", "tags": "METHOD", "url": "exp/setBorderLeft.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getBorderLeftEnum()", "text": "get the type of border to use for the left border of the cell", "tags": "METHOD", "url": "exp/getBorderLeftEnum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setBorderRight(BorderStyle)", "text": "set the type of border to use for the right border of the cell", "tags": "METHOD", "url": "exp/setBorderRight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getBorderRightEnum()", "text": "get the type of border to use for the right border of the cell", "tags": "METHOD", "url": "exp/getBorderRightEnum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setBorderTop(BorderStyle)", "text": "set the type of border to use for the top border of the cell", "tags": "METHOD", "url": "exp/setBorderTop.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getBorderTopEnum()", "text": "get the type of border to use for the top border of the cell", "tags": "METHOD", "url": "exp/getBorderTopEnum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setBorderBottom(BorderStyle)", "text": "set the type of border to use for the bottom border of the cell", "tags": "METHOD", "url": "exp/setBorderBottom.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getBorderBottomEnum()", "text": "get the type of border to use for the bottom border of the cell", "tags": "METHOD", "url": "exp/getBorderBottomEnum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setLeftBorderColor(short)", "text": "set the color to use for the left border", "tags": "METHOD", "url": "exp/setLeftBorderColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getLeftBorderColor()", "text": "get the color to use for the left border", "tags": "METHOD", "url": "exp/getLeftBorderColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setRightBorderColor(short)", "text": "set the color to use for the right border", "tags": "METHOD", "url": "exp/setRightBorderColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getRightBorderColor()", "text": "get the color to use for the left border", "tags": "METHOD", "url": "exp/getRightBorderColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setTopBorderColor(short)", "text": "set the color to use for the top border", "tags": "METHOD", "url": "exp/setTopBorderColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getTopBorderColor()", "text": "get the color to use for the top border", "tags": "METHOD", "url": "exp/getTopBorderColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setBottomBorderColor(short)", "text": "set the color to use for the bottom border", "tags": "METHOD", "url": "exp/setBottomBorderColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getBottomBorderColor()", "text": "get the color to use for the left border", "tags": "METHOD", "url": "exp/getBottomBorderColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setFillPattern(FillPatternType)", "text": "setting to one fills the cell with the foreground color... No idea about other values", "tags": "METHOD", "url": "exp/setFillPattern.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getFillPatternEnum()", "text": "get the fill pattern", "tags": "METHOD", "url": "exp/getFillPatternEnum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.checkDefaultBackgroundFills()", "text": "Checks if the background and foreground fills are set correctly when one or the other is set to the default color.", "tags": "METHOD", "url": "exp/checkDefaultBackgroundFills.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setFillBackgroundColor(short)", "text": "set the background fill color", "tags": "METHOD", "url": "exp/setFillBackgroundColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getFillBackgroundColor()", "text": "Get the background fill color", "tags": "METHOD", "url": "exp/getFillBackgroundColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setFillForegroundColor(short)", "text": "set the foreground fill color", "tags": "METHOD", "url": "exp/setFillForegroundColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getFillForegroundColor()", "text": "Get the foreground fill color", "tags": "METHOD", "url": "exp/getFillForegroundColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getUserStyleName()", "text": "Gets the name of the user defined style", "tags": "METHOD", "url": "exp/getUserStyleName.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setUserStyleName(String)", "text": "Sets the name of the user defined style. Will complain if you try this on a built in style.", "tags": "METHOD", "url": "exp/setUserStyleName.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setShrinkToFit(boolean)", "text": "Controls if the Cell should be auto-sized to shrink to fit if the text is too long", "tags": "METHOD", "url": "exp/setShrinkToFit.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getShrinkToFit()", "text": "Should the Cell be auto-sized by Excel to shrink it to fit if this text is too long?", "tags": "METHOD", "url": "exp/getShrinkToFit.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.getReadingOrder()", "text": "Get the reading order, for RTLLTR ordering of the text.", "tags": "METHOD", "url": "exp/getReadingOrder.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.setReadingOrder(short)", "text": "Sets the reading order, for RTLLTR ordering of the text.", "tags": "METHOD", "url": "exp/setReadingOrder.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.verifyBelongsToWorkbook(HSSFWorkbook)", "text": "Verifies that this style belongs to the supplied Workbook", "tags": "METHOD", "url": "exp/verifyBelongsToWorkbook.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCellStyle.cloneStyleFrom(CellStyle)", "text": "Clones all the style information from another", "tags": "METHOD", "url": "exp/cloneStyleFrom.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFClientAnchor.getAnchorHeightInPoints(HSSFSheet)", "text": "Calculates the height of a client anchor in points.", "tags": "METHOD", "url": "exp/getAnchorHeightInPoints.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFClientAnchor.setAnchor(short, int, int, int, short, int, int, int)", "text": "Sets the top-left and bottom-right coordinates of", "tags": "METHOD", "url": "exp/setAnchor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFClientAnchor.getAnchorType()", "text": "Gets the anchor type Changed from returning an int to an enum in POI 3.14 beta 1.", "tags": "METHOD", "url": "exp/getAnchorType.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFClientAnchor.setAnchorType(AnchorType)", "text": "Sets the anchor type", "tags": "METHOD", "url": "exp/setAnchorType.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFClientAnchor.unsignedValue(short)", "text": "Given a 16-bit unsigned integer stored in a short, return the unsigned value.", "tags": "METHOD", "url": "exp/unsignedValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFComment.setVisible(boolean)", "text": "Sets whether this comment is visible.", "tags": "METHOD", "url": "exp/setVisible.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFComment.isVisible()", "text": "Returns whether this comment is visible.", "tags": "METHOD", "url": "exp/isVisible.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFComment.getRow()", "text": "Return the row of the cell that contains the comment", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFComment.setRow(int)", "text": "Set the row of the cell that contains the comment", "tags": "METHOD", "url": "exp/setRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFComment.getColumn()", "text": "Return the column of the cell that contains the comment", "tags": "METHOD", "url": "exp/getColumn.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFComment.setColumn(int)", "text": "Set the column of the cell that contains the comment", "tags": "METHOD", "url": "exp/setColumn.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFComment.getAuthor()", "text": "Name of the original comment author", "tags": "METHOD", "url": "exp/getAuthor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFComment.setAuthor(String)", "text": "Name of the original comment author", "tags": "METHOD", "url": "exp/setAuthor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFComment.getNoteRecord()", "text": "Returns the underlying Note record", "tags": "METHOD", "url": "exp/getNoteRecord.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFComment.hasPosition()", "text": "Do we know which cell this comment belongs to?", "tags": "METHOD", "url": "exp/hasPosition.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFConditionalFormatting.setRule(int, HSSFConditionalFormattingRule)", "text": "Replaces an existing Conditional Formatting rule at position idx", "tags": "METHOD", "url": "exp/setRule.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFConditionalFormatting.addRule(HSSFConditionalFormattingRule)", "text": "add a Conditional Formatting rule. Excel allows to create up to 3 Conditional Formatting rules.", "tags": "METHOD", "url": "exp/addRule.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFConditionalFormattingRule.createFontFormatting()", "text": "create a new font formatting structure if it does not exist, otherwise just return existing object.", "tags": "METHOD", "url": "exp/createFontFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFConditionalFormattingRule.createBorderFormatting()", "text": "create a new border formatting structure if it does not exist, otherwise just return existing object.", "tags": "METHOD", "url": "exp/createBorderFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFConditionalFormattingRule.createPatternFormatting()", "text": "create a new pattern formatting structure if it does not exist, otherwise just return existing object.", "tags": "METHOD", "url": "exp/createPatternFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFConditionalFormattingRule.createDataBarFormatting()", "text": "create a new databar  data-bar formatting object if it does not exist, otherwise just return the existing object.", "tags": "METHOD", "url": "exp/createDataBarFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFConditionalFormattingRule.createMultiStateFormatting()", "text": "create a new icon  multi-state formatting object if it does not exist, otherwise just return the existing object.", "tags": "METHOD", "url": "exp/createMultiStateFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFConditionalFormattingRule.createColorScaleFormatting()", "text": "create a new color scale  gradient formatting object if it does not exist, otherwise just return the existing object.", "tags": "METHOD", "url": "exp/createColorScaleFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCreationHelper.createFormulaEvaluator()", "text": "Creates a HSSFFormulaEvaluator, the object that evaluates formula cells.", "tags": "METHOD", "url": "exp/createFormulaEvaluator.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFCreationHelper.createClientAnchor()", "text": "Creates a HSSFClientAnchor. Use this object to position drawing object in a sheet", "tags": "METHOD", "url": "exp/createClientAnchor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFDataFormat.getBuiltinFormat(String)", "text": "get the format index that matches the given format string<p> Automatically converts \"text\" to excel's format string to represent text.", "tags": "METHOD", "url": "exp/getBuiltinFormat.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFDataFormat.getFormat(String)", "text": "Get the format index that matches the given format", "tags": "METHOD", "url": "exp/getFormat.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFDataFormat.getFormat(short)", "text": "get the format string that matches the given format index", "tags": "METHOD", "url": "exp/getFormat.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFDataFormat.getBuiltinFormat(short)", "text": "get the format string that matches the given format index", "tags": "METHOD", "url": "exp/getBuiltinFormat.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFDataFormat.getNumberOfBuiltinBuiltinFormats()", "text": "get the number of built-in and reserved builtinFormats", "tags": "METHOD", "url": "exp/getNumberOfBuiltinBuiltinFormats.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFDataFormat.ensureFormatsSize(int)", "text": "Ensures that the formats list can hold entries up to and including the entry with this index", "tags": "METHOD", "url": "exp/ensureFormatsSize.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFEvaluationWorkbook.getNameXPtg(String, SheetIdentifier)", "text": "Return an external name (named range, function, user-defined function) Ptg", "tags": "METHOD", "url": "exp/getNameXPtg.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFEvaluationWorkbook.getName(String, int)", "text": "Lookup a named range by its name. The sheet index is required to resolve sheet-level names.  means workbook-global names", "tags": "METHOD", "url": "exp/getName.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFont.getColor()", "text": "get the color for the font", "tags": "METHOD", "url": "exp/getColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFont.getHSSFColor(HSSFWorkbook)", "text": "get the color value for the font", "tags": "METHOD", "url": "exp/getHSSFColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFont.setBold(boolean)", "text": "sets the font to be bold or not", "tags": "METHOD", "url": "exp/setBold.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFont.getBold()", "text": "get if the font is bold or not", "tags": "METHOD", "url": "exp/getBold.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFont.getCharSet()", "text": "get character-set to use.", "tags": "METHOD", "url": "exp/getCharSet.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFont.setCharSet(int)", "text": "set character-set to use.", "tags": "METHOD", "url": "exp/setCharSet.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFont.setCharSet(byte)", "text": "set character-set to use.", "tags": "METHOD", "url": "exp/setCharSet.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFontFormatting.getEscapementType()", "text": "get the type of super or subscript for the font", "tags": "METHOD", "url": "exp/getEscapementType.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFontFormatting.getFontHeight()", "text": "gets the height of the font in 120th point units", "tags": "METHOD", "url": "exp/getFontHeight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFontFormatting.getFontWeight()", "text": "get the font weight for this font (100-1000dec or 0x64-0x3e8).  Default is 0x190 for normal and 0x2bc for bold", "tags": "METHOD", "url": "exp/getFontWeight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFontFormatting.getUnderlineType()", "text": "get the type of underlining for the font", "tags": "METHOD", "url": "exp/getUnderlineType.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFontFormatting.isBold()", "text": "get whether the font weight is set to bold or not", "tags": "METHOD", "url": "exp/isBold.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFontFormatting.resetFontStyle()", "text": "set font style options to default values (non-italic, non-bold)", "tags": "METHOD", "url": "exp/resetFontStyle.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFontFormatting.setEscapementType(short)", "text": "set the escapement type for the font", "tags": "METHOD", "url": "exp/setEscapementType.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFontFormatting.setUnderlineType(short)", "text": "set the type of underlining type for the font", "tags": "METHOD", "url": "exp/setUnderlineType.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.create(HSSFWorkbook, IStabilityClassifier, UDFFinder)", "text": "for the (conservative) assumption that any cell may have its definition changed after evaluation begins.", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.setupEnvironment(String[], HSSFFormulaEvaluator[])", "text": "Coordinates several formula evaluators together so that formulas that involve external", "tags": "METHOD", "url": "exp/setupEnvironment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.notifyUpdateCell(HSSFCell)", "text": "Should be called to tell the cell value cache that the specified (value or formula) cell", "tags": "METHOD", "url": "exp/notifyUpdateCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.notifyDeleteCell(HSSFCell)", "text": "Should be called to tell the cell value cache that the specified cell has just been", "tags": "METHOD", "url": "exp/notifyDeleteCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.notifySetFormula(Cell)", "text": "Should be called to tell the cell value cache that the specified (value or formula) cell", "tags": "METHOD", "url": "exp/notifySetFormula.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateAllFormulaCells(HSSFWorkbook)", "text": "Loops over all cells in all sheets of the supplied", "tags": "METHOD", "url": "exp/evaluateAllFormulaCells.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateAllFormulaCells(Workbook)", "text": "Loops over all cells in all sheets of the supplied", "tags": "METHOD", "url": "exp/evaluateAllFormulaCells.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateAll()", "text": "Loops over all cells in all sheets of the supplied", "tags": "METHOD", "url": "exp/evaluateAll.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateFormulaCellValue(Cell)", "text": "Returns a CellValue wrapper around the supplied ValueEval instance.", "tags": "METHOD", "url": "exp/evaluateFormulaCellValue.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.setIgnoreMissingWorkbooks(boolean)", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/setIgnoreMissingWorkbooks.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.setDebugEvaluationOutputForNextEval(boolean)", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/setDebugEvaluationOutputForNextEval.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.getFirstRow()", "text": "Return the row of the first cell that contains the hyperlink", "tags": "METHOD", "url": "exp/getFirstRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.setFirstRow(int)", "text": "Set the row of the first cell that contains the hyperlink", "tags": "METHOD", "url": "exp/setFirstRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.getLastRow()", "text": "Return the row of the last cell that contains the hyperlink", "tags": "METHOD", "url": "exp/getLastRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.setLastRow(int)", "text": "Set the row of the last cell that contains the hyperlink", "tags": "METHOD", "url": "exp/setLastRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.getFirstColumn()", "text": "Return the column of the first cell that contains the hyperlink", "tags": "METHOD", "url": "exp/getFirstColumn.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.setFirstColumn(int)", "text": "Set the column of the first cell that contains the hyperlink", "tags": "METHOD", "url": "exp/setFirstColumn.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.getLastColumn()", "text": "Return the column of the last cell that contains the hyperlink", "tags": "METHOD", "url": "exp/getLastColumn.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.setLastColumn(int)", "text": "Set the column of the last cell that contains the hyperlink", "tags": "METHOD", "url": "exp/setLastColumn.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.getAddress()", "text": "Hyperlink address. Depending on the hyperlink type it can be URL, e-mail, path to a file, etc.", "tags": "METHOD", "url": "exp/getAddress.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.setTextMark(String)", "text": "Convenience method equivalent to {@link #setAddress(String)}", "tags": "METHOD", "url": "exp/setTextMark.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.setShortFilename(String)", "text": "Convenience method equivalent to {@link #setAddress(String)}", "tags": "METHOD", "url": "exp/setShortFilename.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.setAddress(String)", "text": "Hyperlink address. Depending on the hyperlink type it can be URL, e-mail, path to a file, etc.", "tags": "METHOD", "url": "exp/setAddress.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.getLabel()", "text": "Return text label for this hyperlink", "tags": "METHOD", "url": "exp/getLabel.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.setLabel(String)", "text": "Sets text label for this hyperlink", "tags": "METHOD", "url": "exp/setLabel.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFHyperlink.getTypeEnum()", "text": "Return the type of this hyperlink", "tags": "METHOD", "url": "exp/getTypeEnum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFName.getSheetName()", "text": "Get the sheets name which this named range is referenced to", "tags": "METHOD", "url": "exp/getSheetName.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFName.setNameName(String)", "text": "Sets the name of the named range", "tags": "METHOD", "url": "exp/setNameName.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFName.validateName(String)", "text": "https:support", "tags": "METHOD", "url": "exp/validateName.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFName.setNameDefinition(Ptg[])", "text": "Sets the NameParsedFormula structure that specifies the formula for the defined name.", "tags": "METHOD", "url": "exp/setNameDefinition.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFName.isFunctionName()", "text": "Checks if this name is a function name", "tags": "METHOD", "url": "exp/isFunctionName.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFName.setSheetIndex(int)", "text": "Specifies if the defined name is a local name, and if so, which sheet it is on. to the collection of sheets as they appear in the workbook.", "tags": "METHOD", "url": "exp/setSheetIndex.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFName.getSheetIndex()", "text": "Returns the sheet index this name applies to.", "tags": "METHOD", "url": "exp/getSheetIndex.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFName.getComment()", "text": "Returns the comment the user provided when the name was created.", "tags": "METHOD", "url": "exp/getComment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFName.setComment(String)", "text": "Sets the comment the user provided when the name was created.", "tags": "METHOD", "url": "exp/setComment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFName.setFunction(boolean)", "text": "Indicates that the defined name refers to a user-defined function. This attribute is used when there is an add-in or other code project associated with the file.", "tags": "METHOD", "url": "exp/setFunction.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFObjectData.findObjectRecord()", "text": "Finds the EmbeddedObjectRefSubRecord, or throws an Exception if there wasn't one", "tags": "METHOD", "url": "exp/findObjectRecord.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFOptimiser.optimiseFonts(HSSFWorkbook)", "text": "Goes through the Workbook, optimising the fonts by", "tags": "METHOD", "url": "exp/optimiseFonts.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFOptimiser.optimiseCellStyles(HSSFWorkbook)", "text": "Goes through the Wokrbook, optimising the cell styles", "tags": "METHOD", "url": "exp/optimiseCellStyles.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPalette.getColor(short)", "text": "Retrieves the color at a given index", "tags": "METHOD", "url": "exp/getColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPalette.getColor(int)", "text": "Retrieves the color at a given index", "tags": "METHOD", "url": "exp/getColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPalette.findColor(byte, byte, byte)", "text": "Finds the first occurrence of a given color", "tags": "METHOD", "url": "exp/findColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPalette.findSimilarColor(byte, byte, byte)", "text": "Finds the closest matching color in the custom palette", "tags": "METHOD", "url": "exp/findSimilarColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPalette.findSimilarColor(int, int, int)", "text": "Finds the closest matching color in the custom palette", "tags": "METHOD", "url": "exp/findSimilarColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPalette.unsignedInt(byte)", "text": "Turn a byte of between -127 and 127 into something between 0 and 255, so distance calculations work as expected.", "tags": "METHOD", "url": "exp/unsignedInt.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPalette.setColorAtIndex(short, byte, byte, byte)", "text": "Sets the color at the given offset", "tags": "METHOD", "url": "exp/setColorAtIndex.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPalette.addColor(byte, byte, byte)", "text": "Adds a new color into an empty color slot.", "tags": "METHOD", "url": "exp/addColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.createPatriarch(HSSFPatriarch, HSSFSheet)", "text": "used to clone patriarch create patriarch from existing one", "tags": "METHOD", "url": "exp/createPatriarch.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.preSerialize()", "text": "check if any shapes contain wrong data At now(13.08.2010) check if patriarch contains 2 or more comments with same coordinates", "tags": "METHOD", "url": "exp/preSerialize.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.createGroup(HSSFClientAnchor)", "text": "Creates a new group record stored under this patriarch. to the sheet.", "tags": "METHOD", "url": "exp/createGroup.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.createSimpleShape(HSSFClientAnchor)", "text": "Creates a simple shape", "tags": "METHOD", "url": "exp/createSimpleShape.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.createPicture(HSSFClientAnchor, int)", "text": "Creates a picture. to the sheet.", "tags": "METHOD", "url": "exp/createPicture.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.createPicture(ClientAnchor, int)", "text": "attached to the sheet. of pictures.", "tags": "METHOD", "url": "exp/createPicture.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.createPolygon(HSSFClientAnchor)", "text": "Creates a polygon to the sheet.", "tags": "METHOD", "url": "exp/createPolygon.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.createTextbox(HSSFClientAnchor)", "text": "Constructs a textbox under the patriarch. to the sheet.", "tags": "METHOD", "url": "exp/createTextbox.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.createComment(HSSFAnchor)", "text": "Constructs a cell comment. to the sheet.", "tags": "METHOD", "url": "exp/createComment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.createComboBox(HSSFAnchor)", "text": "YK: used to create autofilters", "tags": "METHOD", "url": "exp/createComboBox.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.getChildren()", "text": "Returns a unmodifiable list of all shapes contained by the patriarch.", "tags": "METHOD", "url": "exp/getChildren.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.addShape(HSSFShape)", "text": "add a shape to this drawing", "tags": "METHOD", "url": "exp/addShape.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.countOfAllChildren()", "text": "Total count of all children and their children's children.", "tags": "METHOD", "url": "exp/countOfAllChildren.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.setCoordinates(int, int, int, int)", "text": "Sets the coordinate space of this group.  All children are constrained to these coordinates.", "tags": "METHOD", "url": "exp/setCoordinates.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.clear()", "text": "remove all shapes inside patriarch", "tags": "METHOD", "url": "exp/clear.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.containsChart()", "text": "Does this HSSFPatriarch contain a chart?", "tags": "METHOD", "url": "exp/containsChart.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.getBoundAggregate()", "text": "Returns the aggregate escher record we're bound to", "tags": "METHOD", "url": "exp/getBoundAggregate.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.createAnchor(int, int, int, int, int, int, int, int)", "text": "Creates a new client anchor and sets the top-left and bottom-right coordinates of the anchor.", "tags": "METHOD", "url": "exp/createAnchor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPatriarch.buildShapeTree()", "text": "create shape tree from existing escher records tree", "tags": "METHOD", "url": "exp/buildShapeTree.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPicture.resize()", "text": "Reset the image to the dimension of the embedded image", "tags": "METHOD", "url": "exp/resize.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPicture.resize(double)", "text": "Resize the image proportionally.", "tags": "METHOD", "url": "exp/resize.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPicture.resize(double, double)", "text": "Resize the image", "tags": "METHOD", "url": "exp/resize.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPicture.getPreferredSize()", "text": "Calculate the preferred size for this picture.", "tags": "METHOD", "url": "exp/getPreferredSize.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPicture.getPreferredSize(double)", "text": "Calculate the preferred size for this picture.", "tags": "METHOD", "url": "exp/getPreferredSize.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPicture.getPreferredSize(double, double)", "text": "Calculate the preferred size for this picture.", "tags": "METHOD", "url": "exp/getPreferredSize.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPicture.getImageDimension()", "text": "Return the dimension of the embedded image in pixel", "tags": "METHOD", "url": "exp/getImageDimension.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPicture.getPictureData()", "text": "Return picture data for this shape", "tags": "METHOD", "url": "exp/getPictureData.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPicture.getFileName()", "text": "The filename of the embedded image", "tags": "METHOD", "url": "exp/getFileName.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPictureData.getMimeType()", "text": "Returns the mime type for the image", "tags": "METHOD", "url": "exp/getMimeType.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPolygon.createSpContainer()", "text": "Generates the shape records for this shape.", "tags": "METHOD", "url": "exp/createSpContainer.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPolygon.createObjRecord()", "text": "Creates the low level OBJ record for this shape.", "tags": "METHOD", "url": "exp/createObjRecord.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPolygon.setPolygonDrawArea(int, int)", "text": "Defines the width and height of the points in the polygon", "tags": "METHOD", "url": "exp/setPolygonDrawArea.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setPaperSize(short)", "text": "Set the paper size.", "tags": "METHOD", "url": "exp/setPaperSize.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setScale(short)", "text": "Set the scale.", "tags": "METHOD", "url": "exp/setScale.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setPageStart(short)", "text": "Set the page numbering start.", "tags": "METHOD", "url": "exp/setPageStart.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setFitWidth(short)", "text": "Set the number of pages wide to fit the sheet in", "tags": "METHOD", "url": "exp/setFitWidth.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setFitHeight(short)", "text": "Set the number of pages high to fit the sheet in", "tags": "METHOD", "url": "exp/setFitHeight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setOptions(short)", "text": "Sets the options flags.  Not advisable to do it directly.", "tags": "METHOD", "url": "exp/setOptions.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setLeftToRight(boolean)", "text": "Set whether to go left to right or top down in ordering", "tags": "METHOD", "url": "exp/setLeftToRight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setLandscape(boolean)", "text": "Set whether to print in landscape", "tags": "METHOD", "url": "exp/setLandscape.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setValidSettings(boolean)", "text": "Valid settings.  I'm not for sure.", "tags": "METHOD", "url": "exp/setValidSettings.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setNoColor(boolean)", "text": "Set whether it is black and white", "tags": "METHOD", "url": "exp/setNoColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setDraft(boolean)", "text": "Set whether it is in draft mode", "tags": "METHOD", "url": "exp/setDraft.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setNotes(boolean)", "text": "Print the include notes", "tags": "METHOD", "url": "exp/setNotes.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setNoOrientation(boolean)", "text": "Set no orientation. ?", "tags": "METHOD", "url": "exp/setNoOrientation.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setUsePage(boolean)", "text": "Set whether to use page start", "tags": "METHOD", "url": "exp/setUsePage.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setHResolution(short)", "text": "Sets the horizontal resolution.", "tags": "METHOD", "url": "exp/setHResolution.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setVResolution(short)", "text": "Sets the vertical resolution.", "tags": "METHOD", "url": "exp/setVResolution.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setHeaderMargin(double)", "text": "Sets the header margin.", "tags": "METHOD", "url": "exp/setHeaderMargin.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setFooterMargin(double)", "text": "Sets the footer margin.", "tags": "METHOD", "url": "exp/setFooterMargin.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.setCopies(short)", "text": "Sets the number of copies.", "tags": "METHOD", "url": "exp/setCopies.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getPaperSize()", "text": "Returns the paper size.", "tags": "METHOD", "url": "exp/getPaperSize.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getScale()", "text": "Returns the scale.", "tags": "METHOD", "url": "exp/getScale.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getPageStart()", "text": "Returns the page start.", "tags": "METHOD", "url": "exp/getPageStart.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getFitWidth()", "text": "Returns the number of pages wide to fit sheet in.", "tags": "METHOD", "url": "exp/getFitWidth.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getFitHeight()", "text": "Returns the number of pages high to fit the sheet in.", "tags": "METHOD", "url": "exp/getFitHeight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getOptions()", "text": "Returns the bit flags for the options.", "tags": "METHOD", "url": "exp/getOptions.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getLeftToRight()", "text": "Returns the left to right print order.", "tags": "METHOD", "url": "exp/getLeftToRight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getLandscape()", "text": "Returns the landscape mode.", "tags": "METHOD", "url": "exp/getLandscape.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getValidSettings()", "text": "Returns the valid settings.", "tags": "METHOD", "url": "exp/getValidSettings.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getNoColor()", "text": "Returns the black and white setting.", "tags": "METHOD", "url": "exp/getNoColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getDraft()", "text": "Returns the draft mode.", "tags": "METHOD", "url": "exp/getDraft.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getNotes()", "text": "Returns the print notes.", "tags": "METHOD", "url": "exp/getNotes.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getNoOrientation()", "text": "Returns the no orientation.", "tags": "METHOD", "url": "exp/getNoOrientation.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getUsePage()", "text": "Returns the use page numbers.", "tags": "METHOD", "url": "exp/getUsePage.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getHResolution()", "text": "Returns the horizontal resolution.", "tags": "METHOD", "url": "exp/getHResolution.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getVResolution()", "text": "Returns the vertical resolution.", "tags": "METHOD", "url": "exp/getVResolution.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getHeaderMargin()", "text": "Returns the header margin.", "tags": "METHOD", "url": "exp/getHeaderMargin.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getFooterMargin()", "text": "Returns the footer margin.", "tags": "METHOD", "url": "exp/getFooterMargin.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFPrintSetup.getCopies()", "text": "Returns the number of copies.", "tags": "METHOD", "url": "exp/getCopies.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.setWorkbookReferences(InternalWorkbook, LabelSSTRecord)", "text": "This must be called to setup the internal work book references whenever a RichTextString is added to a cell", "tags": "METHOD", "url": "exp/setWorkbookReferences.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.cloneStringIfRequired()", "text": "Called whenever the unicode string is modified", "tags": "METHOD", "url": "exp/cloneStringIfRequired.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.applyFont(int, int, short)", "text": "Applies a font to the specified characters of a string.", "tags": "METHOD", "url": "exp/applyFont.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.applyFont(int, int, Font)", "text": "Applies a font to the specified characters of a string.", "tags": "METHOD", "url": "exp/applyFont.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.applyFont(Font)", "text": "Sets the font of the entire string.", "tags": "METHOD", "url": "exp/applyFont.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.clearFormatting()", "text": "Removes any formatting that may have been applied to the string.", "tags": "METHOD", "url": "exp/clearFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.getString()", "text": "Returns the plain string representation.", "tags": "METHOD", "url": "exp/getString.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.getUnicodeString()", "text": "Used internally by the HSSFCell to get the internal", "tags": "METHOD", "url": "exp/getUnicodeString.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.getRawUnicodeString()", "text": "Returns the raw, probably shared Unicode String", "tags": "METHOD", "url": "exp/getRawUnicodeString.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.setUnicodeString(UnicodeString)", "text": "Used internally by the HSSFCell to set the internal string value", "tags": "METHOD", "url": "exp/setUnicodeString.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.getFontAtIndex(int)", "text": "Returns the font in use at a particular index", "tags": "METHOD", "url": "exp/getFontAtIndex.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.numFormattingRuns()", "text": "least one of font NO_FONT.", "tags": "METHOD", "url": "exp/numFormattingRuns.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.getIndexOfFormattingRun(int)", "text": "The index within the string to which the specified formatting run applies.", "tags": "METHOD", "url": "exp/getIndexOfFormattingRun.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.getFontOfFormattingRun(int)", "text": "Gets the font used in a particular formatting run.", "tags": "METHOD", "url": "exp/getFontOfFormattingRun.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.compareTo(HSSFRichTextString)", "text": "Compares one rich text string to another.", "tags": "METHOD", "url": "exp/compareTo.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRichTextString.applyFont(short)", "text": "Applies the specified font to the entire string.", "tags": "METHOD", "url": "exp/applyFont.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.createCell(int)", "text": "Use this to create new cells within the row and return it", "tags": "METHOD", "url": "exp/createCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.createCell(int, CellType)", "text": "Use this to create new cells within the row and return it", "tags": "METHOD", "url": "exp/createCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.removeCell(Cell)", "text": "remove the HSSFCell from this row.", "tags": "METHOD", "url": "exp/removeCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.removeAllCells()", "text": "Removes all the cells from the row, and their records too.", "tags": "METHOD", "url": "exp/removeAllCells.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.createCellFromRecord(CellValueRecordInterface)", "text": "create a high level HSSFCell object from an existing low level record.  Should only be called from HSSFSheet or HSSFRow itself.", "tags": "METHOD", "url": "exp/createCellFromRecord.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.setRowNum(int)", "text": "set the row number of this row.", "tags": "METHOD", "url": "exp/setRowNum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.getRowNum()", "text": "get row number this row represents", "tags": "METHOD", "url": "exp/getRowNum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.getSheet()", "text": "Returns the HSSFSheet this row belongs to", "tags": "METHOD", "url": "exp/getSheet.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.getOutlineLevel()", "text": "Returns the rows outline level", "tags": "METHOD", "url": "exp/getOutlineLevel.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.moveCell(HSSFCell, short)", "text": "Moves the supplied cell to a new column, which must not already have a cell there!", "tags": "METHOD", "url": "exp/moveCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.addCell(HSSFCell)", "text": "used internally to add a cell.", "tags": "METHOD", "url": "exp/addCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.retrieveCell(int)", "text": "Get the hssfcell representing a given column (logical cell)", "tags": "METHOD", "url": "exp/retrieveCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.getCell(int)", "text": "Get the hssfcell representing a given column (logical cell)", "tags": "METHOD", "url": "exp/getCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.getCell(int, MissingCellPolicy)", "text": "Get the hssfcell representing a given column (logical cell)", "tags": "METHOD", "url": "exp/getCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.getFirstCellNum()", "text": "get the number of the first cell contained in this row.", "tags": "METHOD", "url": "exp/getFirstCellNum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.getLastCellNum()", "text": "Gets the index of the last cell contained in this row ", "tags": "METHOD", "url": "exp/getLastCellNum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.setZeroHeight(boolean)", "text": "set whether or not to display this row with 0 height", "tags": "METHOD", "url": "exp/setZeroHeight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.getZeroHeight()", "text": "get whether or not to display this row with 0 height", "tags": "METHOD", "url": "exp/getZeroHeight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.calculateNewLastCellPlusOne(int)", "text": "used internally to refresh the \"last cell plus one\" when the last cell is removed.", "tags": "METHOD", "url": "exp/calculateNewLastCellPlusOne.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.calculateNewFirstCell(int)", "text": "used internally to refresh the \"first cell\" when the first cell is removed.", "tags": "METHOD", "url": "exp/calculateNewFirstCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.isFormatted()", "text": "Is this row formatted? Most aren't, but some rows", "tags": "METHOD", "url": "exp/isFormatted.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.getRowStyle()", "text": "Returns the whole-row cell styles", "tags": "METHOD", "url": "exp/getRowStyle.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.setRowStyle(HSSFCellStyle)", "text": "Applies a whole-row cell styling to the row.", "tags": "METHOD", "url": "exp/setRowStyle.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.setRowStyle(CellStyle)", "text": "Applies a whole-row cell styling to the row.", "tags": "METHOD", "url": "exp/setRowStyle.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.cellIterator()", "text": "Note that the 4th element might well not be cell 4, as the iterator", "tags": "METHOD", "url": "exp/cellIterator.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFRow.iterator()", "text": "Alias for {@link #cellIterator} to allow foreach loops", "tags": "METHOD", "url": "exp/iterator.html"},
                {"title": "org.apache.poi.hssf.usermodel.CellIterator.compareTo(HSSFRow)", "text": "Compares two  objects", "tags": "METHOD", "url": "exp/compareTo.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShape.afterRemove(HSSFPatriarch)", "text": "remove escher container from the patriarch", "tags": "METHOD", "url": "exp/afterRemove.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShape.getOptRecord()", "text": "Return the low-level EscherOptRecord to readmodify not yet wrapped escher properties", "tags": "METHOD", "url": "exp/getOptRecord.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShape.setAnchor(HSSFAnchor)", "text": "Sets a particular anchor", "tags": "METHOD", "url": "exp/setAnchor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShape.getLineStyleColor()", "text": "The color applied to the lines of this shape.", "tags": "METHOD", "url": "exp/getLineStyleColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShape.setLineStyleColor(int)", "text": "The color applied to the lines of this shape.", "tags": "METHOD", "url": "exp/setLineStyleColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShape.getFillColor()", "text": "The color used to fill this shape.", "tags": "METHOD", "url": "exp/getFillColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShape.setFillColor(int)", "text": "The color used to fill this shape.", "tags": "METHOD", "url": "exp/setFillColor.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShape.setLineWidth(int)", "text": "Sets the width of the line.  12700 = 1 pt.", "tags": "METHOD", "url": "exp/setLineWidth.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShape.setLineStyle(int)", "text": "Sets the line style.", "tags": "METHOD", "url": "exp/setLineStyle.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShape.setRotationDegree(short)", "text": "specifies the rotation, in degrees, that is applied to a shape", "tags": "METHOD", "url": "exp/setRotationDegree.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShape.countOfAllChildren()", "text": "Count of all children and their children's children.", "tags": "METHOD", "url": "exp/countOfAllChildren.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeContainer.addShape(HSSFShape)", "text": "add shape to the list of child records", "tags": "METHOD", "url": "exp/addShape.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeContainer.setCoordinates(int, int, int, int)", "text": "set coordinates of this group relative to the parent", "tags": "METHOD", "url": "exp/setCoordinates.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeContainer.removeShape(HSSFShape)", "text": "remove first level shapes", "tags": "METHOD", "url": "exp/removeShape.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeFactory.createShapeTree(EscherContainerRecord, EscherAggregate, HSSFShapeContainer, DirectoryNode)", "text": "build shape tree from escher container", "tags": "METHOD", "url": "exp/createShapeTree.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup.createGroup(HSSFChildAnchor)", "text": "Create another group under this group.", "tags": "METHOD", "url": "exp/createGroup.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup.createShape(HSSFChildAnchor)", "text": "Create a new simple shape under this group.", "tags": "METHOD", "url": "exp/createShape.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup.createTextbox(HSSFChildAnchor)", "text": "Create a new textbox under this group.", "tags": "METHOD", "url": "exp/createTextbox.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup.createPolygon(HSSFChildAnchor)", "text": "Creates a polygon to the sheet.", "tags": "METHOD", "url": "exp/createPolygon.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup.createPicture(HSSFChildAnchor, int)", "text": "Creates a picture. to the sheet.", "tags": "METHOD", "url": "exp/createPicture.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup.getChildren()", "text": "Return all children contained by this shape.", "tags": "METHOD", "url": "exp/getChildren.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup.setCoordinates(int, int, int, int)", "text": "Sets the coordinate space of this group.  All children are constrained to these coordinates.", "tags": "METHOD", "url": "exp/setCoordinates.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup.getX1()", "text": "The top left x coordinate of this group.", "tags": "METHOD", "url": "exp/getX1.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup.getY1()", "text": "The top left y coordinate of this group.", "tags": "METHOD", "url": "exp/getY1.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup.getX2()", "text": "The bottom right x coordinate of this group.", "tags": "METHOD", "url": "exp/getX2.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup.getY2()", "text": "The bottom right y coordinate of this group.", "tags": "METHOD", "url": "exp/getY2.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFShapeGroup.countOfAllChildren()", "text": "Count of all children and their childrens children.", "tags": "METHOD", "url": "exp/countOfAllChildren.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.preSerialize()", "text": "check whether the data of sheet can be serialized", "tags": "METHOD", "url": "exp/preSerialize.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getWorkbook()", "text": "Return the parent workbook", "tags": "METHOD", "url": "exp/getWorkbook.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setPropertiesFromSheet(InternalSheet)", "text": "used internally to set the properties given a Sheet object", "tags": "METHOD", "url": "exp/setPropertiesFromSheet.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.createRow(int)", "text": "Create a new row within the sheet and return the high level representation", "tags": "METHOD", "url": "exp/createRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.removeRow(Row)", "text": "Remove a row from this sheet.  All cells contained in the row are removed as well", "tags": "METHOD", "url": "exp/removeRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.findLastRow(int)", "text": "used internally to refresh the \"last row\" when the last row is removed.", "tags": "METHOD", "url": "exp/findLastRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getRow(int)", "text": "Returns the logical row (not physical) 0-based.  If you ask for a row that is not defined you get a null.  This is to say row 4 represents the fifth row on a sheet.", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getPhysicalNumberOfRows()", "text": "Returns the number of physically defined rows (NOT the number of rows in the sheet)", "tags": "METHOD", "url": "exp/getPhysicalNumberOfRows.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getFirstRowNum()", "text": "Gets the first row on the sheet", "tags": "METHOD", "url": "exp/getFirstRowNum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getLastRowNum()", "text": "Gets the number last row on the sheet", "tags": "METHOD", "url": "exp/getLastRowNum.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.addValidationData(DataValidation)", "text": "Creates a data validation object", "tags": "METHOD", "url": "exp/addValidationData.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setColumnHidden(int, boolean)", "text": "Get the visibility state for a given column.", "tags": "METHOD", "url": "exp/setColumnHidden.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.isColumnHidden(int)", "text": "Get the hidden state for a given column.", "tags": "METHOD", "url": "exp/isColumnHidden.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setColumnWidth(int, int)", "text": "Set the width (in units of 1256th of a character width)", "tags": "METHOD", "url": "exp/setColumnWidth.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getColumnWidth(int)", "text": "get the width (in units of 1256th of a character width )", "tags": "METHOD", "url": "exp/getColumnWidth.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getDefaultColumnWidth()", "text": "get the default column width for the sheet (if the columns do not define their own width) in characters", "tags": "METHOD", "url": "exp/getDefaultColumnWidth.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setDefaultColumnWidth(int)", "text": "set the default column width for the sheet (if the columns do not define their own width) in characters", "tags": "METHOD", "url": "exp/setDefaultColumnWidth.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getDefaultRowHeight()", "text": "get the default row height for the sheet (if the rows do not define their own height) in twips (120 of  a point)", "tags": "METHOD", "url": "exp/getDefaultRowHeight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getDefaultRowHeightInPoints()", "text": "get the default row height for the sheet (if the rows do not define their own height) in points.", "tags": "METHOD", "url": "exp/getDefaultRowHeightInPoints.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setDefaultRowHeight(short)", "text": "set the default row height for the sheet (if the rows do not define their own height) in twips (120 of  a point)", "tags": "METHOD", "url": "exp/setDefaultRowHeight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setDefaultRowHeightInPoints(float)", "text": "set the default row height for the sheet (if the rows do not define their own height) in points", "tags": "METHOD", "url": "exp/setDefaultRowHeightInPoints.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getColumnStyle(int)", "text": "Returns the HSSFCellStyle that applies to the given", "tags": "METHOD", "url": "exp/getColumnStyle.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.isGridsPrinted()", "text": "get whether gridlines are printed.", "tags": "METHOD", "url": "exp/isGridsPrinted.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setGridsPrinted(boolean)", "text": "set whether gridlines printed.", "tags": "METHOD", "url": "exp/setGridsPrinted.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.addMergedRegion(CellRangeAddress)", "text": "Adds a merged region of cells on a sheet.", "tags": "METHOD", "url": "exp/addMergedRegion.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.addMergedRegionUnsafe(CellRangeAddress)", "text": "Adds a merged region of cells (hence those cells form one)", "tags": "METHOD", "url": "exp/addMergedRegionUnsafe.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.validateMergedRegions()", "text": "Verify that merged regions do not intersect multi-cell array formulas and no merged regions intersect another merged region in this sheet.", "tags": "METHOD", "url": "exp/validateMergedRegions.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.addMergedRegion(CellRangeAddress, boolean)", "text": "adds a merged region of cells (hence those cells form one) or multi-cell array formula on this sheet", "tags": "METHOD", "url": "exp/addMergedRegion.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.checkForMergedRegionsIntersectingArrayFormulas()", "text": "Verify that none of the merged regions intersect a multi-cell array formula in this sheet", "tags": "METHOD", "url": "exp/checkForMergedRegionsIntersectingArrayFormulas.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.checkForIntersectingMergedRegions()", "text": "Verify that no merged regions intersect another merged region in this sheet.", "tags": "METHOD", "url": "exp/checkForIntersectingMergedRegions.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setForceFormulaRecalculation(boolean)", "text": "Control if Excel should be asked to recalculate all formulas on this sheet", "tags": "METHOD", "url": "exp/setForceFormulaRecalculation.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getForceFormulaRecalculation()", "text": "Whether a record must be inserted or not at generation to indicate that formula must be recalculated when workbook is opened.", "tags": "METHOD", "url": "exp/getForceFormulaRecalculation.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setVerticallyCenter(boolean)", "text": "determines whether the output is vertically centered on the page.", "tags": "METHOD", "url": "exp/setVerticallyCenter.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getVerticallyCenter()", "text": "Determine whether printed output for this sheet will be vertically centered.", "tags": "METHOD", "url": "exp/getVerticallyCenter.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setHorizontallyCenter(boolean)", "text": "determines whether the output is horizontally centered on the page.", "tags": "METHOD", "url": "exp/setHorizontallyCenter.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getHorizontallyCenter()", "text": "Determine whether printed output for this sheet will be horizontally centered.", "tags": "METHOD", "url": "exp/getHorizontallyCenter.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setRightToLeft(boolean)", "text": "Sets whether the worksheet is displayed from right to left instead of from left to right.", "tags": "METHOD", "url": "exp/setRightToLeft.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.isRightToLeft()", "text": "Whether the text is displayed in right-to-left mode in the window", "tags": "METHOD", "url": "exp/isRightToLeft.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.removeMergedRegion(int)", "text": "removes a merged region of cells (hence letting them free)", "tags": "METHOD", "url": "exp/removeMergedRegion.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.removeMergedRegions(Collection<Integer>)", "text": "Removes a number of merged regions of cells (hence letting them free)", "tags": "METHOD", "url": "exp/removeMergedRegions.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getNumMergedRegions()", "text": "returns the number of merged regions", "tags": "METHOD", "url": "exp/getNumMergedRegions.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.rowIterator()", "text": "be the third row if say for instance the second row is undefined. Call getRowNum() on each row if you care which one it is.", "tags": "METHOD", "url": "exp/rowIterator.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.iterator()", "text": "Alias for {@link #rowIterator()} to allow foreach loops", "tags": "METHOD", "url": "exp/iterator.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setAlternativeExpression(boolean)", "text": "whether alternate expression evaluation is on", "tags": "METHOD", "url": "exp/setAlternativeExpression.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setAlternativeFormula(boolean)", "text": "whether alternative formula entry is on", "tags": "METHOD", "url": "exp/setAlternativeFormula.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setAutobreaks(boolean)", "text": "show automatic page breaks or not", "tags": "METHOD", "url": "exp/setAutobreaks.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setDialog(boolean)", "text": "set whether sheet is a dialog sheet or not", "tags": "METHOD", "url": "exp/setDialog.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setDisplayGuts(boolean)", "text": "set whether to display the guts or not", "tags": "METHOD", "url": "exp/setDisplayGuts.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setFitToPage(boolean)", "text": "fit to page option is on", "tags": "METHOD", "url": "exp/setFitToPage.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setRowSumsBelow(boolean)", "text": "set if row summaries appear below detail in the outline", "tags": "METHOD", "url": "exp/setRowSumsBelow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setRowSumsRight(boolean)", "text": "set if col summaries appear right of the detail in the outline", "tags": "METHOD", "url": "exp/setRowSumsRight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getAlternateExpression()", "text": "whether alternate expression evaluation is on", "tags": "METHOD", "url": "exp/getAlternateExpression.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getAlternateFormula()", "text": "whether alternative formula entry is on", "tags": "METHOD", "url": "exp/getAlternateFormula.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getAutobreaks()", "text": "show automatic page breaks or not", "tags": "METHOD", "url": "exp/getAutobreaks.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getDialog()", "text": "get whether sheet is a dialog sheet or not", "tags": "METHOD", "url": "exp/getDialog.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getDisplayGuts()", "text": "get whether to display the guts or not", "tags": "METHOD", "url": "exp/getDisplayGuts.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.isDisplayZeros()", "text": "Gets the flag indicating whether the window should show 0 (zero) in cells containing zero value. When false, cells with zero value appear blank instead of showing the number zero.", "tags": "METHOD", "url": "exp/isDisplayZeros.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setDisplayZeros(boolean)", "text": "Set whether the window should show 0 (zero) in cells containing zero value. When false, cells with zero value appear blank instead of showing the number zero.", "tags": "METHOD", "url": "exp/setDisplayZeros.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getFitToPage()", "text": "fit to page option is on", "tags": "METHOD", "url": "exp/getFitToPage.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getRowSumsBelow()", "text": "get if row summaries appear below detail in the outline", "tags": "METHOD", "url": "exp/getRowSumsBelow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getRowSumsRight()", "text": "get if col summaries appear right of the detail in the outline", "tags": "METHOD", "url": "exp/getRowSumsRight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.isPrintGridlines()", "text": "Returns whether gridlines are printed.", "tags": "METHOD", "url": "exp/isPrintGridlines.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setPrintGridlines(boolean)", "text": "Turns on or off the printing of gridlines. gridlines", "tags": "METHOD", "url": "exp/setPrintGridlines.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.isPrintRowAndColumnHeadings()", "text": "Returns whether row and column headings are printed.", "tags": "METHOD", "url": "exp/isPrintRowAndColumnHeadings.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setPrintRowAndColumnHeadings(boolean)", "text": "Turns on or off the printing of row and column headings. row and column headings", "tags": "METHOD", "url": "exp/setPrintRowAndColumnHeadings.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getPrintSetup()", "text": "Gets the print setup object.", "tags": "METHOD", "url": "exp/getPrintSetup.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.isSelected()", "text": "Note - this is not the same as whether the sheet is focused (isActive)", "tags": "METHOD", "url": "exp/isSelected.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setSelected(boolean)", "text": "Sets whether sheet is selected.", "tags": "METHOD", "url": "exp/setSelected.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setActive(boolean)", "text": "Sets whether sheet is selected.", "tags": "METHOD", "url": "exp/setActive.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getMargin(short)", "text": "Gets the size of the margin in inches.", "tags": "METHOD", "url": "exp/getMargin.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setMargin(short, double)", "text": "Sets the size of the margin in inches.", "tags": "METHOD", "url": "exp/setMargin.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getProtect()", "text": "Answer whether protection is enabled or disabled", "tags": "METHOD", "url": "exp/getProtect.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getObjectProtect()", "text": "Answer whether object protection is enabled or disabled", "tags": "METHOD", "url": "exp/getObjectProtect.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getScenarioProtect()", "text": "Answer whether scenario protection is enabled or disabled", "tags": "METHOD", "url": "exp/getScenarioProtect.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.protectSheet(String)", "text": "Sets the protection enabled as well as the password", "tags": "METHOD", "url": "exp/protectSheet.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setZoom(int, int)", "text": "Sets the zoom magnification for the sheet", "tags": "METHOD", "url": "exp/setZoom.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setZoom(int)", "text": "Window zoom magnification for current view representing percent values", "tags": "METHOD", "url": "exp/setZoom.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getTopRow()", "text": "The top row in the visible view when the sheet is first viewed after opening it in a viewer", "tags": "METHOD", "url": "exp/getTopRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getLeftCol()", "text": "The left col in the visible view when the sheet is first viewed after opening it in a viewer", "tags": "METHOD", "url": "exp/getLeftCol.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.showInPane(int, int)", "text": "Sets desktop window pane display area, when the file is first opened in a viewer.", "tags": "METHOD", "url": "exp/showInPane.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.showInPane(short, short)", "text": "Sets desktop window pane display area, when the file is first opened in a viewer.", "tags": "METHOD", "url": "exp/showInPane.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.shiftRows(int, int, int)", "text": "Shifts rows between startRow and endRow n number of rows", "tags": "METHOD", "url": "exp/shiftRows.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.shiftRows(int, int, int, boolean, boolean)", "text": "Shifts rows between startRow and endRow n number of rows", "tags": "METHOD", "url": "exp/shiftRows.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.clip(int)", "text": "bound a row number between 0 and last row index (65535)", "tags": "METHOD", "url": "exp/clip.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.shiftRows(int, int, int, boolean, boolean, boolean)", "text": "Shifts rows between startRow and endRow n number of rows", "tags": "METHOD", "url": "exp/shiftRows.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.createFreezePane(int, int, int, int)", "text": "Creates a split (freezepane). Any existing freezepane or split pane is overwritten.<p> If both colSplit and rowSplit are zero then the existing freeze pane is removed", "tags": "METHOD", "url": "exp/createFreezePane.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.createFreezePane(int, int)", "text": "Creates a split (freezepane). Any existing freezepane or split pane is overwritten.<p> If both colSplit and rowSplit are zero then the existing freeze pane is removed", "tags": "METHOD", "url": "exp/createFreezePane.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.createSplitPane(int, int, int, int, int)", "text": "Creates a split pane. Any existing freezepane or split pane is overwritten. PANE_UPPER_RIGHT, PANE_LOWER_LEFT, PANE_UPPER_LEFT", "tags": "METHOD", "url": "exp/createSplitPane.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getPaneInformation()", "text": "Returns the information regarding the currently configured pane (split or freeze).", "tags": "METHOD", "url": "exp/getPaneInformation.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setDisplayGridlines(boolean)", "text": "Sets whether the gridlines are shown in a viewer.", "tags": "METHOD", "url": "exp/setDisplayGridlines.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.isDisplayGridlines()", "text": "Returns if gridlines are displayed.", "tags": "METHOD", "url": "exp/isDisplayGridlines.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setDisplayFormulas(boolean)", "text": "Sets whether the formulas are shown in a viewer.", "tags": "METHOD", "url": "exp/setDisplayFormulas.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.isDisplayFormulas()", "text": "Returns if formulas are displayed.", "tags": "METHOD", "url": "exp/isDisplayFormulas.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setDisplayRowColHeadings(boolean)", "text": "Sets whether the RowColHeadings are shown in a viewer.", "tags": "METHOD", "url": "exp/setDisplayRowColHeadings.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.isDisplayRowColHeadings()", "text": "Returns if RowColHeadings are displayed.", "tags": "METHOD", "url": "exp/isDisplayRowColHeadings.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setRowBreak(int)", "text": "Sets a page break at the indicated row", "tags": "METHOD", "url": "exp/setRowBreak.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.removeRowBreak(int)", "text": "Removes the page break at the indicated row", "tags": "METHOD", "url": "exp/removeRowBreak.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setColumnBreak(int)", "text": "Sets a page break at the indicated column", "tags": "METHOD", "url": "exp/setColumnBreak.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.isColumnBroken(int)", "text": "Determines if there is a page break at the indicated column", "tags": "METHOD", "url": "exp/isColumnBroken.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.removeColumnBreak(int)", "text": "Removes a page break at the indicated column", "tags": "METHOD", "url": "exp/removeColumnBreak.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.validateRow(int)", "text": "Runs a bounds check for row numbers", "tags": "METHOD", "url": "exp/validateRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.validateColumn(int)", "text": "Runs a bounds check for column numbers", "tags": "METHOD", "url": "exp/validateColumn.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.dumpDrawingRecords(boolean, PrintWriter)", "text": "Aggregates the drawing records and dumps the escher record hierarchy to the standard output.", "tags": "METHOD", "url": "exp/dumpDrawingRecords.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getDrawingEscherAggregate()", "text": "Returns the agregate escher records for this sheet, it there is one.", "tags": "METHOD", "url": "exp/getDrawingEscherAggregate.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getDrawingPatriarch()", "text": "This will hold any graphics or charts for the sheet.", "tags": "METHOD", "url": "exp/getDrawingPatriarch.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.createDrawingPatriarch()", "text": "Creates the top-level drawing patriarch.", "tags": "METHOD", "url": "exp/createDrawingPatriarch.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setColumnGroupCollapsed(int, boolean)", "text": "Expands or collapses a column group.", "tags": "METHOD", "url": "exp/setColumnGroupCollapsed.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.groupColumn(int, int)", "text": "Create an outline for the provided column range.", "tags": "METHOD", "url": "exp/groupColumn.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.groupRow(int, int)", "text": "Tie a range of cell together so that they can be collapsed or expanded", "tags": "METHOD", "url": "exp/groupRow.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setDefaultColumnStyle(int, CellStyle)", "text": "Sets the default column style for a given column.  POI will only apply this style to new cells added to the sheet.", "tags": "METHOD", "url": "exp/setDefaultColumnStyle.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.autoSizeColumn(int)", "text": "Adjusts the column width to fit the contents", "tags": "METHOD", "url": "exp/autoSizeColumn.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.autoSizeColumn(int, boolean)", "text": "Adjusts the column width to fit the contents", "tags": "METHOD", "url": "exp/autoSizeColumn.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getCellComment(CellAddress)", "text": "Returns cell comment for the specified row and column", "tags": "METHOD", "url": "exp/getCellComment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getHyperlink(int, int)", "text": "Get a Hyperlink in this sheet anchored at row, column", "tags": "METHOD", "url": "exp/getHyperlink.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getHyperlink(CellAddress)", "text": "Get a Hyperlink in this sheet located in a cell specified by {code addr}", "tags": "METHOD", "url": "exp/getHyperlink.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getHyperlinkList()", "text": "Get a list of Hyperlinks in this sheet", "tags": "METHOD", "url": "exp/getHyperlinkList.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.removeHyperlink(HSSFHyperlink)", "text": "Remove the underlying HyperlinkRecord from this sheet. If multiple HSSFHyperlinks refer to the same HyperlinkRecord, all HSSFHyperlinks will be removed.", "tags": "METHOD", "url": "exp/removeHyperlink.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.removeHyperlink(HyperlinkRecord)", "text": "Remove the underlying HyperlinkRecord from this sheet", "tags": "METHOD", "url": "exp/removeHyperlink.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getSheetName()", "text": "Returns the name of this sheet", "tags": "METHOD", "url": "exp/getSheetName.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getCellRange(CellRangeAddress)", "text": "Also creates cells if they don't exist", "tags": "METHOD", "url": "exp/getCellRange.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getCellComments()", "text": "Returns all cell comments on this sheet. the comment is located.", "tags": "METHOD", "url": "exp/getCellComments.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.findCellCommentLocations(HSSFShapeContainer, Map<CellAddress, HSSFComment>)", "text": "Finds all cell comments in this sheet and adds them to the specified locations map", "tags": "METHOD", "url": "exp/findCellCommentLocations.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getColumnOutlineLevel(int)", "text": "Returns the column outline level", "tags": "METHOD", "url": "exp/getColumnOutlineLevel.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.getActiveCell()", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/getActiveCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheet.setActiveCell(CellAddress)", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/setActiveCell.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheetConditionalFormatting.createConditionalFormattingRule(byte, String, String)", "text": "A factory method allowing to create a conditional formatting rule", "tags": "METHOD", "url": "exp/createConditionalFormattingRule.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheetConditionalFormatting.createConditionalFormattingRule(String)", "text": "A factory method allowing to create a conditional formatting rule with a formula. TODO - formulas containing cell references are currently not parsed properly", "tags": "METHOD", "url": "exp/createConditionalFormattingRule.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheetConditionalFormatting.createConditionalFormattingRule(IconSet)", "text": "A factory method allowing the creation of conditional formatting", "tags": "METHOD", "url": "exp/createConditionalFormattingRule.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheetConditionalFormatting.createConditionalFormattingRule(HSSFExtendedColor)", "text": "Create a Databar conditional formatting rule", "tags": "METHOD", "url": "exp/createConditionalFormattingRule.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheetConditionalFormatting.createConditionalFormattingColorScaleRule()", "text": "Create a Color Scale  Color Gradient conditional formatting rule", "tags": "METHOD", "url": "exp/createConditionalFormattingColorScaleRule.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheetConditionalFormatting.addConditionalFormatting(HSSFConditionalFormatting)", "text": "Adds a copy of HSSFConditionalFormatting object to the sheet", "tags": "METHOD", "url": "exp/addConditionalFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheetConditionalFormatting.addConditionalFormatting(CellRangeAddress[], HSSFConditionalFormattingRule[])", "text": "Allows to add a new Conditional Formatting set to the sheet.", "tags": "METHOD", "url": "exp/addConditionalFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheetConditionalFormatting.getConditionalFormattingAt(int)", "text": "gets Conditional Formatting object at a particular index of the Conditional Formatting object to fetch", "tags": "METHOD", "url": "exp/getConditionalFormattingAt.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSheetConditionalFormatting.removeConditionalFormatting(int)", "text": "removes a Conditional Formatting object by index", "tags": "METHOD", "url": "exp/removeConditionalFormatting.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFSimpleShape.getShapeType()", "text": "Gets the shape type.", "tags": "METHOD", "url": "exp/getShapeType.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFTextbox.setMarginLeft(int)", "text": "Sets the left margin within the textbox.", "tags": "METHOD", "url": "exp/setMarginLeft.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFTextbox.setMarginRight(int)", "text": "Sets the right margin within the textbox.", "tags": "METHOD", "url": "exp/setMarginRight.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFTextbox.setMarginTop(int)", "text": "Sets the top margin within the textbox.", "tags": "METHOD", "url": "exp/setMarginTop.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFTextbox.getMarginBottom()", "text": "Gets the bottom margin within the textbox.", "tags": "METHOD", "url": "exp/getMarginBottom.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFTextbox.setMarginBottom(int)", "text": "Sets the bottom margin within the textbox.", "tags": "METHOD", "url": "exp/setMarginBottom.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFTextbox.getHorizontalAlignment()", "text": "Gets the horizontal alignment.", "tags": "METHOD", "url": "exp/getHorizontalAlignment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFTextbox.setHorizontalAlignment(short)", "text": "Sets the horizontal alignment.", "tags": "METHOD", "url": "exp/setHorizontalAlignment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFTextbox.getVerticalAlignment()", "text": "Gets the vertical alignment.", "tags": "METHOD", "url": "exp/getVerticalAlignment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFTextbox.setVerticalAlignment(short)", "text": "Sets the vertical alignment.", "tags": "METHOD", "url": "exp/setVerticalAlignment.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.getMissingCellPolicy()", "text": "Retrieves the current policy on what to do when", "tags": "METHOD", "url": "exp/getMissingCellPolicy.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.setMissingCellPolicy(MissingCellPolicy)", "text": "Sets the policy on what to do when", "tags": "METHOD", "url": "exp/setMissingCellPolicy.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.updateNamedRangesAfterSheetReorder(int, int)", "text": "copy-pasted from XSSFWorkbook#updateNamedRangesAfterSheetReorder(int, int)", "tags": "METHOD", "url": "exp/updateNamedRangesAfterSheetReorder.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.setSelectedTab(int)", "text": "Selects a single sheet. This may be different to the 'active' sheet (which is the sheet with focus).", "tags": "METHOD", "url": "exp/setSelectedTab.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.setSelectedTabs(int[])", "text": "Selects multiple sheets as a group", "tags": "METHOD", "url": "exp/setSelectedTabs.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.setSelectedTabs(Collection<Integer>)", "text": "Selects multiple sheets as a group", "tags": "METHOD", "url": "exp/setSelectedTabs.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.getSelectedTabs()", "text": "Gets the selected sheets (if more than one, Excel calls these a [Group]).", "tags": "METHOD", "url": "exp/getSelectedTabs.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.setActiveSheet(int)", "text": "Convenience method to set the active sheet", "tags": "METHOD", "url": "exp/setActiveSheet.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.getActiveSheetIndex()", "text": "gets the tab whose data is actually seen when the sheet is opened", "tags": "METHOD", "url": "exp/getActiveSheetIndex.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.setFirstVisibleTab(int)", "text": "sets the first tab that is displayed in the list of tabs", "tags": "METHOD", "url": "exp/setFirstVisibleTab.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.getFirstVisibleTab()", "text": "sets the first tab that is displayed in the list of tabs in excel.", "tags": "METHOD", "url": "exp/getFirstVisibleTab.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.setSheetName(int, String)", "text": "Set the sheet name. or workbook already contains a sheet with this name", "tags": "METHOD", "url": "exp/setSheetName.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.getSheetIndex(String)", "text": "Returns the index of the sheet by his name", "tags": "METHOD", "url": "exp/getSheetIndex.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.getSheetIndex(org.apache.poi.ss.usermodel.Sheet)", "text": "Returns the index of the given sheet", "tags": "METHOD", "url": "exp/getSheetIndex.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.createSheet(String)", "text": "Create a new sheet for this Workbook and return the high level representation", "tags": "METHOD", "url": "exp/createSheet.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.sheetIterator()", "text": "Returns an iterator of the sheets in the workbook in sheet order. Includes hidden and very hidden sheets.", "tags": "METHOD", "url": "exp/sheetIterator.html"},
                {"title": "org.apache.poi.hssf.usermodel.HSSFWorkbook.iterator()", "text": "Alias for {@link #sheetIterator()} to allow foreach loops", "tags": "METHOD", "url": "exp/iterator.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.remove()", "text": "Unexpected behavior may occur if sheets are reordered after iterator", "tags": "METHOD", "url": "exp/remove.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.getNumberOfSheets()", "text": "get the number of spreadsheets in the workbook (this will be three after serialization)", "tags": "METHOD", "url": "exp/getNumberOfSheets.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.getSheetAt(int)", "text": "Get the HSSFSheet object at the given index. &lt; 0 || index &gt;= getNumberOfSheets()).", "tags": "METHOD", "url": "exp/getSheetAt.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.removeSheetAt(int)", "text": "Removes sheet at the given index", "tags": "METHOD", "url": "exp/removeSheetAt.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.findFont(boolean, short, short, String, boolean, boolean, short, byte)", "text": "Finds a font that matches the one with the supplied attributes", "tags": "METHOD", "url": "exp/findFont.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.getFontAt(short)", "text": "Get the font at the given index number", "tags": "METHOD", "url": "exp/getFontAt.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.resetFontCache()", "text": "Reset the fonts cache, causing all new calls", "tags": "METHOD", "url": "exp/resetFontCache.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.createCellStyle()", "text": "Create a new Cell style and add it to the workbook's style table. You can define up to 4000 unique styles in a .xls workbook.", "tags": "METHOD", "url": "exp/createCellStyle.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.getNumCellStyles()", "text": "get the number of styles the workbook contains", "tags": "METHOD", "url": "exp/getNumCellStyles.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.getCellStyleAt(int)", "text": "get the cell style object at the given index", "tags": "METHOD", "url": "exp/getCellStyleAt.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.close()", "text": "Closes the underlying {@link NPOIFSFileSystem} from which", "tags": "METHOD", "url": "exp/close.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.write()", "text": "Write out this workbook to the currently open {@link File} via the", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.write(File)", "text": "Method write - write out this workbook to a new {@link File}", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.write(OutputStream)", "text": "Method write - write out this workbook to an {@link OutputStream}", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetIterator.write(NPOIFSFileSystem)", "text": "Writes the workbook out to a brand new, empty POIFS", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.getBytes()", "text": "Method getBytes - get the bytes of just the HSSF portions of the XLS file", "tags": "METHOD", "url": "exp/getBytes.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.getNameName(int)", "text": "gets the named range name", "tags": "METHOD", "url": "exp/getNameName.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.setPrintArea(int, String)", "text": "Sets the printarea for the sheet provided", "tags": "METHOD", "url": "exp/setPrintArea.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.setPrintArea(int, int, int, int, int)", "text": "For the Convenience of Java Programmers maintaining pointers.", "tags": "METHOD", "url": "exp/setPrintArea.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.getPrintArea(int)", "text": "Retrieves the reference for the printarea of the specified sheet, the sheet name is appended to the reference even if it was not specified.", "tags": "METHOD", "url": "exp/getPrintArea.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.removePrintArea(int)", "text": "Delete the printarea for the sheet specified", "tags": "METHOD", "url": "exp/removePrintArea.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.createName()", "text": "creates a new named range and add it to the model", "tags": "METHOD", "url": "exp/createName.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.getNameIndex(HSSFName)", "text": "As {@link #getNameIndex(String)} is not necessarily unique", "tags": "METHOD", "url": "exp/getNameIndex.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.createDataFormat()", "text": "Returns the instance of HSSFDataFormat for this workbook.", "tags": "METHOD", "url": "exp/createDataFormat.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.removeName(Name)", "text": "As {@link #removeName(String)} is not necessarily unique (name + sheet index is unique), this method is more accurate.", "tags": "METHOD", "url": "exp/removeName.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.insertChartRecord()", "text": "Test only. Do not use", "tags": "METHOD", "url": "exp/insertChartRecord.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.dumpDrawingGroupRecords(boolean)", "text": "Spits out a list of all the drawing records in the workbook.", "tags": "METHOD", "url": "exp/dumpDrawingGroupRecords.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.addPicture(byte[], int)", "text": "Adds a picture to the workbook.", "tags": "METHOD", "url": "exp/addPicture.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.getAllPictures()", "text": "Gets all pictures from the Workbook.", "tags": "METHOD", "url": "exp/getAllPictures.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.searchForPictures(List<EscherRecord>, List<HSSFPictureData>)", "text": "Performs a recursive search for pictures in the given list of escher records.", "tags": "METHOD", "url": "exp/searchForPictures.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.addOlePackage(POIFSFileSystem, String, String, String)", "text": "Adds an OLE package manager object with the given POIFS to the sheet", "tags": "METHOD", "url": "exp/addOlePackage.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.linkExternalWorkbook(String, Workbook)", "text": "Adds the LinkTable records required to allow formulas referencing", "tags": "METHOD", "url": "exp/linkExternalWorkbook.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.isWriteProtected()", "text": "Is the workbook protected with a password (not encrypted)?", "tags": "METHOD", "url": "exp/isWriteProtected.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.writeProtectWorkbook(String, String)", "text": "protect a workbook with a password (not encypted, just sets writeprotect flags and the password.", "tags": "METHOD", "url": "exp/writeProtectWorkbook.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.unwriteProtectWorkbook()", "text": "removes the write protect flag", "tags": "METHOD", "url": "exp/unwriteProtectWorkbook.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.getAllEmbeddedObjects()", "text": "Gets all embedded OLE2 objects from the Workbook.", "tags": "METHOD", "url": "exp/getAllEmbeddedObjects.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.getAllEmbeddedObjects(HSSFSheet, List<HSSFObjectData>)", "text": "Gets all embedded OLE2 objects from the Workbook.", "tags": "METHOD", "url": "exp/getAllEmbeddedObjects.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.getAllEmbeddedObjects(HSSFShapeContainer, List<HSSFObjectData>)", "text": "Recursively iterates a shape container to get all embedded objects.", "tags": "METHOD", "url": "exp/getAllEmbeddedObjects.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.addToolPack(UDFFinder)", "text": "Register a new toolpack in this workbook.", "tags": "METHOD", "url": "exp/addToolPack.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.setForceFormulaRecalculation(boolean)", "text": "Whether the application shall perform a full recalculation when the workbook is opened", "tags": "METHOD", "url": "exp/setForceFormulaRecalculation.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.getForceFormulaRecalculation()", "text": "Whether Excel will be asked to recalculate all formulas when the  workbook is opened.", "tags": "METHOD", "url": "exp/getForceFormulaRecalculation.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.changeExternalReference(String, String)", "text": "Changes an external referenced file to another file", "tags": "METHOD", "url": "exp/changeExternalReference.html"},
                {"title": "org.apache.poi.hssf.usermodel.SheetRecordCollector.getSpreadsheetVersion()", "text": "Returns the spreadsheet version (EXCLE97) of this workbook", "tags": "METHOD", "url": "exp/getSpreadsheetVersion.html"},
                {"title": "org.apache.poi.hssf.usermodel.StaticFontMetrics.getFontDetails(Font)", "text": "Retrieves the fake font details for a given font. the font to lookup.", "tags": "METHOD", "url": "exp/getFontDetails.html"},
                {"title": "org.apache.poi.hssf.util.HSSFColor.getIndexHash()", "text": "This function returns all the colours in an unmodifiable Map. The map is cached on first use.", "tags": "METHOD", "url": "exp/getIndexHash.html"},
                {"title": "org.apache.poi.hssf.util.HSSFColor.getMutableIndexHash()", "text": "This function returns all the Colours, stored in a Map that", "tags": "METHOD", "url": "exp/getMutableIndexHash.html"},
                {"title": "org.apache.poi.hssf.util.HSSFColor.getTripletHash()", "text": "this function returns all colors in a hastable", "tags": "METHOD", "url": "exp/getTripletHash.html"},
                {"title": "org.apache.poi.hssf.util.HSSFColor.toHSSFColor(Color)", "text": "Checked type cast  to an HSSFColor.", "tags": "METHOD", "url": "exp/toHSSFColor.html"},
                {"title": "org.apache.poi.hssf.util.HSSFRegionUtil.setBorderLeft(int, CellRangeAddress, HSSFSheet, HSSFWorkbook)", "text": "Sets the left border for a region of cells by manipulating the cell style of the individual cells on the left", "tags": "METHOD", "url": "exp/setBorderLeft.html"},
                {"title": "org.apache.poi.hssf.util.HSSFRegionUtil.setLeftBorderColor(int, CellRangeAddress, HSSFSheet, HSSFWorkbook)", "text": "Sets the leftBorderColor attribute of the HSSFRegionUtil object", "tags": "METHOD", "url": "exp/setLeftBorderColor.html"},
                {"title": "org.apache.poi.hssf.util.HSSFRegionUtil.setBorderRight(int, CellRangeAddress, HSSFSheet, HSSFWorkbook)", "text": "Sets the borderRight attribute of the HSSFRegionUtil object", "tags": "METHOD", "url": "exp/setBorderRight.html"},
                {"title": "org.apache.poi.hssf.util.HSSFRegionUtil.setRightBorderColor(int, CellRangeAddress, HSSFSheet, HSSFWorkbook)", "text": "Sets the rightBorderColor attribute of the HSSFRegionUtil object", "tags": "METHOD", "url": "exp/setRightBorderColor.html"},
                {"title": "org.apache.poi.hssf.util.HSSFRegionUtil.setBorderBottom(int, CellRangeAddress, HSSFSheet, HSSFWorkbook)", "text": "Sets the borderBottom attribute of the HSSFRegionUtil object", "tags": "METHOD", "url": "exp/setBorderBottom.html"},
                {"title": "org.apache.poi.hssf.util.HSSFRegionUtil.setBottomBorderColor(int, CellRangeAddress, HSSFSheet, HSSFWorkbook)", "text": "Sets the bottomBorderColor attribute of the HSSFRegionUtil object", "tags": "METHOD", "url": "exp/setBottomBorderColor.html"},
                {"title": "org.apache.poi.hssf.util.HSSFRegionUtil.setBorderTop(int, CellRangeAddress, HSSFSheet, HSSFWorkbook)", "text": "Sets the borderBottom attribute of the HSSFRegionUtil object", "tags": "METHOD", "url": "exp/setBorderTop.html"},
                {"title": "org.apache.poi.hssf.util.HSSFRegionUtil.setTopBorderColor(int, CellRangeAddress, HSSFSheet, HSSFWorkbook)", "text": "Sets the topBorderColor attribute of the HSSFRegionUtil object", "tags": "METHOD", "url": "exp/setTopBorderColor.html"},
                {"title": "org.apache.poi.hssf.util.LazilyConcatenatedByteArray.clear()", "text": "Clears the array (sets the concatenated length back to zero.", "tags": "METHOD", "url": "exp/clear.html"},
                {"title": "org.apache.poi.hssf.util.LazilyConcatenatedByteArray.concatenate(byte[])", "text": "Concatenates an array onto the end of our array. This is a relatively fast operation.", "tags": "METHOD", "url": "exp/concatenate.html"},
                {"title": "org.apache.poi.hssf.util.LazilyConcatenatedByteArray.toArray()", "text": "Gets the concatenated contents as a single byte array", "tags": "METHOD", "url": "exp/toArray.html"},
                {"title": "org.apache.poi.hssf.util.RKUtil.decodeNumber(int)", "text": "Do the dirty work of decoding; made a private static method to facilitate testing the algorithm", "tags": "METHOD", "url": "exp/decodeNumber.html"},
                {"title": "org.apache.poi.POIDocument.getDocumentSummaryInformation()", "text": "Fetch the Document Summary Information of the document if it could not be read for this document.", "tags": "METHOD", "url": "exp/getDocumentSummaryInformation.html"},
                {"title": "org.apache.poi.POIDocument.getSummaryInformation()", "text": "Fetch the Summary Information of the document if it could not be read for this document.", "tags": "METHOD", "url": "exp/getSummaryInformation.html"},
                {"title": "org.apache.poi.POIDocument.createInformationProperties()", "text": "Will create whichever of SummaryInformation", "tags": "METHOD", "url": "exp/createInformationProperties.html"},
                {"title": "org.apache.poi.POIDocument.readProperties()", "text": "Find, and create objects for, the standard", "tags": "METHOD", "url": "exp/readProperties.html"},
                {"title": "org.apache.poi.POIDocument.getPropertySet(String)", "text": "For a given named property entry, either return it or null if if it wasn't found", "tags": "METHOD", "url": "exp/getPropertySet.html"},
                {"title": "org.apache.poi.POIDocument.getPropertySet(String, EncryptionInfo)", "text": "For a given named property entry, either return it or null if if it wasn't found", "tags": "METHOD", "url": "exp/getPropertySet.html"},
                {"title": "org.apache.poi.POIDocument.writeProperties()", "text": "Writes out the updated standard Document Information Properties (HPSF)", "tags": "METHOD", "url": "exp/writeProperties.html"},
                {"title": "org.apache.poi.POIDocument.writeProperties(NPOIFSFileSystem)", "text": "Writes out the standard Document Information Properties (HPSF) {@link NPOIFSFileSystem} occurs", "tags": "METHOD", "url": "exp/writeProperties.html"},
                {"title": "org.apache.poi.POIDocument.writeProperties(NPOIFSFileSystem, List<String>)", "text": "Writes out the standard Document Information Properties (HPSF) {@link NPOIFSFileSystem} occurs", "tags": "METHOD", "url": "exp/writeProperties.html"},
                {"title": "org.apache.poi.POIDocument.writePropertySet(String, PropertySet, NPOIFSFileSystem)", "text": "Writes out a given ProperySet {@link NPOIFSFileSystem} occurs", "tags": "METHOD", "url": "exp/writePropertySet.html"},
                {"title": "org.apache.poi.POIDocument.validateInPlaceWritePossible()", "text": "Called during a {@link #write()} to ensure that the Document (and", "tags": "METHOD", "url": "exp/validateInPlaceWritePossible.html"},
                {"title": "org.apache.poi.POIDocument.write()", "text": "Writes the document out to the currently open {@link File}, via the", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.POIDocument.write(File)", "text": "Writes the document out to the specified new {@link File}. If the file exists, it will be replaced, otherwise a new one will be created", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.POIDocument.write(OutputStream)", "text": "Writes the document out to the specified output stream", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.POIDocument.close()", "text": "Closes the underlying {@link NPOIFSFileSystem} from which", "tags": "METHOD", "url": "exp/close.html"},
                {"title": "org.apache.poi.POIDocument.clearDirectory()", "text": "Clearunlink the attached directory entry", "tags": "METHOD", "url": "exp/clearDirectory.html"},
                {"title": "org.apache.poi.POIDocument.initDirectory()", "text": "check if we were created by POIFS otherwise create a new dummy POIFS for storing the package data", "tags": "METHOD", "url": "exp/initDirectory.html"},
                {"title": "org.apache.poi.POIDocument.replaceDirectory(DirectoryNode)", "text": "Replaces the attached directory, e.g. if this document is written to a new POIFSFileSystem", "tags": "METHOD", "url": "exp/replaceDirectory.html"},
                {"title": "org.apache.poi.poifs.common.POIFSBigBlockSize.getHeaderValue()", "text": "Returns the value that gets written into the", "tags": "METHOD", "url": "exp/getHeaderValue.html"},
                {"title": "org.apache.poi.poifs.crypt.ChunkedCipherInputStream.remainingBytes()", "text": "Helper method for forbidden available call - we know the size beforehand, so it's ok ...", "tags": "METHOD", "url": "exp/remainingBytes.html"},
                {"title": "org.apache.poi.poifs.crypt.ChunkedCipherInputStream.invokeCipher(int, boolean)", "text": "Helper function for overriding the cipher invocation, i.e. XOR doesn't use a cipher and uses it's own implementation", "tags": "METHOD", "url": "exp/invokeCipher.html"},
                {"title": "org.apache.poi.poifs.crypt.ChunkedCipherInputStream.readPlain(byte[], int, int)", "text": "Used when BIFF header fields (sid, size) are being read. The internal {@link Cipher} instance must step even when unencrypted bytes are read", "tags": "METHOD", "url": "exp/readPlain.html"},
                {"title": "org.apache.poi.poifs.crypt.ChunkedCipherInputStream.setNextRecordSize(int)", "text": "Some ciphers (actually just XOR) are based on the record size, which needs to be set before decryption", "tags": "METHOD", "url": "exp/setNextRecordSize.html"},
                {"title": "org.apache.poi.poifs.crypt.ChunkedCipherOutputStream.invokeCipher(int, boolean)", "text": "Helper function for overriding the cipher invocation, i.e. XOR doesn't use a cipher and uses it's own implementation", "tags": "METHOD", "url": "exp/invokeCipher.html"},
                {"title": "org.apache.poi.poifs.crypt.ChunkedCipherOutputStream.setNextRecordSize(int, boolean)", "text": "Some ciphers (actually just XOR) are based on the record size, which needs to be set before encryption", "tags": "METHOD", "url": "exp/setNextRecordSize.html"},
                {"title": "org.apache.poi.poifs.crypt.cryptoapi.StreamDescriptorEntry.getSummaryEntries(DirectoryNode, String)", "text": "Decrypt the Document-SummaryInformation and other optionally streams", "tags": "METHOD", "url": "exp/getSummaryEntries.html"},
                {"title": "org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionInfoBuilder.initialize(EncryptionInfo, LittleEndianInput)", "text": "initialize the builder from a stream", "tags": "METHOD", "url": "exp/initialize.html"},
                {"title": "org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionInfoBuilder.initialize(EncryptionInfo, CipherAlgorithm, HashAlgorithm, int, int, ChainingMode)", "text": "initialize the builder from scratch", "tags": "METHOD", "url": "exp/initialize.html"},
                {"title": "org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptor.initCipherForBlock(Cipher, int)", "text": "Initializes a cipher object for a given block index for encryption", "tags": "METHOD", "url": "exp/initCipherForBlock.html"},
                {"title": "org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptor.getSummaryEntries(DirectoryNode)", "text": "Encrypt the Document-SummaryInformation and other optionally streams", "tags": "METHOD", "url": "exp/getSummaryEntries.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.hashPassword(String, HashAlgorithm, byte[], int)", "text": "2", "tags": "METHOD", "url": "exp/hashPassword.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.hashPassword(String, HashAlgorithm, byte[], int, boolean)", "text": "Generalized method for read and write protection hash generation", "tags": "METHOD", "url": "exp/hashPassword.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.generateIv(HashAlgorithm, byte[], byte[], int)", "text": "2", "tags": "METHOD", "url": "exp/generateIv.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.generateKey(byte[], HashAlgorithm, byte[], int)", "text": "2.3.4.11 Encryption Key Generation (Agile Encryption)", "tags": "METHOD", "url": "exp/generateKey.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.getCipher(SecretKey, CipherAlgorithm, ChainingMode, byte[], int)", "text": "Initialize a new cipher object with the given cipher properties and no padding", "tags": "METHOD", "url": "exp/getCipher.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.getCipher(Key, CipherAlgorithm, ChainingMode, byte[], int, String)", "text": "Initialize a new cipher object with the given cipher properties", "tags": "METHOD", "url": "exp/getCipher.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.getBlock36(byte[], int)", "text": "Returns a new byte array with a truncated to the given size. If the hash has less then size bytes, it will be filled with 0x36-bytes", "tags": "METHOD", "url": "exp/getBlock36.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.getBlock0(byte[], int)", "text": "Returns a new byte array with a truncated to the given size. If the hash has less then size bytes, it will be filled with 0-bytes", "tags": "METHOD", "url": "exp/getBlock0.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.createXorVerifier1(String)", "text": "Create the verifier for xor obfuscation (method 1)", "tags": "METHOD", "url": "exp/createXorVerifier1.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.createXorVerifier2(String)", "text": "This method generates the xor verifier for word documents &lt; 2007 (method 2)", "tags": "METHOD", "url": "exp/createXorVerifier2.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.xorHashPassword(String)", "text": "This method generates the xored-hashed password for word documents &lt; 2007.", "tags": "METHOD", "url": "exp/xorHashPassword.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.xorHashPasswordReversed(String)", "text": "Convenience function which returns the reversed xored-hashed password for further processing in word documents 2007 and newer, which utilize a real hashing algorithm like sha1.", "tags": "METHOD", "url": "exp/xorHashPasswordReversed.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.createXorKey1(String)", "text": "Create the xor key for xor obfuscation, which is used to create the xor array (method 1)", "tags": "METHOD", "url": "exp/createXorKey1.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.createXorArray1(String)", "text": "Creates an byte array for xor obfuscation (method 1)", "tags": "METHOD", "url": "exp/createXorArray1.html"},
                {"title": "org.apache.poi.poifs.crypt.CryptoFunctions.toAnsiPassword(String)", "text": "The provided Unicode password string is converted to a ANSI string", "tags": "METHOD", "url": "exp/toAnsiPassword.html"},
                {"title": "org.apache.poi.poifs.crypt.Decryptor.getDataStream(DirectoryNode)", "text": "Return a stream with decrypted data.", "tags": "METHOD", "url": "exp/getDataStream.html"},
                {"title": "org.apache.poi.poifs.crypt.Decryptor.getDataStream(InputStream, int, int)", "text": "Wraps a stream for decryption<p>", "tags": "METHOD", "url": "exp/getDataStream.html"},
                {"title": "org.apache.poi.poifs.crypt.Decryptor.setChunkSize(int)", "text": "Sets the chunk size of the data stream", "tags": "METHOD", "url": "exp/setChunkSize.html"},
                {"title": "org.apache.poi.poifs.crypt.Decryptor.initCipherForBlock(Cipher, int)", "text": "Initializes a cipher object for a given block index for encryption", "tags": "METHOD", "url": "exp/initCipherForBlock.html"},
                {"title": "org.apache.poi.poifs.crypt.Decryptor.getLength()", "text": "Returns the length of the encrypted data that can be safely read with", "tags": "METHOD", "url": "exp/getLength.html"},
                {"title": "org.apache.poi.poifs.crypt.EncryptionHeader.setKeySize(int)", "text": "Sets the keySize (in bits)", "tags": "METHOD", "url": "exp/setKeySize.html"},
                {"title": "org.apache.poi.poifs.crypt.EncryptionInfo.getBuilder(EncryptionMode)", "text": "This method loads the builder class with reflection, which may generate", "tags": "METHOD", "url": "exp/getBuilder.html"},
                {"title": "org.apache.poi.poifs.crypt.EncryptionInfoBuilder.initialize(EncryptionInfo, LittleEndianInput)", "text": "initialize the builder from a stream", "tags": "METHOD", "url": "exp/initialize.html"},
                {"title": "org.apache.poi.poifs.crypt.EncryptionInfoBuilder.initialize(EncryptionInfo, CipherAlgorithm, HashAlgorithm, int, int, ChainingMode)", "text": "initialize the builder from scratch", "tags": "METHOD", "url": "exp/initialize.html"},
                {"title": "org.apache.poi.poifs.crypt.Encryptor.getDataStream(DirectoryNode)", "text": "Return a output stream for encrypted data.", "tags": "METHOD", "url": "exp/getDataStream.html"},
                {"title": "org.apache.poi.poifs.crypt.Encryptor.setChunkSize(int)", "text": "Sets the chunk size of the data stream", "tags": "METHOD", "url": "exp/setChunkSize.html"},
                {"title": "org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader.write(LittleEndianByteArrayOutputStream)", "text": "serializes the header", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder.initialize(EncryptionInfo, LittleEndianInput)", "text": "initialize the builder from a stream", "tags": "METHOD", "url": "exp/initialize.html"},
                {"title": "org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder.initialize(EncryptionInfo, CipherAlgorithm, HashAlgorithm, int, int, ChainingMode)", "text": "initialize the builder from scratch", "tags": "METHOD", "url": "exp/initialize.html"},
                {"title": "org.apache.poi.poifs.crypt.standard.StandardEncryptor.confirmPassword(String, byte[], byte[], byte[], byte[], byte[])", "text": "Fills the fields of verifier and header with the calculated hashes based", "tags": "METHOD", "url": "exp/confirmPassword.html"},
                {"title": "org.apache.poi.poifs.crypt.xor.XORCipherInputStream.setNextRecordSize(int)", "text": "Decrypts a xor obfuscated byte array. The data is decrypted in-place", "tags": "METHOD", "url": "exp/setNextRecordSize.html"},
                {"title": "org.apache.poi.poifs.dev.POIFSHeaderDumper.main(String[])", "text": "Display the entries of multiple POIFS files", "tags": "METHOD", "url": "exp/main.html"},
                {"title": "org.apache.poi.poifs.dev.POIFSLister.main(String[])", "text": "Display the entries of multiple POIFS files", "tags": "METHOD", "url": "exp/main.html"},
                {"title": "org.apache.poi.poifs.dev.POIFSViewable.getViewableIterator()", "text": "Get an Iterator of objects, some of which may implement", "tags": "METHOD", "url": "exp/getViewableIterator.html"},
                {"title": "org.apache.poi.poifs.filesystem.BlockStore.getBlockStoreBlockSize()", "text": "Returns the size of the blocks managed through the block store.", "tags": "METHOD", "url": "exp/getBlockStoreBlockSize.html"},
                {"title": "org.apache.poi.poifs.filesystem.BlockStore.getBlockAt(int)", "text": "Load the block at the given offset.", "tags": "METHOD", "url": "exp/getBlockAt.html"},
                {"title": "org.apache.poi.poifs.filesystem.BlockStore.createBlockIfNeeded(int)", "text": "Extends the file if required to hold blocks up to the specified offset, and return the block from there.", "tags": "METHOD", "url": "exp/createBlockIfNeeded.html"},
                {"title": "org.apache.poi.poifs.filesystem.BlockStore.getBATBlockAndIndex(int)", "text": "Returns the BATBlock that handles the specified offset, and the relative index within it", "tags": "METHOD", "url": "exp/getBATBlockAndIndex.html"},
                {"title": "org.apache.poi.poifs.filesystem.BlockStore.getNextBlock(int)", "text": "Works out what block follows the specified one.", "tags": "METHOD", "url": "exp/getNextBlock.html"},
                {"title": "org.apache.poi.poifs.filesystem.BlockStore.setNextBlock(int, int)", "text": "Changes the record of what block follows the specified one.", "tags": "METHOD", "url": "exp/setNextBlock.html"},
                {"title": "org.apache.poi.poifs.filesystem.BlockStore.getFreeBlock()", "text": "Finds a free block, and returns its offset", "tags": "METHOD", "url": "exp/getFreeBlock.html"},
                {"title": "org.apache.poi.poifs.filesystem.BlockStore.getChainLoopDetector()", "text": "Creates a Detector for loops in the chain", "tags": "METHOD", "url": "exp/getChainLoopDetector.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryEntry.getEntryNames()", "text": "get the names of all the Entries contained directly in this", "tags": "METHOD", "url": "exp/getEntryNames.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryEntry.getStorageClsid()", "text": "Gets the storage clsid of the directory entry", "tags": "METHOD", "url": "exp/getStorageClsid.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryEntry.setStorageClsid(ClassID)", "text": "Sets the storage clsid for the directory entry", "tags": "METHOD", "url": "exp/setStorageClsid.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode.getOFileSystem()", "text": "If this is OPOIFS based, return the NPOIFSFileSystem that this belong to, otherwise Null if NPOIFS based", "tags": "METHOD", "url": "exp/getOFileSystem.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode.getNFileSystem()", "text": "If this is NPOIFS based, return the NPOIFSFileSystem that this belong to, otherwise Null if OPOIFS based", "tags": "METHOD", "url": "exp/getNFileSystem.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode.createDocumentInputStream(String)", "text": "open a document in the directory's entry's list of entries name is that of a DirectoryEntry", "tags": "METHOD", "url": "exp/createDocumentInputStream.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode.createDocumentInputStream(Entry)", "text": "open a document in the directory's entry's list of entries name is that of a DirectoryEntry", "tags": "METHOD", "url": "exp/createDocumentInputStream.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode.createDocument(OPOIFSDocument)", "text": "create a new DocumentEntry", "tags": "METHOD", "url": "exp/createDocument.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode.createDocument(NPOIFSDocument)", "text": "create a new DocumentEntry", "tags": "METHOD", "url": "exp/createDocument.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode.changeName(String, String)", "text": "Change a contained Entry's name", "tags": "METHOD", "url": "exp/changeName.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode.getEntryNames()", "text": "get the names of all the Entries contained directly in this", "tags": "METHOD", "url": "exp/getEntryNames.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode.getStorageClsid()", "text": "Gets the storage clsid of the directory entry", "tags": "METHOD", "url": "exp/getStorageClsid.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode.setStorageClsid(ClassID)", "text": "Sets the storage clsid for the directory entry", "tags": "METHOD", "url": "exp/setStorageClsid.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode.getViewableIterator()", "text": "Get an Iterator of objects, some of which may implement", "tags": "METHOD", "url": "exp/getViewableIterator.html"},
                {"title": "org.apache.poi.poifs.filesystem.DirectoryNode.iterator()", "text": "Returns an Iterator over all the entries", "tags": "METHOD", "url": "exp/iterator.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentFactoryHelper.getDecryptedStream(NPOIFSFileSystem, String)", "text": "Wrap the OLE2 data in the NPOIFSFileSystem into a decrypted stream by using the given password.", "tags": "METHOD", "url": "exp/getDecryptedStream.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentFactoryHelper.hasOOXMLHeader(InputStream)", "text": "Checks that the supplied InputStream (which MUST", "tags": "METHOD", "url": "exp/hasOOXMLHeader.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentInputStream.markSupported()", "text": "Tests if this input stream supports the mark and reset methods.", "tags": "METHOD", "url": "exp/markSupported.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentInputStream.reset()", "text": "Repositions this stream to the position at the time the mark() method was", "tags": "METHOD", "url": "exp/reset.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentNode.getDocument()", "text": "get the POIFSDocument", "tags": "METHOD", "url": "exp/getDocument.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentOutputStream.write(int)", "text": "Writes the specified byte to this output stream", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentOutputStream.write(byte[])", "text": "Writes b.length bytes from the specified byte array to this output stream.", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentOutputStream.write(byte[], int, int)", "text": "Writes len bytes from the specified byte array starting at", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentOutputStream.flush()", "text": "Flushes this output stream and forces any buffered output bytes to be written out.", "tags": "METHOD", "url": "exp/flush.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentOutputStream.close()", "text": "Closes this output stream and releases any system resources", "tags": "METHOD", "url": "exp/close.html"},
                {"title": "org.apache.poi.poifs.filesystem.DocumentOutputStream.writeFiller(int, byte)", "text": "write the rest of the document's data (fill in at the end) document must fill", "tags": "METHOD", "url": "exp/writeFiller.html"},
                {"title": "org.apache.poi.poifs.filesystem.EntryUtils.copyNodeRecursively(Entry, DirectoryEntry)", "text": "Copies an Entry into a target POIFS directory, recursively", "tags": "METHOD", "url": "exp/copyNodeRecursively.html"},
                {"title": "org.apache.poi.poifs.filesystem.EntryUtils.copyNodes(DirectoryEntry, DirectoryEntry)", "text": "Copies all the nodes from one POIFS Directory to another", "tags": "METHOD", "url": "exp/copyNodes.html"},
                {"title": "org.apache.poi.poifs.filesystem.EntryUtils.copyNodes(FilteringDirectoryNode, FilteringDirectoryNode)", "text": "Copies nodes from one Directory to the other minus the excepts", "tags": "METHOD", "url": "exp/copyNodes.html"},
                {"title": "org.apache.poi.poifs.filesystem.EntryUtils.copyNodes(OPOIFSFileSystem, OPOIFSFileSystem)", "text": "Copies all nodes from one POIFS to the other", "tags": "METHOD", "url": "exp/copyNodes.html"},
                {"title": "org.apache.poi.poifs.filesystem.EntryUtils.copyNodes(NPOIFSFileSystem, NPOIFSFileSystem)", "text": "Copies all nodes from one POIFS to the other", "tags": "METHOD", "url": "exp/copyNodes.html"},
                {"title": "org.apache.poi.poifs.filesystem.EntryUtils.copyNodes(OPOIFSFileSystem, OPOIFSFileSystem, List<String>)", "text": "Copies nodes from one POIFS to the other, minus the excepts", "tags": "METHOD", "url": "exp/copyNodes.html"},
                {"title": "org.apache.poi.poifs.filesystem.EntryUtils.copyNodes(NPOIFSFileSystem, NPOIFSFileSystem, List<String>)", "text": "Copies nodes from one POIFS to the other, minus the excepts", "tags": "METHOD", "url": "exp/copyNodes.html"},
                {"title": "org.apache.poi.poifs.filesystem.EntryUtils.areDirectoriesIdentical(DirectoryEntry, DirectoryEntry)", "text": "Checks to see if the two Directories hold the same contents", "tags": "METHOD", "url": "exp/areDirectoriesIdentical.html"},
                {"title": "org.apache.poi.poifs.filesystem.EntryUtils.areDocumentsIdentical(DocumentEntry, DocumentEntry)", "text": "Checks to see if two Documents have the same name", "tags": "METHOD", "url": "exp/areDocumentsIdentical.html"},
                {"title": "org.apache.poi.poifs.filesystem.NDocumentInputStream.reset()", "text": "Repositions this stream to the position at the time the mark() method was", "tags": "METHOD", "url": "exp/reset.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSDocument.store(InputStream)", "text": "Stores the given data for this Document", "tags": "METHOD", "url": "exp/store.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSDocument.free()", "text": "Frees the underlying stream and property", "tags": "METHOD", "url": "exp/free.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSDocument.getViewableArray()", "text": "Get an array of objects, some of which may implement POIFSViewable", "tags": "METHOD", "url": "exp/getViewableArray.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSDocument.getViewableIterator()", "text": "Get an Iterator of objects, some of which may implement POIFSViewable store", "tags": "METHOD", "url": "exp/getViewableIterator.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSDocument.preferArray()", "text": "Give viewers a hint as to whether to call getViewableArray or", "tags": "METHOD", "url": "exp/preferArray.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSDocument.getShortDescription()", "text": "Provides a short description of the object, to be used when a POIFSViewable object has not provided its contents.", "tags": "METHOD", "url": "exp/getShortDescription.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.createNonClosingInputStream(InputStream)", "text": "Convenience method for clients that want to avoid the auto-close behaviour of the constructor.", "tags": "METHOD", "url": "exp/createNonClosingInputStream.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.hasPOIFSHeader(InputStream)", "text": "Checks that the supplied InputStream (which MUST", "tags": "METHOD", "url": "exp/hasPOIFSHeader.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.hasPOIFSHeader(byte[])", "text": "Checks if the supplied first 8 bytes of a stream  file has a POIFS (OLE2) header.", "tags": "METHOD", "url": "exp/hasPOIFSHeader.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.readCoreContents()", "text": "Read and process the PropertiesTable and the", "tags": "METHOD", "url": "exp/readCoreContents.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.getBlockAt(int)", "text": "Load the block at the given offset.", "tags": "METHOD", "url": "exp/getBlockAt.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.createBlockIfNeeded(int)", "text": "Load the block at the given offset, extending the file if needed", "tags": "METHOD", "url": "exp/createBlockIfNeeded.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.getBATBlockAndIndex(int)", "text": "Returns the BATBlock that handles the specified offset, and the relative index within it", "tags": "METHOD", "url": "exp/getBATBlockAndIndex.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.getNextBlock(int)", "text": "Works out what block follows the specified one.", "tags": "METHOD", "url": "exp/getNextBlock.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.setNextBlock(int, int)", "text": "Changes the record of what block follows the specified one.", "tags": "METHOD", "url": "exp/setNextBlock.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.getFreeBlock()", "text": "Finds a free block, and returns its offset", "tags": "METHOD", "url": "exp/getFreeBlock.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem._get_property_table()", "text": "For unit testing only! Returns the underlying properties table", "tags": "METHOD", "url": "exp/_get_property_table.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.getMiniStore()", "text": "Returns the MiniStore, which performs a similar low level function to this, except for the small blocks.", "tags": "METHOD", "url": "exp/getMiniStore.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.addDocument(NPOIFSDocument)", "text": "add a new POIFSDocument to the FileSytem", "tags": "METHOD", "url": "exp/addDocument.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.addDirectory(DirectoryProperty)", "text": "add a new DirectoryProperty to the FileSystem", "tags": "METHOD", "url": "exp/addDirectory.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.isInPlaceWriteable()", "text": "Does the filesystem support an in-place write via", "tags": "METHOD", "url": "exp/isInPlaceWriteable.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.writeFilesystem()", "text": "Write the filesystem out to the open file", "tags": "METHOD", "url": "exp/writeFilesystem.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.syncWithDataSource()", "text": "Has our in-memory objects write their state to their backing blocks", "tags": "METHOD", "url": "exp/syncWithDataSource.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.close()", "text": "Closes the FileSystem, freeing any underlying files, streams", "tags": "METHOD", "url": "exp/close.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.getRoot()", "text": "Get the root entry", "tags": "METHOD", "url": "exp/getRoot.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSFileSystem.remove(EntryNode)", "text": "remove an entry", "tags": "METHOD", "url": "exp/remove.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSMiniStore.getBlockAt(int)", "text": "Load the block at the given offset.", "tags": "METHOD", "url": "exp/getBlockAt.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSMiniStore.createBlockIfNeeded(int)", "text": "Load the block, extending the underlying stream if needed", "tags": "METHOD", "url": "exp/createBlockIfNeeded.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSMiniStore.getBATBlockAndIndex(int)", "text": "Returns the BATBlock that handles the specified offset, and the relative index within it", "tags": "METHOD", "url": "exp/getBATBlockAndIndex.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSMiniStore.getNextBlock(int)", "text": "Works out what block follows the specified one.", "tags": "METHOD", "url": "exp/getNextBlock.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSMiniStore.setNextBlock(int, int)", "text": "Changes the record of what block follows the specified one.", "tags": "METHOD", "url": "exp/setNextBlock.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSMiniStore.getFreeBlock()", "text": "Finds a free block, and returns its offset", "tags": "METHOD", "url": "exp/getFreeBlock.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSMiniStore.syncWithDataSource()", "text": "Writes the SBATs to their backing blocks, and updates", "tags": "METHOD", "url": "exp/syncWithDataSource.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSStream.getStartBlock()", "text": "What block does this stream start at?", "tags": "METHOD", "url": "exp/getStartBlock.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSStream.iterator()", "text": "Returns an iterator that'll supply one {@link ByteBuffer} per block in the stream.", "tags": "METHOD", "url": "exp/iterator.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSStream.updateContents(byte[])", "text": "Updates the contents of the stream to the new", "tags": "METHOD", "url": "exp/updateContents.html"},
                {"title": "org.apache.poi.poifs.filesystem.NPOIFSStream.free()", "text": "Frees all blocks in the stream", "tags": "METHOD", "url": "exp/free.html"},
                {"title": "org.apache.poi.poifs.filesystem.ODocumentInputStream.reset()", "text": "Repositions this stream to the position at the time the mark() method was", "tags": "METHOD", "url": "exp/reset.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.createFromEmbeddedOleObject(POIFSFileSystem)", "text": "Creates an instance of this class from an embedded OLE Object", "tags": "METHOD", "url": "exp/createFromEmbeddedOleObject.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.createFromEmbeddedOleObject(DirectoryNode)", "text": "Creates an instance of this class from an embedded OLE Object", "tags": "METHOD", "url": "exp/createFromEmbeddedOleObject.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.getTotalSize()", "text": "Returns the value of the totalSize field - the total length of the structure is totalSize + 4 (value of this field + size of this field).", "tags": "METHOD", "url": "exp/getTotalSize.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.getFlags1()", "text": "Returns flags1 - currently unknown - usually 0x0002.", "tags": "METHOD", "url": "exp/getFlags1.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.getLabel()", "text": "Returns the label field - usually the name of the file (without", "tags": "METHOD", "url": "exp/getLabel.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.getFileName()", "text": "Returns the fileName field - usually the name of the file being embedded including the full path.", "tags": "METHOD", "url": "exp/getFileName.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.getFlags2()", "text": "Returns flags2 - currently unknown - mostly 0x0000.", "tags": "METHOD", "url": "exp/getFlags2.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.getUnknown1()", "text": "Returns unknown1 field - currently unknown.", "tags": "METHOD", "url": "exp/getUnknown1.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.getCommand()", "text": "Returns the command field - usually the name of the file being embedded", "tags": "METHOD", "url": "exp/getCommand.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.getDataSize()", "text": "Returns the size of the embedded file", "tags": "METHOD", "url": "exp/getDataSize.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.getDataBuffer()", "text": "Returns the buffer containing the embedded file's data, or", "tags": "METHOD", "url": "exp/getDataBuffer.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.getFlags3()", "text": "Returns the flags3 - currently unknown.", "tags": "METHOD", "url": "exp/getFlags3.html"},
                {"title": "org.apache.poi.poifs.filesystem.Ole10Native.writeOut(OutputStream)", "text": "Have the contents printer out into an OutputStream, used when writing a", "tags": "METHOD", "url": "exp/writeOut.html"},
                {"title": "org.apache.poi.poifs.filesystem.OPOIFSDocument.read(byte[], int)", "text": "read data from the internal stores This method is currently (Oct 2008) only used by test code. Perhaps it can be deleted", "tags": "METHOD", "url": "exp/read.html"},
                {"title": "org.apache.poi.poifs.filesystem.OPOIFSDocument.writeBlocks(OutputStream)", "text": "Write the storage to an OutputStream", "tags": "METHOD", "url": "exp/writeBlocks.html"},
                {"title": "org.apache.poi.poifs.filesystem.OPOIFSDocument.countBlocks()", "text": "Return the number of BigBlock's this instance uses", "tags": "METHOD", "url": "exp/countBlocks.html"},
                {"title": "org.apache.poi.poifs.filesystem.OPOIFSDocument.setStartBlock(int)", "text": "Set the start block for this instance", "tags": "METHOD", "url": "exp/setStartBlock.html"},
                {"title": "org.apache.poi.poifs.filesystem.OPOIFSDocument.getViewableArray()", "text": "Get an array of objects, some of which may implement POIFSViewable", "tags": "METHOD", "url": "exp/getViewableArray.html"},
                {"title": "org.apache.poi.poifs.filesystem.OPOIFSDocument.getViewableIterator()", "text": "Get an Iterator of objects, some of which may implement POIFSViewable store", "tags": "METHOD", "url": "exp/getViewableIterator.html"},
                {"title": "org.apache.poi.poifs.filesystem.OPOIFSDocument.preferArray()", "text": "Give viewers a hint as to whether to call getViewableArray or", "tags": "METHOD", "url": "exp/preferArray.html"},
                {"title": "org.apache.poi.poifs.filesystem.OPOIFSDocument.getShortDescription()", "text": "Provides a short description of the object, to be used when a POIFSViewable object has not provided its contents.", "tags": "METHOD", "url": "exp/getShortDescription.html"},
                {"title": "org.apache.poi.poifs.filesystem.BigBlockStore.writeBlocks(OutputStream)", "text": "write the blocks to a stream", "tags": "METHOD", "url": "exp/writeBlocks.html"},
                {"title": "org.apache.poi.poifs.filesystem.OPOIFSFileSystem.createNonClosingInputStream(InputStream)", "text": "Convenience method for clients that want to avoid the auto-close behaviour of the constructor.", "tags": "METHOD", "url": "exp/createNonClosingInputStream.html"},
                {"title": "org.apache.poi.poifs.filesystem.OPOIFSFileSystem.hasPOIFSHeader(InputStream)", "text": "Checks that the supplied InputStream (which MUST", "tags": "METHOD", "url": "exp/hasPOIFSHeader.html"},
                {"title": "org.apache.poi.poifs.filesystem.OPOIFSFileSystem.hasPOIFSHeader(byte[])", "text": "Checks if the supplied first 8 bytes of a stream  file has a POIFS (OLE2) header.", "tags": "METHOD", "url": "exp/hasPOIFSHeader.html"},
                {"title": "org.apache.poi.poifs.filesystem.POIFSFileSystem.createNonClosingInputStream(InputStream)", "text": "Convenience method for clients that want to avoid the auto-close behaviour of the constructor.", "tags": "METHOD", "url": "exp/createNonClosingInputStream.html"},
                {"title": "org.apache.poi.poifs.filesystem.POIFSFileSystem.hasPOIFSHeader(InputStream)", "text": "Checks that the supplied InputStream (which MUST", "tags": "METHOD", "url": "exp/hasPOIFSHeader.html"},
                {"title": "org.apache.poi.poifs.filesystem.POIFSFileSystem.hasPOIFSHeader(byte[])", "text": "Checks if the supplied first 8 bytes of a stream  file has a POIFS (OLE2) header.", "tags": "METHOD", "url": "exp/hasPOIFSHeader.html"},
                {"title": "org.apache.poi.poifs.filesystem.POIFSFileSystem.create(File)", "text": "Creates a new {@link POIFSFileSystem} in a new {@link File}", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.poifs.filesystem.POIFSFileSystem.main(String[])", "text": "read in a file and write it back out again arg[ 1 ] is the output file", "tags": "METHOD", "url": "exp/main.html"},
                {"title": "org.apache.poi.poifs.macros.VBAMacroExtractor.extract(File, File, String)", "text": "Extracts the VBA modules from a macro-enabled office file and writes them", "tags": "METHOD", "url": "exp/extract.html"},
                {"title": "org.apache.poi.poifs.macros.VBAMacroExtractor.extract(File, File)", "text": "Extracts the VBA modules from a macro-enabled office file and writes them", "tags": "METHOD", "url": "exp/extract.html"},
                {"title": "org.apache.poi.poifs.macros.VBAMacroReader.readMacros()", "text": "Reads all macros from all modules of the opened office file.", "tags": "METHOD", "url": "exp/readMacros.html"},
                {"title": "org.apache.poi.poifs.macros.ModuleMap.findMacros(DirectoryNode, ModuleMap)", "text": "Recursively traverses directory structure rooted at ", "tags": "METHOD", "url": "exp/findMacros.html"},
                {"title": "org.apache.poi.poifs.macros.ModuleMap.readString(InputStream, int, Charset)", "text": "Read  bytes of MBCS (multi-byte character set) characters from the stream", "tags": "METHOD", "url": "exp/readString.html"},
                {"title": "org.apache.poi.poifs.macros.ModuleMap.readModule(RLEDecompressingInputStream, String, ModuleMap)", "text": "reads module from DIR node in input stream and adds it to the modules map for decompression later", "tags": "METHOD", "url": "exp/readModule.html"},
                {"title": "org.apache.poi.poifs.macros.ModuleMap.trySkip(InputStream, long)", "text": "Skips  bytes in an input stream, throwing IOException if the number of bytes skipped is different than requested.", "tags": "METHOD", "url": "exp/trySkip.html"},
                {"title": "org.apache.poi.poifs.macros.ModuleMap.readMacros(DirectoryNode, ModuleMap)", "text": "Reads VBA Project modules from a VBA Project directory located at into .", "tags": "METHOD", "url": "exp/readMacros.html"},
                {"title": "org.apache.poi.poifs.nio.DataSource.close()", "text": "Close the underlying stream", "tags": "METHOD", "url": "exp/close.html"},
                {"title": "org.apache.poi.poifs.nio.DataSource.copyTo(OutputStream)", "text": "Copies the contents to the specified OutputStream", "tags": "METHOD", "url": "exp/copyTo.html"},
                {"title": "org.apache.poi.poifs.property.DirectoryProperty.changeName(Property, String)", "text": "Change a Property's name", "tags": "METHOD", "url": "exp/changeName.html"},
                {"title": "org.apache.poi.poifs.property.DirectoryProperty.deleteChild(Property)", "text": "Delete a Property", "tags": "METHOD", "url": "exp/deleteChild.html"},
                {"title": "org.apache.poi.poifs.property.PropertyComparator.compare(Property, Property)", "text": "compare method", "tags": "METHOD", "url": "exp/compare.html"},
                {"title": "org.apache.poi.poifs.property.PropertyComparator.preWrite()", "text": "Perform whatever activities need to be performed prior to writing", "tags": "METHOD", "url": "exp/preWrite.html"},
                {"title": "org.apache.poi.poifs.property.PropertyComparator.getChildren()", "text": "Get an iterator over the children of this Parent; all elements are instances of Property.", "tags": "METHOD", "url": "exp/getChildren.html"},
                {"title": "org.apache.poi.poifs.property.PropertyComparator.iterator()", "text": "Get an iterator over the children of this Parent, alias for {@link #getChildren()} which supports foreach use", "tags": "METHOD", "url": "exp/iterator.html"},
                {"title": "org.apache.poi.poifs.property.PropertyComparator.addChild(Property)", "text": "Add a new child to the collection of children name", "tags": "METHOD", "url": "exp/addChild.html"},
                {"title": "org.apache.poi.poifs.property.DocumentProperty.setDocument(OPOIFSDocument)", "text": "set the POIFSDocument", "tags": "METHOD", "url": "exp/setDocument.html"},
                {"title": "org.apache.poi.poifs.property.DocumentProperty.getDocument()", "text": "get the POIFSDocument", "tags": "METHOD", "url": "exp/getDocument.html"},
                {"title": "org.apache.poi.poifs.property.DocumentProperty.shouldUseSmallBlocks()", "text": "give method more visibility", "tags": "METHOD", "url": "exp/shouldUseSmallBlocks.html"},
                {"title": "org.apache.poi.poifs.property.DocumentProperty.preWrite()", "text": "Perform whatever activities need to be performed prior to writing", "tags": "METHOD", "url": "exp/preWrite.html"},
                {"title": "org.apache.poi.poifs.property.DocumentProperty.updateSize(int)", "text": "Update the size of the property's data", "tags": "METHOD", "url": "exp/updateSize.html"},
                {"title": "org.apache.poi.poifs.property.NPropertyTable.countBlocks()", "text": "Return the number of BigBlock's this instance uses", "tags": "METHOD", "url": "exp/countBlocks.html"},
                {"title": "org.apache.poi.poifs.property.NPropertyTable.preWrite()", "text": "Prepare to be written", "tags": "METHOD", "url": "exp/preWrite.html"},
                {"title": "org.apache.poi.poifs.property.NPropertyTable.write(NPOIFSStream)", "text": "Writes the properties out into the given low-level stream", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.poifs.property.Property.writeData(OutputStream)", "text": "Write the raw data to an OutputStream", "tags": "METHOD", "url": "exp/writeData.html"},
                {"title": "org.apache.poi.poifs.property.Property.setStartBlock(int)", "text": "Set the start block for the document referred to by this Property.", "tags": "METHOD", "url": "exp/setStartBlock.html"},
                {"title": "org.apache.poi.poifs.property.Property.getSize()", "text": "find out the document size", "tags": "METHOD", "url": "exp/getSize.html"},
                {"title": "org.apache.poi.poifs.property.Property.shouldUseSmallBlocks()", "text": "Based on the currently defined size, should this property use small blocks?", "tags": "METHOD", "url": "exp/shouldUseSmallBlocks.html"},
                {"title": "org.apache.poi.poifs.property.Property.isSmall(int)", "text": "does the length indicate a small document? _big_block_minimum_bytes", "tags": "METHOD", "url": "exp/isSmall.html"},
                {"title": "org.apache.poi.poifs.property.Property.getName()", "text": "Get the name of this property", "tags": "METHOD", "url": "exp/getName.html"},
                {"title": "org.apache.poi.poifs.property.Property.getStorageClsid()", "text": "Sets the storage clsid, which is the Class ID of a COM object which reads and writes this stream", "tags": "METHOD", "url": "exp/getStorageClsid.html"},
                {"title": "org.apache.poi.poifs.property.Property.setName(String)", "text": "Set the name; silently truncates the name if it's too long.", "tags": "METHOD", "url": "exp/setName.html"},
                {"title": "org.apache.poi.poifs.property.Property.setStorageClsid(ClassID)", "text": "Sets the storage class ID for this property stream. This is the Class ID of the COM object which can read and write this property stream", "tags": "METHOD", "url": "exp/setStorageClsid.html"},
                {"title": "org.apache.poi.poifs.property.Property.setPropertyType(byte)", "text": "Set the property type. Makes no attempt to validate the value.", "tags": "METHOD", "url": "exp/setPropertyType.html"},
                {"title": "org.apache.poi.poifs.property.Property.setNodeColor(byte)", "text": "Set the node color.", "tags": "METHOD", "url": "exp/setNodeColor.html"},
                {"title": "org.apache.poi.poifs.property.Property.setChildProperty(int)", "text": "Set the child property.", "tags": "METHOD", "url": "exp/setChildProperty.html"},
                {"title": "org.apache.poi.poifs.property.Property.getChildIndex()", "text": "Get the child property (its index in the Property Table)", "tags": "METHOD", "url": "exp/getChildIndex.html"},
                {"title": "org.apache.poi.poifs.property.Property.setSize(int)", "text": "Set the size of the document associated with this Property", "tags": "METHOD", "url": "exp/setSize.html"},
                {"title": "org.apache.poi.poifs.property.Property.setIndex(int)", "text": "Set the index for this Property Property Table", "tags": "METHOD", "url": "exp/setIndex.html"},
                {"title": "org.apache.poi.poifs.property.Property.getIndex()", "text": "get the index for this Property", "tags": "METHOD", "url": "exp/getIndex.html"},
                {"title": "org.apache.poi.poifs.property.Property.preWrite()", "text": "Perform whatever activities need to be performed prior to writing", "tags": "METHOD", "url": "exp/preWrite.html"},
                {"title": "org.apache.poi.poifs.property.Property.getNextChildIndex()", "text": "get the next sibling", "tags": "METHOD", "url": "exp/getNextChildIndex.html"},
                {"title": "org.apache.poi.poifs.property.Property.getPreviousChildIndex()", "text": "get the previous sibling", "tags": "METHOD", "url": "exp/getPreviousChildIndex.html"},
                {"title": "org.apache.poi.poifs.property.Property.isValidIndex(int)", "text": "determine whether the specified index is valid", "tags": "METHOD", "url": "exp/isValidIndex.html"},
                {"title": "org.apache.poi.poifs.property.Property.getNextChild()", "text": "Get the next Child, if any", "tags": "METHOD", "url": "exp/getNextChild.html"},
                {"title": "org.apache.poi.poifs.property.Property.getPreviousChild()", "text": "Get the previous Child, if any", "tags": "METHOD", "url": "exp/getPreviousChild.html"},
                {"title": "org.apache.poi.poifs.property.Property.setNextChild(Child)", "text": "Set the next Child effect of saying there is no 'next' child", "tags": "METHOD", "url": "exp/setNextChild.html"},
                {"title": "org.apache.poi.poifs.property.Property.setPreviousChild(Child)", "text": "Set the previous Child the effect of saying there is no 'previous' child", "tags": "METHOD", "url": "exp/setPreviousChild.html"},
                {"title": "org.apache.poi.poifs.property.Property.getViewableArray()", "text": "Get an array of objects, some of which may implement POIFSViewable", "tags": "METHOD", "url": "exp/getViewableArray.html"},
                {"title": "org.apache.poi.poifs.property.Property.getViewableIterator()", "text": "Get an Iterator of objects, some of which may implement", "tags": "METHOD", "url": "exp/getViewableIterator.html"},
                {"title": "org.apache.poi.poifs.property.Property.preferArray()", "text": "Give viewers a hint as to whether to call getViewableArray or", "tags": "METHOD", "url": "exp/preferArray.html"},
                {"title": "org.apache.poi.poifs.property.Property.getShortDescription()", "text": "Provides a short description of the object, to be used when a POIFSViewable object has not provided its contents.", "tags": "METHOD", "url": "exp/getShortDescription.html"},
                {"title": "org.apache.poi.poifs.property.PropertyFactory.convertToProperties(ListManagedBlock[])", "text": "Convert raw data blocks to an array of Property's nulls, but will not be null", "tags": "METHOD", "url": "exp/convertToProperties.html"},
                {"title": "org.apache.poi.poifs.property.PropertyTable.preWrite()", "text": "Prepare to be written", "tags": "METHOD", "url": "exp/preWrite.html"},
                {"title": "org.apache.poi.poifs.property.PropertyTable.countBlocks()", "text": "Return the number of BigBlock's this instance uses", "tags": "METHOD", "url": "exp/countBlocks.html"},
                {"title": "org.apache.poi.poifs.property.PropertyTable.writeBlocks(OutputStream)", "text": "Write the storage to an OutputStream", "tags": "METHOD", "url": "exp/writeBlocks.html"},
                {"title": "org.apache.poi.poifs.property.PropertyTableBase.addProperty(Property)", "text": "Add a property to the list of properties we manage", "tags": "METHOD", "url": "exp/addProperty.html"},
                {"title": "org.apache.poi.poifs.property.PropertyTableBase.removeProperty(Property)", "text": "Remove a property from the list of properties we manage", "tags": "METHOD", "url": "exp/removeProperty.html"},
                {"title": "org.apache.poi.poifs.property.PropertyTableBase.getRoot()", "text": "Get the root property", "tags": "METHOD", "url": "exp/getRoot.html"},
                {"title": "org.apache.poi.poifs.property.PropertyTableBase.getStartBlock()", "text": "Get the start block for the property table", "tags": "METHOD", "url": "exp/getStartBlock.html"},
                {"title": "org.apache.poi.poifs.property.PropertyTableBase.setStartBlock(int)", "text": "Set the start block for this instance up the the filesystem", "tags": "METHOD", "url": "exp/setStartBlock.html"},
                {"title": "org.apache.poi.poifs.property.RootProperty.setSize(int)", "text": "set size", "tags": "METHOD", "url": "exp/setSize.html"},
                {"title": "org.apache.poi.poifs.property.RootProperty.getName()", "text": "Returns the fixed name \"Root Entry\", as the raw property doesn't have a real name set", "tags": "METHOD", "url": "exp/getName.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.createBATBlock(POIFSBigBlockSize, ByteBuffer)", "text": "Create a single BATBlock from the byte buffer, which must hold at least one big block of data to be read.", "tags": "METHOD", "url": "exp/createBATBlock.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.createEmptyBATBlock(POIFSBigBlockSize, boolean)", "text": "Creates a single BATBlock, with all the values set to empty.", "tags": "METHOD", "url": "exp/createEmptyBATBlock.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.createBATBlocks(POIFSBigBlockSize, int[])", "text": "Create an array of BATBlocks from an array of int block allocation table entries", "tags": "METHOD", "url": "exp/createBATBlocks.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.calculateStorageRequirements(POIFSBigBlockSize, int)", "text": "Calculate how many BATBlocks are needed to hold a specified number of BAT entries.", "tags": "METHOD", "url": "exp/calculateStorageRequirements.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.calculateXBATStorageRequirements(POIFSBigBlockSize, int)", "text": "Calculate how many XBATBlocks are needed to hold a specified number of BAT entries.", "tags": "METHOD", "url": "exp/calculateXBATStorageRequirements.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.calculateMaximumSize(POIFSBigBlockSize, int)", "text": "Calculates the maximum size of a file which is addressable given the", "tags": "METHOD", "url": "exp/calculateMaximumSize.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.getBATBlockAndIndex(int, HeaderBlock, List<BATBlock>)", "text": "Returns the BATBlock that handles the specified offset,", "tags": "METHOD", "url": "exp/getBATBlockAndIndex.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.getSBATBlockAndIndex(int, HeaderBlock, List<BATBlock>)", "text": "Returns the BATBlock that handles the specified offset,", "tags": "METHOD", "url": "exp/getSBATBlockAndIndex.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.hasFreeSectors()", "text": "Does this BATBlock have any free sectors in it, or is it full?", "tags": "METHOD", "url": "exp/hasFreeSectors.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.getUsedSectors(boolean)", "text": "How many sectors in this block are taken? Note that calling {@link #hasFreeSectors()} is much quicker", "tags": "METHOD", "url": "exp/getUsedSectors.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.setOurBlockIndex(int)", "text": "Record where in the file we live", "tags": "METHOD", "url": "exp/setOurBlockIndex.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.getOurBlockIndex()", "text": "Retrieve where in the file we live", "tags": "METHOD", "url": "exp/getOurBlockIndex.html"},
                {"title": "org.apache.poi.poifs.storage.BATBlock.writeData(OutputStream)", "text": "Write the block's data to an OutputStream", "tags": "METHOD", "url": "exp/writeData.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableReader.fetchBlocks(int, int, BlockList)", "text": "walk the entries from a specified point and return the", "tags": "METHOD", "url": "exp/fetchBlocks.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableReader.isUsed(int)", "text": "determine whether the block specified by index is used or not", "tags": "METHOD", "url": "exp/isUsed.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableReader.getNextBlockIndex(int)", "text": "return the next block index", "tags": "METHOD", "url": "exp/getNextBlockIndex.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableReader.setEntries(ListManagedBlock[], BlockList)", "text": "Convert an array of blocks into a set of integer indices blocks will be eliminated from the list", "tags": "METHOD", "url": "exp/setEntries.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableWriter.createBlocks()", "text": "Create the BATBlocks we need", "tags": "METHOD", "url": "exp/createBlocks.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableWriter.allocateSpace(int)", "text": "Allocate space for a block of indices", "tags": "METHOD", "url": "exp/allocateSpace.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableWriter.getStartBlock()", "text": "get the starting block", "tags": "METHOD", "url": "exp/getStartBlock.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableWriter.simpleCreateBlocks()", "text": "create the BATBlocks", "tags": "METHOD", "url": "exp/simpleCreateBlocks.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableWriter.writeBlocks(OutputStream)", "text": "Write the storage to an OutputStream", "tags": "METHOD", "url": "exp/writeBlocks.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableWriter.writeBlock(BATBlock, ByteBuffer)", "text": "Write the BAT into its associated block", "tags": "METHOD", "url": "exp/writeBlock.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableWriter.countBlocks()", "text": "Return the number of BigBlock's this instance uses", "tags": "METHOD", "url": "exp/countBlocks.html"},
                {"title": "org.apache.poi.poifs.storage.BlockAllocationTableWriter.setStartBlock(int)", "text": "Set the start block for this instance", "tags": "METHOD", "url": "exp/setStartBlock.html"},
                {"title": "org.apache.poi.poifs.storage.BlockListImpl.setBlocks(ListManagedBlock[])", "text": "provide blocks to manage", "tags": "METHOD", "url": "exp/setBlocks.html"},
                {"title": "org.apache.poi.poifs.storage.BlockListImpl.zap(int)", "text": "remove the specified block from the list out of range, that's ok", "tags": "METHOD", "url": "exp/zap.html"},
                {"title": "org.apache.poi.poifs.storage.BlockListImpl.get(int)", "text": "Internal method. Gets, without sanity checks or removing.", "tags": "METHOD", "url": "exp/get.html"},
                {"title": "org.apache.poi.poifs.storage.BlockListImpl.remove(int)", "text": "remove and return the specified block from the list already been removed", "tags": "METHOD", "url": "exp/remove.html"},
                {"title": "org.apache.poi.poifs.storage.BlockListImpl.fetchBlocks(int, int)", "text": "get the blocks making up a particular stream in the list. The blocks are removed from the list.", "tags": "METHOD", "url": "exp/fetchBlocks.html"},
                {"title": "org.apache.poi.poifs.storage.BlockListImpl.setBAT(BlockAllocationTableReader)", "text": "set the associated BlockAllocationTable", "tags": "METHOD", "url": "exp/setBAT.html"},
                {"title": "org.apache.poi.poifs.storage.BlockListImpl.blockCount()", "text": "Returns the count of the number of blocks", "tags": "METHOD", "url": "exp/blockCount.html"},
                {"title": "org.apache.poi.poifs.storage.BlockListImpl.remainingBlocks()", "text": "Returns the number of remaining blocks", "tags": "METHOD", "url": "exp/remainingBlocks.html"},
                {"title": "org.apache.poi.poifs.storage.DataInputBlock.readUShortLE()", "text": "Reads a  which was encoded in  format.", "tags": "METHOD", "url": "exp/readUShortLE.html"},
                {"title": "org.apache.poi.poifs.storage.DataInputBlock.readUShortLE(DataInputBlock)", "text": "Reads a  which spans the end of  and the start of this block.", "tags": "METHOD", "url": "exp/readUShortLE.html"},
                {"title": "org.apache.poi.poifs.storage.DataInputBlock.readIntLE()", "text": "Reads an  which was encoded in  format.", "tags": "METHOD", "url": "exp/readIntLE.html"},
                {"title": "org.apache.poi.poifs.storage.DataInputBlock.readIntLE(DataInputBlock, int)", "text": "Reads an  which spans the end of  and the start of this block.", "tags": "METHOD", "url": "exp/readIntLE.html"},
                {"title": "org.apache.poi.poifs.storage.DataInputBlock.readLongLE()", "text": "Reads a  which was encoded in  format.", "tags": "METHOD", "url": "exp/readLongLE.html"},
                {"title": "org.apache.poi.poifs.storage.DataInputBlock.readLongLE(DataInputBlock, int)", "text": "Reads a  which spans the end of  and the start of this block.", "tags": "METHOD", "url": "exp/readLongLE.html"},
                {"title": "org.apache.poi.poifs.storage.DataInputBlock.readSpanning(DataInputBlock, int, byte[])", "text": "Reads a small amount of data from across the boundary between two blocks", "tags": "METHOD", "url": "exp/readSpanning.html"},
                {"title": "org.apache.poi.poifs.storage.DataInputBlock.readFully(byte[], int, int)", "text": "Reads  bytes from this block into the supplied buffer.", "tags": "METHOD", "url": "exp/readFully.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlock.getPropertyStart()", "text": "get start of Property Table", "tags": "METHOD", "url": "exp/getPropertyStart.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlock.setPropertyStart(int)", "text": "Set start of Property Table", "tags": "METHOD", "url": "exp/setPropertyStart.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlock.setSBATStart(int)", "text": "Set start of small block allocation table block allocation table", "tags": "METHOD", "url": "exp/setSBATStart.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlock.setSBATBlockCount(int)", "text": "Set count of SBAT blocks", "tags": "METHOD", "url": "exp/setSBATBlockCount.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlock.setBATCount(int)", "text": "Sets the number of BAT blocks that are used. This is the number used in both the BAT and XBAT.", "tags": "METHOD", "url": "exp/setBATCount.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlock.getBATArray()", "text": "Returns the offsets to the first (up to) 109", "tags": "METHOD", "url": "exp/getBATArray.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlock.setBATArray(int[])", "text": "Sets the offsets of the first (up to) 109 BAT sectors.", "tags": "METHOD", "url": "exp/setBATArray.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlock.setXBATCount(int)", "text": "Sets the number of XBAT (DIFAT) blocks used", "tags": "METHOD", "url": "exp/setXBATCount.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlock.setXBATStart(int)", "text": "Sets the first XBAT (DIFAT) block location", "tags": "METHOD", "url": "exp/setXBATStart.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlock.writeData(OutputStream)", "text": "Write the block's data to an OutputStream", "tags": "METHOD", "url": "exp/writeData.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlockWriter.setPropertyStart(int)", "text": "Set start of Property Table Table", "tags": "METHOD", "url": "exp/setPropertyStart.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlockWriter.setSBATStart(int)", "text": "Set start of small block allocation table block allocation table", "tags": "METHOD", "url": "exp/setSBATStart.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlockWriter.setSBATBlockCount(int)", "text": "Set count of SBAT blocks", "tags": "METHOD", "url": "exp/setSBATBlockCount.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlockWriter.writeBlocks(OutputStream)", "text": "Write the block's data to an OutputStream", "tags": "METHOD", "url": "exp/writeBlocks.html"},
                {"title": "org.apache.poi.poifs.storage.HeaderBlockWriter.writeBlock(ByteBuffer)", "text": "Write the block's data to an existing block stored data should be written", "tags": "METHOD", "url": "exp/writeBlock.html"},
                {"title": "org.apache.poi.poifs.storage.RawDataBlock.eof()", "text": "When we read the data, did we hit end of file?", "tags": "METHOD", "url": "exp/eof.html"},
                {"title": "org.apache.poi.poifs.storage.RawDataBlock.hasData()", "text": "Did we actually find any data to read? It's possible,", "tags": "METHOD", "url": "exp/hasData.html"},
                {"title": "org.apache.poi.poifs.storage.RawDataBlock.getData()", "text": "Get the data from the block", "tags": "METHOD", "url": "exp/getData.html"},
                {"title": "org.apache.poi.poifs.storage.RawDataBlock.getBigBlockSize()", "text": "What's the big block size?", "tags": "METHOD", "url": "exp/getBigBlockSize.html"},
                {"title": "org.apache.poi.poifs.storage.SmallBlockTableReader._getSmallDocumentBlockReader(POIFSBigBlockSize, RawDataBlockList, RootProperty, int)", "text": "Fetch the small document block reader from an existing file, normally", "tags": "METHOD", "url": "exp/_getSmallDocumentBlockReader.html"},
                {"title": "org.apache.poi.poifs.storage.SmallBlockTableReader.getSmallDocumentBlocks(POIFSBigBlockSize, RawDataBlockList, RootProperty, int)", "text": "Fetch the small document block list from an existing file", "tags": "METHOD", "url": "exp/getSmallDocumentBlocks.html"},
                {"title": "org.apache.poi.poifs.storage.SmallDocumentBlock.convert(POIFSBigBlockSize, byte[], int)", "text": "convert a single long array into an array of SmallDocumentBlock", "tags": "METHOD", "url": "exp/convert.html"},
                {"title": "org.apache.poi.poifs.storage.SmallDocumentBlock.fill(POIFSBigBlockSize, List<SmallDocumentBlock>)", "text": "fill out a List of SmallDocumentBlocks so that it fully occupies a set of big blocks", "tags": "METHOD", "url": "exp/fill.html"},
                {"title": "org.apache.poi.poifs.storage.SmallDocumentBlock.convert(POIFSBigBlockSize, BlockWritable[], int)", "text": "Factory for creating SmallDocumentBlocks from DocumentBlocks contains less data than size indicates", "tags": "METHOD", "url": "exp/convert.html"},
                {"title": "org.apache.poi.poifs.storage.SmallDocumentBlock.extract(POIFSBigBlockSize, ListManagedBlock[])", "text": "create a list of SmallDocumentBlock's from raw data data", "tags": "METHOD", "url": "exp/extract.html"},
                {"title": "org.apache.poi.poifs.storage.SmallDocumentBlock.calcSize(int)", "text": "Calculate the storage size of a set of SmallDocumentBlocks", "tags": "METHOD", "url": "exp/calcSize.html"},
                {"title": "org.apache.poi.poifs.storage.SmallDocumentBlock.writeBlocks(OutputStream)", "text": "Write the storage to an OutputStream", "tags": "METHOD", "url": "exp/writeBlocks.html"},
                {"title": "org.apache.poi.poifs.storage.SmallDocumentBlock.getData()", "text": "Get the data from the block", "tags": "METHOD", "url": "exp/getData.html"},
                {"title": "org.apache.poi.POIOLE2TextExtractor.getDocSummaryInformation()", "text": "Returns the document information metadata for the document if it could not be read for this document.", "tags": "METHOD", "url": "exp/getDocSummaryInformation.html"},
                {"title": "org.apache.poi.POIOLE2TextExtractor.getSummaryInformation()", "text": "Returns the summary information metadata for the document. if it could not be read for this document.", "tags": "METHOD", "url": "exp/getSummaryInformation.html"},
                {"title": "org.apache.poi.POIOLE2TextExtractor.getMetadataTextExtractor()", "text": "Returns an HPSF powered text extractor for the document properties metadata, such as title and author.", "tags": "METHOD", "url": "exp/getMetadataTextExtractor.html"},
                {"title": "org.apache.poi.POIOLE2TextExtractor.getRoot()", "text": "Return the underlying DirectoryEntry of this document.", "tags": "METHOD", "url": "exp/getRoot.html"},
                {"title": "org.apache.poi.POITextExtractor.getText()", "text": "Retrieves all the text from the document", "tags": "METHOD", "url": "exp/getText.html"},
                {"title": "org.apache.poi.POITextExtractor.getMetadataTextExtractor()", "text": "Returns another text extractor, which is able to", "tags": "METHOD", "url": "exp/getMetadataTextExtractor.html"},
                {"title": "org.apache.poi.POITextExtractor.setFilesystem(Closeable)", "text": "Used to ensure file handle cleanup.", "tags": "METHOD", "url": "exp/setFilesystem.html"},
                {"title": "org.apache.poi.POITextExtractor.close()", "text": "Allows to free resources of the Extractor as soon as", "tags": "METHOD", "url": "exp/close.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTAdjPoint2D.getX()", "text": "Gets the value of the x property", "tags": "METHOD", "url": "exp/getX.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTAdjPoint2D.setX(String)", "text": "Sets the value of the x property", "tags": "METHOD", "url": "exp/setX.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTAdjPoint2D.getY()", "text": "Gets the value of the y property", "tags": "METHOD", "url": "exp/getY.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTAdjPoint2D.setY(String)", "text": "Sets the value of the y property", "tags": "METHOD", "url": "exp/setY.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTAdjustHandleList.getAhXYOrAhPolar()", "text": "Gets the value of the ahXYOrAhPolar property", "tags": "METHOD", "url": "exp/getAhXYOrAhPolar.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTAngle.getVal()", "text": "Gets the value of the val property.", "tags": "METHOD", "url": "exp/getVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTAngle.setVal(int)", "text": "Sets the value of the val property.", "tags": "METHOD", "url": "exp/setVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor.getScrgbClr()", "text": "Gets the value of the scrgbClr property", "tags": "METHOD", "url": "exp/getScrgbClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor.setScrgbClr(CTScRgbColor)", "text": "Sets the value of the scrgbClr property", "tags": "METHOD", "url": "exp/setScrgbClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor.getSrgbClr()", "text": "Gets the value of the srgbClr property", "tags": "METHOD", "url": "exp/getSrgbClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor.setSrgbClr(CTSRgbColor)", "text": "Sets the value of the srgbClr property", "tags": "METHOD", "url": "exp/setSrgbClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor.getHslClr()", "text": "Gets the value of the hslClr property", "tags": "METHOD", "url": "exp/getHslClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor.setHslClr(CTHslColor)", "text": "Sets the value of the hslClr property", "tags": "METHOD", "url": "exp/setHslClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor.getSysClr()", "text": "Gets the value of the sysClr property", "tags": "METHOD", "url": "exp/getSysClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor.setSysClr(CTSystemColor)", "text": "Sets the value of the sysClr property", "tags": "METHOD", "url": "exp/setSysClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor.getSchemeClr()", "text": "Gets the value of the schemeClr property", "tags": "METHOD", "url": "exp/getSchemeClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor.setSchemeClr(CTSchemeColor)", "text": "Sets the value of the schemeClr property", "tags": "METHOD", "url": "exp/setSchemeClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor.getPrstClr()", "text": "Gets the value of the prstClr property", "tags": "METHOD", "url": "exp/getPrstClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColor.setPrstClr(CTPresetColor)", "text": "Sets the value of the prstClr property", "tags": "METHOD", "url": "exp/setPrstClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTColorMRU.getEGColorChoice()", "text": "Gets the value of the egColorChoice property", "tags": "METHOD", "url": "exp/getEGColorChoice.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTConnection.getId()", "text": "Gets the value of the id property.", "tags": "METHOD", "url": "exp/getId.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTConnection.setId(long)", "text": "Sets the value of the id property.", "tags": "METHOD", "url": "exp/setId.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTConnection.getIdx()", "text": "Gets the value of the idx property.", "tags": "METHOD", "url": "exp/getIdx.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTConnection.setIdx(long)", "text": "Sets the value of the idx property.", "tags": "METHOD", "url": "exp/setIdx.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTConnectionSite.getPos()", "text": "Gets the value of the pos property", "tags": "METHOD", "url": "exp/getPos.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTConnectionSite.setPos(CTAdjPoint2D)", "text": "Sets the value of the pos property", "tags": "METHOD", "url": "exp/setPos.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTConnectionSite.getAng()", "text": "Gets the value of the ang property", "tags": "METHOD", "url": "exp/getAng.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTConnectionSite.setAng(String)", "text": "Sets the value of the ang property", "tags": "METHOD", "url": "exp/setAng.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTConnectionSiteList.getCxn()", "text": "Gets the value of the cxn property", "tags": "METHOD", "url": "exp/getCxn.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D.getAvLst()", "text": "Gets the value of the avLst property", "tags": "METHOD", "url": "exp/getAvLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D.setAvLst(CTGeomGuideList)", "text": "Sets the value of the avLst property", "tags": "METHOD", "url": "exp/setAvLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D.getGdLst()", "text": "Gets the value of the gdLst property", "tags": "METHOD", "url": "exp/getGdLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D.setGdLst(CTGeomGuideList)", "text": "Sets the value of the gdLst property", "tags": "METHOD", "url": "exp/setGdLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D.getAhLst()", "text": "Gets the value of the ahLst property", "tags": "METHOD", "url": "exp/getAhLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D.setAhLst(CTAdjustHandleList)", "text": "Sets the value of the ahLst property", "tags": "METHOD", "url": "exp/setAhLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D.getCxnLst()", "text": "Gets the value of the cxnLst property", "tags": "METHOD", "url": "exp/getCxnLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D.setCxnLst(CTConnectionSiteList)", "text": "Sets the value of the cxnLst property", "tags": "METHOD", "url": "exp/setCxnLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D.getRect()", "text": "Gets the value of the rect property", "tags": "METHOD", "url": "exp/getRect.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D.setRect(CTGeomRect)", "text": "Sets the value of the rect property", "tags": "METHOD", "url": "exp/setRect.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D.getPathLst()", "text": "Gets the value of the pathLst property", "tags": "METHOD", "url": "exp/getPathLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTCustomGeometry2D.setPathLst(CTPath2DList)", "text": "Sets the value of the pathLst property", "tags": "METHOD", "url": "exp/setPathLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTEmbeddedWAVAudioFile.getEmbed()", "text": "Embedded Audio File Relationship ID", "tags": "METHOD", "url": "exp/getEmbed.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTEmbeddedWAVAudioFile.setEmbed(String)", "text": "Sets the value of the embed property", "tags": "METHOD", "url": "exp/setEmbed.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTEmbeddedWAVAudioFile.getName()", "text": "Gets the value of the name property", "tags": "METHOD", "url": "exp/getName.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTEmbeddedWAVAudioFile.setName(String)", "text": "Sets the value of the name property", "tags": "METHOD", "url": "exp/setName.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTEmbeddedWAVAudioFile.isBuiltIn()", "text": "Gets the value of the builtIn property", "tags": "METHOD", "url": "exp/isBuiltIn.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTEmbeddedWAVAudioFile.setBuiltIn(boolean)", "text": "Sets the value of the builtIn property", "tags": "METHOD", "url": "exp/setBuiltIn.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTFixedPercentage.getVal()", "text": "Gets the value of the val property.", "tags": "METHOD", "url": "exp/getVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTFixedPercentage.setVal(int)", "text": "Sets the value of the val property.", "tags": "METHOD", "url": "exp/setVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomGuide.getName()", "text": "Gets the value of the name property", "tags": "METHOD", "url": "exp/getName.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomGuide.setName(String)", "text": "Sets the value of the name property", "tags": "METHOD", "url": "exp/setName.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomGuide.getFmla()", "text": "Gets the value of the fmla property", "tags": "METHOD", "url": "exp/getFmla.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomGuide.setFmla(String)", "text": "Sets the value of the fmla property", "tags": "METHOD", "url": "exp/setFmla.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomGuideList.getGd()", "text": "Gets the value of the gd property", "tags": "METHOD", "url": "exp/getGd.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomRect.getL()", "text": "Gets the value of the l property", "tags": "METHOD", "url": "exp/getL.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomRect.setL(String)", "text": "Sets the value of the l property", "tags": "METHOD", "url": "exp/setL.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomRect.getT()", "text": "Gets the value of the t property", "tags": "METHOD", "url": "exp/getT.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomRect.setT(String)", "text": "Sets the value of the t property", "tags": "METHOD", "url": "exp/setT.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomRect.getR()", "text": "Gets the value of the r property", "tags": "METHOD", "url": "exp/getR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomRect.setR(String)", "text": "Sets the value of the r property", "tags": "METHOD", "url": "exp/setR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomRect.getB()", "text": "Gets the value of the b property", "tags": "METHOD", "url": "exp/getB.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGeomRect.setB(String)", "text": "Sets the value of the b property", "tags": "METHOD", "url": "exp/setB.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.getOff()", "text": "Gets the value of the off property", "tags": "METHOD", "url": "exp/getOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.setOff(CTPoint2D)", "text": "Sets the value of the off property", "tags": "METHOD", "url": "exp/setOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.getExt()", "text": "Gets the value of the ext property", "tags": "METHOD", "url": "exp/getExt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.setExt(CTPositiveSize2D)", "text": "Sets the value of the ext property", "tags": "METHOD", "url": "exp/setExt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.getChOff()", "text": "Gets the value of the chOff property", "tags": "METHOD", "url": "exp/getChOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.setChOff(CTPoint2D)", "text": "Sets the value of the chOff property", "tags": "METHOD", "url": "exp/setChOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.getChExt()", "text": "Gets the value of the chExt property", "tags": "METHOD", "url": "exp/getChExt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.setChExt(CTPositiveSize2D)", "text": "Sets the value of the chExt property", "tags": "METHOD", "url": "exp/setChExt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.getRot()", "text": "Gets the value of the rot property", "tags": "METHOD", "url": "exp/getRot.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.setRot(int)", "text": "Sets the value of the rot property", "tags": "METHOD", "url": "exp/setRot.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.isFlipH()", "text": "Gets the value of the flipH property", "tags": "METHOD", "url": "exp/isFlipH.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.setFlipH(boolean)", "text": "Sets the value of the flipH property", "tags": "METHOD", "url": "exp/setFlipH.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.isFlipV()", "text": "Gets the value of the flipV property", "tags": "METHOD", "url": "exp/isFlipV.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTGroupTransform2D.setFlipV(boolean)", "text": "Sets the value of the flipV property", "tags": "METHOD", "url": "exp/setFlipV.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHslColor.getEGColorTransform()", "text": "Gets the value of the egColorTransform property", "tags": "METHOD", "url": "exp/getEGColorTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHslColor.getHue()", "text": "Gets the value of the hue property.", "tags": "METHOD", "url": "exp/getHue.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHslColor.setHue(int)", "text": "Sets the value of the hue property.", "tags": "METHOD", "url": "exp/setHue.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHslColor.getSat()", "text": "Gets the value of the sat property.", "tags": "METHOD", "url": "exp/getSat.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHslColor.setSat(int)", "text": "Sets the value of the sat property.", "tags": "METHOD", "url": "exp/setSat.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHslColor.getLum()", "text": "Gets the value of the lum property.", "tags": "METHOD", "url": "exp/getLum.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHslColor.setLum(int)", "text": "Sets the value of the lum property.", "tags": "METHOD", "url": "exp/setLum.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.getSnd()", "text": "Gets the value of the snd property", "tags": "METHOD", "url": "exp/getSnd.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.setSnd(CTEmbeddedWAVAudioFile)", "text": "Sets the value of the snd property", "tags": "METHOD", "url": "exp/setSnd.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.getExtLst()", "text": "Gets the value of the extLst property", "tags": "METHOD", "url": "exp/getExtLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.setExtLst(CTOfficeArtExtensionList)", "text": "Sets the value of the extLst property", "tags": "METHOD", "url": "exp/setExtLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.getId()", "text": "Drawing Object Hyperlink Target", "tags": "METHOD", "url": "exp/getId.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.setId(String)", "text": "Sets the value of the id property", "tags": "METHOD", "url": "exp/setId.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.getInvalidUrl()", "text": "Gets the value of the invalidUrl property", "tags": "METHOD", "url": "exp/getInvalidUrl.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.setInvalidUrl(String)", "text": "Sets the value of the invalidUrl property", "tags": "METHOD", "url": "exp/setInvalidUrl.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.getAction()", "text": "Gets the value of the action property", "tags": "METHOD", "url": "exp/getAction.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.setAction(String)", "text": "Sets the value of the action property", "tags": "METHOD", "url": "exp/setAction.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.getTgtFrame()", "text": "Gets the value of the tgtFrame property", "tags": "METHOD", "url": "exp/getTgtFrame.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.setTgtFrame(String)", "text": "Sets the value of the tgtFrame property", "tags": "METHOD", "url": "exp/setTgtFrame.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.getTooltip()", "text": "Gets the value of the tooltip property", "tags": "METHOD", "url": "exp/getTooltip.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.setTooltip(String)", "text": "Sets the value of the tooltip property", "tags": "METHOD", "url": "exp/setTooltip.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.isHistory()", "text": "Gets the value of the history property", "tags": "METHOD", "url": "exp/isHistory.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.setHistory(boolean)", "text": "Sets the value of the history property", "tags": "METHOD", "url": "exp/setHistory.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.isHighlightClick()", "text": "Gets the value of the highlightClick property", "tags": "METHOD", "url": "exp/isHighlightClick.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.setHighlightClick(boolean)", "text": "Sets the value of the highlightClick property", "tags": "METHOD", "url": "exp/setHighlightClick.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.isEndSnd()", "text": "Gets the value of the endSnd property", "tags": "METHOD", "url": "exp/isEndSnd.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTHyperlink.setEndSnd(boolean)", "text": "Sets the value of the endSnd property", "tags": "METHOD", "url": "exp/setEndSnd.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTOfficeArtExtension.getAny()", "text": "Gets the value of the any property", "tags": "METHOD", "url": "exp/getAny.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTOfficeArtExtension.setAny(Object)", "text": "Sets the value of the any property", "tags": "METHOD", "url": "exp/setAny.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTOfficeArtExtension.getUri()", "text": "Gets the value of the uri property", "tags": "METHOD", "url": "exp/getUri.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTOfficeArtExtension.setUri(String)", "text": "Sets the value of the uri property", "tags": "METHOD", "url": "exp/setUri.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTOfficeArtExtensionList.getExt()", "text": "Gets the value of the ext property", "tags": "METHOD", "url": "exp/getExt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2D.getCloseOrMoveToOrLnTo()", "text": "Gets the value of the closeOrMoveToOrLnTo property", "tags": "METHOD", "url": "exp/getCloseOrMoveToOrLnTo.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2D.getW()", "text": "Gets the value of the w property", "tags": "METHOD", "url": "exp/getW.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2D.setW(long)", "text": "Sets the value of the w property", "tags": "METHOD", "url": "exp/setW.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2D.getH()", "text": "Gets the value of the h property", "tags": "METHOD", "url": "exp/getH.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2D.setH(long)", "text": "Sets the value of the h property", "tags": "METHOD", "url": "exp/setH.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2D.getFill()", "text": "Gets the value of the fill property", "tags": "METHOD", "url": "exp/getFill.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2D.setFill(STPathFillMode)", "text": "Sets the value of the fill property", "tags": "METHOD", "url": "exp/setFill.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2D.isStroke()", "text": "Gets the value of the stroke property", "tags": "METHOD", "url": "exp/isStroke.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2D.setStroke(boolean)", "text": "Sets the value of the stroke property", "tags": "METHOD", "url": "exp/setStroke.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2D.isExtrusionOk()", "text": "Gets the value of the extrusionOk property", "tags": "METHOD", "url": "exp/isExtrusionOk.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2D.setExtrusionOk(boolean)", "text": "Sets the value of the extrusionOk property", "tags": "METHOD", "url": "exp/setExtrusionOk.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DArcTo.getWR()", "text": "Gets the value of the wr property", "tags": "METHOD", "url": "exp/getWR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DArcTo.setWR(String)", "text": "Sets the value of the wr property", "tags": "METHOD", "url": "exp/setWR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DArcTo.getHR()", "text": "Gets the value of the hr property", "tags": "METHOD", "url": "exp/getHR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DArcTo.setHR(String)", "text": "Sets the value of the hr property", "tags": "METHOD", "url": "exp/setHR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DArcTo.getStAng()", "text": "Gets the value of the stAng property", "tags": "METHOD", "url": "exp/getStAng.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DArcTo.setStAng(String)", "text": "Sets the value of the stAng property", "tags": "METHOD", "url": "exp/setStAng.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DArcTo.getSwAng()", "text": "Gets the value of the swAng property", "tags": "METHOD", "url": "exp/getSwAng.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DArcTo.setSwAng(String)", "text": "Sets the value of the swAng property", "tags": "METHOD", "url": "exp/setSwAng.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DCubicBezierTo.getPt()", "text": "Gets the value of the pt property", "tags": "METHOD", "url": "exp/getPt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DLineTo.getPt()", "text": "Gets the value of the pt property", "tags": "METHOD", "url": "exp/getPt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DLineTo.setPt(CTAdjPoint2D)", "text": "Sets the value of the pt property", "tags": "METHOD", "url": "exp/setPt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DList.getPath()", "text": "Gets the value of the path property", "tags": "METHOD", "url": "exp/getPath.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DMoveTo.getPt()", "text": "Gets the value of the pt property", "tags": "METHOD", "url": "exp/getPt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DMoveTo.setPt(CTAdjPoint2D)", "text": "Sets the value of the pt property", "tags": "METHOD", "url": "exp/setPt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPath2DQuadBezierTo.getPt()", "text": "Gets the value of the pt property", "tags": "METHOD", "url": "exp/getPt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPercentage.getVal()", "text": "Gets the value of the val property.", "tags": "METHOD", "url": "exp/getVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPercentage.setVal(int)", "text": "Sets the value of the val property.", "tags": "METHOD", "url": "exp/setVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPoint2D.getX()", "text": "Gets the value of the x property.", "tags": "METHOD", "url": "exp/getX.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPoint2D.setX(long)", "text": "Sets the value of the x property.", "tags": "METHOD", "url": "exp/setX.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPoint2D.getY()", "text": "Gets the value of the y property.", "tags": "METHOD", "url": "exp/getY.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPoint2D.setY(long)", "text": "Sets the value of the y property.", "tags": "METHOD", "url": "exp/setY.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPoint3D.getX()", "text": "Gets the value of the x property.", "tags": "METHOD", "url": "exp/getX.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPoint3D.setX(long)", "text": "Sets the value of the x property.", "tags": "METHOD", "url": "exp/setX.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPoint3D.getY()", "text": "Gets the value of the y property.", "tags": "METHOD", "url": "exp/getY.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPoint3D.setY(long)", "text": "Sets the value of the y property.", "tags": "METHOD", "url": "exp/setY.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPoint3D.getZ()", "text": "Gets the value of the z property.", "tags": "METHOD", "url": "exp/getZ.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPoint3D.setZ(long)", "text": "Sets the value of the z property.", "tags": "METHOD", "url": "exp/setZ.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.getPos()", "text": "Gets the value of the pos property", "tags": "METHOD", "url": "exp/getPos.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.setPos(CTAdjPoint2D)", "text": "Sets the value of the pos property", "tags": "METHOD", "url": "exp/setPos.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.getGdRefR()", "text": "Gets the value of the gdRefR property", "tags": "METHOD", "url": "exp/getGdRefR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.setGdRefR(String)", "text": "Sets the value of the gdRefR property", "tags": "METHOD", "url": "exp/setGdRefR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.getMinR()", "text": "Gets the value of the minR property", "tags": "METHOD", "url": "exp/getMinR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.setMinR(String)", "text": "Sets the value of the minR property", "tags": "METHOD", "url": "exp/setMinR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.getMaxR()", "text": "Gets the value of the maxR property", "tags": "METHOD", "url": "exp/getMaxR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.setMaxR(String)", "text": "Sets the value of the maxR property", "tags": "METHOD", "url": "exp/setMaxR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.getGdRefAng()", "text": "Gets the value of the gdRefAng property", "tags": "METHOD", "url": "exp/getGdRefAng.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.setGdRefAng(String)", "text": "Sets the value of the gdRefAng property", "tags": "METHOD", "url": "exp/setGdRefAng.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.getMinAng()", "text": "Gets the value of the minAng property", "tags": "METHOD", "url": "exp/getMinAng.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.setMinAng(String)", "text": "Sets the value of the minAng property", "tags": "METHOD", "url": "exp/setMinAng.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.getMaxAng()", "text": "Gets the value of the maxAng property", "tags": "METHOD", "url": "exp/getMaxAng.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPolarAdjustHandle.setMaxAng(String)", "text": "Sets the value of the maxAng property", "tags": "METHOD", "url": "exp/setMaxAng.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositiveFixedAngle.getVal()", "text": "Gets the value of the val property.", "tags": "METHOD", "url": "exp/getVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositiveFixedAngle.setVal(int)", "text": "Sets the value of the val property.", "tags": "METHOD", "url": "exp/setVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositiveFixedPercentage.getVal()", "text": "Gets the value of the val property.", "tags": "METHOD", "url": "exp/getVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositiveFixedPercentage.setVal(int)", "text": "Sets the value of the val property.", "tags": "METHOD", "url": "exp/setVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositivePercentage.getVal()", "text": "Gets the value of the val property.", "tags": "METHOD", "url": "exp/getVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositivePercentage.setVal(int)", "text": "Sets the value of the val property.", "tags": "METHOD", "url": "exp/setVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositiveSize2D.getCx()", "text": "Gets the value of the cx property.", "tags": "METHOD", "url": "exp/getCx.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositiveSize2D.setCx(long)", "text": "Sets the value of the cx property.", "tags": "METHOD", "url": "exp/setCx.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositiveSize2D.getCy()", "text": "Gets the value of the cy property.", "tags": "METHOD", "url": "exp/getCy.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPositiveSize2D.setCy(long)", "text": "Sets the value of the cy property.", "tags": "METHOD", "url": "exp/setCy.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetColor.getEGColorTransform()", "text": "Gets the value of the egColorTransform property", "tags": "METHOD", "url": "exp/getEGColorTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetColor.getVal()", "text": "Gets the value of the val property", "tags": "METHOD", "url": "exp/getVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetColor.setVal(STPresetColorVal)", "text": "Sets the value of the val property", "tags": "METHOD", "url": "exp/setVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetGeometry2D.getAvLst()", "text": "Gets the value of the avLst property", "tags": "METHOD", "url": "exp/getAvLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetGeometry2D.setAvLst(CTGeomGuideList)", "text": "Sets the value of the avLst property", "tags": "METHOD", "url": "exp/setAvLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetGeometry2D.getPrst()", "text": "Gets the value of the prst property", "tags": "METHOD", "url": "exp/getPrst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetGeometry2D.setPrst(STShapeType)", "text": "Sets the value of the prst property", "tags": "METHOD", "url": "exp/setPrst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetTextShape.getAvLst()", "text": "Gets the value of the avLst property", "tags": "METHOD", "url": "exp/getAvLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetTextShape.setAvLst(CTGeomGuideList)", "text": "Sets the value of the avLst property", "tags": "METHOD", "url": "exp/setAvLst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetTextShape.getPrst()", "text": "Gets the value of the prst property", "tags": "METHOD", "url": "exp/getPrst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTPresetTextShape.setPrst(STTextShapeType)", "text": "Sets the value of the prst property", "tags": "METHOD", "url": "exp/setPrst.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRatio.getN()", "text": "Gets the value of the n property.", "tags": "METHOD", "url": "exp/getN.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRatio.setN(long)", "text": "Sets the value of the n property.", "tags": "METHOD", "url": "exp/setN.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRatio.getD()", "text": "Gets the value of the d property.", "tags": "METHOD", "url": "exp/getD.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRatio.setD(long)", "text": "Sets the value of the d property.", "tags": "METHOD", "url": "exp/setD.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRelativeRect.getL()", "text": "Gets the value of the l property", "tags": "METHOD", "url": "exp/getL.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRelativeRect.setL(int)", "text": "Sets the value of the l property", "tags": "METHOD", "url": "exp/setL.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRelativeRect.getT()", "text": "Gets the value of the t property", "tags": "METHOD", "url": "exp/getT.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRelativeRect.setT(int)", "text": "Sets the value of the t property", "tags": "METHOD", "url": "exp/setT.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRelativeRect.getR()", "text": "Gets the value of the r property", "tags": "METHOD", "url": "exp/getR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRelativeRect.setR(int)", "text": "Sets the value of the r property", "tags": "METHOD", "url": "exp/setR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRelativeRect.getB()", "text": "Gets the value of the b property", "tags": "METHOD", "url": "exp/getB.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTRelativeRect.setB(int)", "text": "Sets the value of the b property", "tags": "METHOD", "url": "exp/setB.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScale2D.getSx()", "text": "Gets the value of the sx property", "tags": "METHOD", "url": "exp/getSx.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScale2D.setSx(CTRatio)", "text": "Sets the value of the sx property", "tags": "METHOD", "url": "exp/setSx.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScale2D.getSy()", "text": "Gets the value of the sy property", "tags": "METHOD", "url": "exp/getSy.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScale2D.setSy(CTRatio)", "text": "Sets the value of the sy property", "tags": "METHOD", "url": "exp/setSy.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSchemeColor.getEGColorTransform()", "text": "Gets the value of the egColorTransform property", "tags": "METHOD", "url": "exp/getEGColorTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSchemeColor.getVal()", "text": "Gets the value of the val property", "tags": "METHOD", "url": "exp/getVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSchemeColor.setVal(STSchemeColorVal)", "text": "Sets the value of the val property", "tags": "METHOD", "url": "exp/setVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScRgbColor.getEGColorTransform()", "text": "Gets the value of the egColorTransform property", "tags": "METHOD", "url": "exp/getEGColorTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScRgbColor.getR()", "text": "Gets the value of the r property.", "tags": "METHOD", "url": "exp/getR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScRgbColor.setR(int)", "text": "Sets the value of the r property.", "tags": "METHOD", "url": "exp/setR.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScRgbColor.getG()", "text": "Gets the value of the g property.", "tags": "METHOD", "url": "exp/getG.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScRgbColor.setG(int)", "text": "Sets the value of the g property.", "tags": "METHOD", "url": "exp/setG.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScRgbColor.getB()", "text": "Gets the value of the b property.", "tags": "METHOD", "url": "exp/getB.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTScRgbColor.setB(int)", "text": "Sets the value of the b property.", "tags": "METHOD", "url": "exp/setB.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSphereCoords.getLat()", "text": "Gets the value of the lat property.", "tags": "METHOD", "url": "exp/getLat.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSphereCoords.setLat(int)", "text": "Sets the value of the lat property.", "tags": "METHOD", "url": "exp/setLat.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSphereCoords.getLon()", "text": "Gets the value of the lon property.", "tags": "METHOD", "url": "exp/getLon.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSphereCoords.setLon(int)", "text": "Sets the value of the lon property.", "tags": "METHOD", "url": "exp/setLon.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSphereCoords.getRev()", "text": "Gets the value of the rev property.", "tags": "METHOD", "url": "exp/getRev.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSphereCoords.setRev(int)", "text": "Sets the value of the rev property.", "tags": "METHOD", "url": "exp/setRev.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSRgbColor.getEGColorTransform()", "text": "Gets the value of the egColorTransform property", "tags": "METHOD", "url": "exp/getEGColorTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSRgbColor.getVal()", "text": "Gets the value of the val property", "tags": "METHOD", "url": "exp/getVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSRgbColor.setVal(byte[])", "text": "Sets the value of the val property", "tags": "METHOD", "url": "exp/setVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSystemColor.getEGColorTransform()", "text": "Gets the value of the egColorTransform property", "tags": "METHOD", "url": "exp/getEGColorTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSystemColor.getVal()", "text": "Gets the value of the val property", "tags": "METHOD", "url": "exp/getVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSystemColor.setVal(String)", "text": "Sets the value of the val property", "tags": "METHOD", "url": "exp/setVal.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSystemColor.getLastClr()", "text": "Gets the value of the lastClr property", "tags": "METHOD", "url": "exp/getLastClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTSystemColor.setLastClr(byte[])", "text": "Sets the value of the lastClr property", "tags": "METHOD", "url": "exp/setLastClr.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTTransform2D.getOff()", "text": "Gets the value of the off property", "tags": "METHOD", "url": "exp/getOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTTransform2D.setOff(CTPoint2D)", "text": "Sets the value of the off property", "tags": "METHOD", "url": "exp/setOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTTransform2D.getExt()", "text": "Gets the value of the ext property", "tags": "METHOD", "url": "exp/getExt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTTransform2D.setExt(CTPositiveSize2D)", "text": "Sets the value of the ext property", "tags": "METHOD", "url": "exp/setExt.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTTransform2D.getRot()", "text": "Gets the value of the rot property", "tags": "METHOD", "url": "exp/getRot.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTTransform2D.setRot(int)", "text": "Sets the value of the rot property", "tags": "METHOD", "url": "exp/setRot.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTTransform2D.isFlipH()", "text": "Gets the value of the flipH property", "tags": "METHOD", "url": "exp/isFlipH.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTTransform2D.setFlipH(boolean)", "text": "Sets the value of the flipH property", "tags": "METHOD", "url": "exp/setFlipH.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTTransform2D.isFlipV()", "text": "Gets the value of the flipV property", "tags": "METHOD", "url": "exp/isFlipV.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTTransform2D.setFlipV(boolean)", "text": "Sets the value of the flipV property", "tags": "METHOD", "url": "exp/setFlipV.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTVector3D.getDx()", "text": "Gets the value of the dx property.", "tags": "METHOD", "url": "exp/getDx.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTVector3D.setDx(long)", "text": "Sets the value of the dx property.", "tags": "METHOD", "url": "exp/setDx.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTVector3D.getDy()", "text": "Gets the value of the dy property.", "tags": "METHOD", "url": "exp/getDy.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTVector3D.setDy(long)", "text": "Sets the value of the dy property.", "tags": "METHOD", "url": "exp/setDy.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTVector3D.getDz()", "text": "Gets the value of the dz property.", "tags": "METHOD", "url": "exp/getDz.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTVector3D.setDz(long)", "text": "Sets the value of the dz property.", "tags": "METHOD", "url": "exp/setDz.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.getPos()", "text": "Gets the value of the pos property", "tags": "METHOD", "url": "exp/getPos.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.setPos(CTAdjPoint2D)", "text": "Sets the value of the pos property", "tags": "METHOD", "url": "exp/setPos.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.getGdRefX()", "text": "Gets the value of the gdRefX property", "tags": "METHOD", "url": "exp/getGdRefX.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.setGdRefX(String)", "text": "Sets the value of the gdRefX property", "tags": "METHOD", "url": "exp/setGdRefX.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.getMinX()", "text": "Gets the value of the minX property", "tags": "METHOD", "url": "exp/getMinX.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.setMinX(String)", "text": "Sets the value of the minX property", "tags": "METHOD", "url": "exp/setMinX.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.getMaxX()", "text": "Gets the value of the maxX property", "tags": "METHOD", "url": "exp/getMaxX.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.setMaxX(String)", "text": "Sets the value of the maxX property", "tags": "METHOD", "url": "exp/setMaxX.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.getGdRefY()", "text": "Gets the value of the gdRefY property", "tags": "METHOD", "url": "exp/getGdRefY.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.setGdRefY(String)", "text": "Sets the value of the gdRefY property", "tags": "METHOD", "url": "exp/setGdRefY.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.getMinY()", "text": "Gets the value of the minY property", "tags": "METHOD", "url": "exp/getMinY.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.setMinY(String)", "text": "Sets the value of the minY property", "tags": "METHOD", "url": "exp/setMinY.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.getMaxY()", "text": "Gets the value of the maxY property", "tags": "METHOD", "url": "exp/getMaxY.html"},
                {"title": "org.apache.poi.sl.draw.binding.CTXYAdjustHandle.setMaxY(String)", "text": "Sets the value of the maxY property", "tags": "METHOD", "url": "exp/setMaxY.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPositiveSize2D()", "text": "Create an instance of {@link CTPositiveSize2D }", "tags": "METHOD", "url": "exp/createCTPositiveSize2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSphereCoords()", "text": "Create an instance of {@link CTSphereCoords }", "tags": "METHOD", "url": "exp/createCTSphereCoords.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPositivePercentage()", "text": "Create an instance of {@link CTPositivePercentage }", "tags": "METHOD", "url": "exp/createCTPositivePercentage.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTAdjPoint2D()", "text": "Create an instance of {@link CTAdjPoint2D }", "tags": "METHOD", "url": "exp/createCTAdjPoint2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPath2DCubicBezierTo()", "text": "Create an instance of {@link CTPath2DCubicBezierTo }", "tags": "METHOD", "url": "exp/createCTPath2DCubicBezierTo.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTEmbeddedWAVAudioFile()", "text": "Create an instance of {@link CTEmbeddedWAVAudioFile }", "tags": "METHOD", "url": "exp/createCTEmbeddedWAVAudioFile.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetGeometry2D()", "text": "Create an instance of {@link CTPresetGeometry2D }", "tags": "METHOD", "url": "exp/createCTPresetGeometry2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColor()", "text": "Create an instance of {@link CTSchemeColor }", "tags": "METHOD", "url": "exp/createCTSchemeColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTInverseTransform()", "text": "Create an instance of {@link CTInverseTransform }", "tags": "METHOD", "url": "exp/createCTInverseTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColor()", "text": "Create an instance of {@link CTScRgbColor }", "tags": "METHOD", "url": "exp/createCTScRgbColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPositiveFixedAngle()", "text": "Create an instance of {@link CTPositiveFixedAngle }", "tags": "METHOD", "url": "exp/createCTPositiveFixedAngle.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTInverseGammaTransform()", "text": "Create an instance of {@link CTInverseGammaTransform }", "tags": "METHOD", "url": "exp/createCTInverseGammaTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTColorMRU()", "text": "Create an instance of {@link CTColorMRU }", "tags": "METHOD", "url": "exp/createCTColorMRU.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPath2DArcTo()", "text": "Create an instance of {@link CTPath2DArcTo }", "tags": "METHOD", "url": "exp/createCTPath2DArcTo.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColor()", "text": "Create an instance of {@link CTSystemColor }", "tags": "METHOD", "url": "exp/createCTSystemColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTGroupTransform2D()", "text": "Create an instance of {@link CTGroupTransform2D }", "tags": "METHOD", "url": "exp/createCTGroupTransform2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPoint2D()", "text": "Create an instance of {@link CTPoint2D }", "tags": "METHOD", "url": "exp/createCTPoint2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTGeomRect()", "text": "Create an instance of {@link CTGeomRect }", "tags": "METHOD", "url": "exp/createCTGeomRect.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScale2D()", "text": "Create an instance of {@link CTScale2D }", "tags": "METHOD", "url": "exp/createCTScale2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTGeomGuide()", "text": "Create an instance of {@link CTGeomGuide }", "tags": "METHOD", "url": "exp/createCTGeomGuide.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTXYAdjustHandle()", "text": "Create an instance of {@link CTXYAdjustHandle }", "tags": "METHOD", "url": "exp/createCTXYAdjustHandle.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTCustomGeometry2D()", "text": "Create an instance of {@link CTCustomGeometry2D }", "tags": "METHOD", "url": "exp/createCTCustomGeometry2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTOfficeArtExtension()", "text": "Create an instance of {@link CTOfficeArtExtension }", "tags": "METHOD", "url": "exp/createCTOfficeArtExtension.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTGrayscaleTransform()", "text": "Create an instance of {@link CTGrayscaleTransform }", "tags": "METHOD", "url": "exp/createCTGrayscaleTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPath2DClose()", "text": "Create an instance of {@link CTPath2DClose }", "tags": "METHOD", "url": "exp/createCTPath2DClose.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTComplementTransform()", "text": "Create an instance of {@link CTComplementTransform }", "tags": "METHOD", "url": "exp/createCTComplementTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPoint3D()", "text": "Create an instance of {@link CTPoint3D }", "tags": "METHOD", "url": "exp/createCTPoint3D.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPositiveFixedPercentage()", "text": "Create an instance of {@link CTPositiveFixedPercentage }", "tags": "METHOD", "url": "exp/createCTPositiveFixedPercentage.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPath2D()", "text": "Create an instance of {@link CTPath2D }", "tags": "METHOD", "url": "exp/createCTPath2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTAdjustHandleList()", "text": "Create an instance of {@link CTAdjustHandleList }", "tags": "METHOD", "url": "exp/createCTAdjustHandleList.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTConnectionSiteList()", "text": "Create an instance of {@link CTConnectionSiteList }", "tags": "METHOD", "url": "exp/createCTConnectionSiteList.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetTextShape()", "text": "Create an instance of {@link CTPresetTextShape }", "tags": "METHOD", "url": "exp/createCTPresetTextShape.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColor()", "text": "Create an instance of {@link CTSRgbColor }", "tags": "METHOD", "url": "exp/createCTSRgbColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPath2DMoveTo()", "text": "Create an instance of {@link CTPath2DMoveTo }", "tags": "METHOD", "url": "exp/createCTPath2DMoveTo.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTRelativeRect()", "text": "Create an instance of {@link CTRelativeRect }", "tags": "METHOD", "url": "exp/createCTRelativeRect.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPath2DList()", "text": "Create an instance of {@link CTPath2DList }", "tags": "METHOD", "url": "exp/createCTPath2DList.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPolarAdjustHandle()", "text": "Create an instance of {@link CTPolarAdjustHandle }", "tags": "METHOD", "url": "exp/createCTPolarAdjustHandle.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPercentage()", "text": "Create an instance of {@link CTPercentage }", "tags": "METHOD", "url": "exp/createCTPercentage.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColor()", "text": "Create an instance of {@link CTHslColor }", "tags": "METHOD", "url": "exp/createCTHslColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTRatio()", "text": "Create an instance of {@link CTRatio }", "tags": "METHOD", "url": "exp/createCTRatio.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTGeomGuideList()", "text": "Create an instance of {@link CTGeomGuideList }", "tags": "METHOD", "url": "exp/createCTGeomGuideList.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTTransform2D()", "text": "Create an instance of {@link CTTransform2D }", "tags": "METHOD", "url": "exp/createCTTransform2D.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTGammaTransform()", "text": "Create an instance of {@link CTGammaTransform }", "tags": "METHOD", "url": "exp/createCTGammaTransform.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPath2DQuadBezierTo()", "text": "Create an instance of {@link CTPath2DQuadBezierTo }", "tags": "METHOD", "url": "exp/createCTPath2DQuadBezierTo.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTAngle()", "text": "Create an instance of {@link CTAngle }", "tags": "METHOD", "url": "exp/createCTAngle.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTConnectionSite()", "text": "Create an instance of {@link CTConnectionSite }", "tags": "METHOD", "url": "exp/createCTConnectionSite.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHyperlink()", "text": "Create an instance of {@link CTHyperlink }", "tags": "METHOD", "url": "exp/createCTHyperlink.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTFixedPercentage()", "text": "Create an instance of {@link CTFixedPercentage }", "tags": "METHOD", "url": "exp/createCTFixedPercentage.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPath2DLineTo()", "text": "Create an instance of {@link CTPath2DLineTo }", "tags": "METHOD", "url": "exp/createCTPath2DLineTo.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTColor()", "text": "Create an instance of {@link CTColor }", "tags": "METHOD", "url": "exp/createCTColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColor()", "text": "Create an instance of {@link CTPresetColor }", "tags": "METHOD", "url": "exp/createCTPresetColor.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTVector3D()", "text": "Create an instance of {@link CTVector3D }", "tags": "METHOD", "url": "exp/createCTVector3D.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTOfficeArtExtensionList()", "text": "Create an instance of {@link CTOfficeArtExtensionList }", "tags": "METHOD", "url": "exp/createCTOfficeArtExtensionList.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTConnection()", "text": "Create an instance of {@link CTConnection }", "tags": "METHOD", "url": "exp/createCTConnection.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorAlpha(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorAlpha.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorLum(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorLum.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorGamma(CTGammaTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTGammaTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorGamma.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorInvGamma(CTInverseGammaTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTInverseGammaTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorInvGamma.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorRedOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorRedOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorAlphaMod(CTPositivePercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositivePercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorAlphaMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorAlphaOff(CTFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorAlphaOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorGreenOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorGreenOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorRedMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorRedMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorHue(CTPositiveFixedAngle)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedAngle }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorHue.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorSatOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorSatOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorGreenMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorGreenMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorSat(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorSat.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorBlue(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorBlue.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorRed(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorRed.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorSatMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorSatMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorHueOff(CTAngle)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTAngle }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorHueOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorBlueMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorBlueMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorShade(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorShade.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorLumMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorLumMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorInv(CTInverseTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTInverseTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorInv.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorLumOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorLumOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorTint(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorTint.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorGreen(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorGreen.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorComp(CTComplementTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTComplementTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorComp.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorBlueOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorBlueOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorHueMod(CTPositivePercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositivePercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorHueMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSRgbColorGray(CTGrayscaleTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTGrayscaleTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSRgbColorGray.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorLum(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorLum.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorAlpha(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorAlpha.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorGamma(CTGammaTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTGammaTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorGamma.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorInvGamma(CTInverseGammaTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTInverseGammaTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorInvGamma.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorAlphaMod(CTPositivePercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositivePercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorAlphaMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorRedOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorRedOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorAlphaOff(CTFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorAlphaOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorGreenOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorGreenOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorRedMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorRedMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorHue(CTPositiveFixedAngle)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedAngle }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorHue.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorSatOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorSatOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorGreenMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorGreenMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorBlue(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorBlue.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorSat(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorSat.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorRed(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorRed.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorSatMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorSatMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorBlueMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorBlueMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorHueOff(CTAngle)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTAngle }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorHueOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorShade(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorShade.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorLumMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorLumMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorInv(CTInverseTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTInverseTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorInv.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorLumOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorLumOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorTint(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorTint.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorGreen(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorGreen.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorComp(CTComplementTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTComplementTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorComp.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorBlueOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorBlueOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorHueMod(CTPositivePercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositivePercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorHueMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSystemColorGray(CTGrayscaleTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTGrayscaleTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSystemColorGray.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorLum(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorLum.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorAlpha(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorAlpha.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorGamma(CTGammaTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTGammaTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorGamma.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorInvGamma(CTInverseGammaTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTInverseGammaTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorInvGamma.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorRedOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorRedOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorAlphaMod(CTPositivePercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositivePercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorAlphaMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorAlphaOff(CTFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorAlphaOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorGreenOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorGreenOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorHue(CTPositiveFixedAngle)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedAngle }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorHue.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorRedMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorRedMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorSatOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorSatOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorGreenMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorGreenMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorBlue(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorBlue.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorSat(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorSat.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorRed(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorRed.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorSatMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorSatMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorHueOff(CTAngle)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTAngle }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorHueOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorBlueMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorBlueMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorShade(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorShade.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorLumMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorLumMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorInv(CTInverseTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTInverseTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorInv.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorLumOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorLumOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorTint(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorTint.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorGreen(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorGreen.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorComp(CTComplementTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTComplementTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorComp.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorBlueOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorBlueOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorHueMod(CTPositivePercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositivePercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorHueMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTSchemeColorGray(CTGrayscaleTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTGrayscaleTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTSchemeColorGray.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorLum(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorLum.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorAlpha(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorAlpha.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorGamma(CTGammaTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTGammaTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorGamma.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorInvGamma(CTInverseGammaTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTInverseGammaTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorInvGamma.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorRedOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorRedOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorAlphaMod(CTPositivePercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositivePercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorAlphaMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorAlphaOff(CTFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorAlphaOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorGreenOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorGreenOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorHue(CTPositiveFixedAngle)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedAngle }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorHue.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorRedMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorRedMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorSatOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorSatOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorGreenMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorGreenMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorSat(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorSat.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorBlue(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorBlue.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorRed(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorRed.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorSatMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorSatMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorHueOff(CTAngle)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTAngle }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorHueOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorBlueMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorBlueMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorShade(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorShade.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorLumMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorLumMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorInv(CTInverseTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTInverseTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorInv.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorLumOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorLumOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorTint(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorTint.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorGreen(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorGreen.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorComp(CTComplementTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTComplementTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorComp.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorBlueOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorBlueOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorHueMod(CTPositivePercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositivePercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorHueMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTScRgbColorGray(CTGrayscaleTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTGrayscaleTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTScRgbColorGray.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorAlpha(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorAlpha.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorLum(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorLum.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorGamma(CTGammaTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTGammaTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorGamma.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorInvGamma(CTInverseGammaTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTInverseGammaTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorInvGamma.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorAlphaMod(CTPositivePercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositivePercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorAlphaMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorRedOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorRedOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorAlphaOff(CTFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorAlphaOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorGreenOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorGreenOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorHue(CTPositiveFixedAngle)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedAngle }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorHue.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorRedMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorRedMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorSatOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorSatOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorGreenMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorGreenMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorBlue(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorBlue.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorSat(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorSat.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorRed(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorRed.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorSatMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorSatMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorBlueMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorBlueMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorHueOff(CTAngle)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTAngle }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorHueOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorShade(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorShade.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorLumMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorLumMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorInv(CTInverseTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTInverseTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorInv.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorLumOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorLumOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorTint(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorTint.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorGreen(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorGreen.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorComp(CTComplementTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTComplementTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorComp.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorBlueOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorBlueOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorHueMod(CTPositivePercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositivePercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorHueMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTHslColorGray(CTGrayscaleTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTGrayscaleTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTHslColorGray.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorLum(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorLum.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorAlpha(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorAlpha.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorGamma(CTGammaTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTGammaTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorGamma.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorInvGamma(CTInverseGammaTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTInverseGammaTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorInvGamma.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorRedOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorRedOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorAlphaMod(CTPositivePercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositivePercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorAlphaMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorAlphaOff(CTFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorAlphaOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorGreenOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorGreenOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorHue(CTPositiveFixedAngle)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedAngle }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorHue.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorRedMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorRedMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorSatOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorSatOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorGreenMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorGreenMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorBlue(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorBlue.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorSat(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorSat.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorRed(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorRed.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorSatMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorSatMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorBlueMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorBlueMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorHueOff(CTAngle)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTAngle }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorHueOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorShade(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorShade.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorLumMod(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorLumMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorInv(CTInverseTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTInverseTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorInv.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorLumOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorLumOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorTint(CTPositiveFixedPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositiveFixedPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorTint.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorGreen(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorGreen.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorComp(CTComplementTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTComplementTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorComp.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorBlueOff(CTPercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorBlueOff.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorHueMod(CTPositivePercentage)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTPositivePercentage }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorHueMod.html"},
                {"title": "org.apache.poi.sl.draw.binding.ObjectFactory.createCTPresetColorGray(CTGrayscaleTransform)", "text": "Create an instance of {@link JAXBElement }{@code <}{@link CTGrayscaleTransform }{@code >}}", "tags": "METHOD", "url": "exp/createCTPresetColorGray.html"},
                {"title": "org.apache.poi.sl.draw.BitmapImageRenderer.readImage(InputStream, String)", "text": "Read the image data via ImageIO and optionally try to workaround metadata errors. The resulting image is of image type {@link BufferedImage#TYPE_INT_ARGB}", "tags": "METHOD", "url": "exp/readImage.html"},
                {"title": "org.apache.poi.sl.draw.DrawableHint.applyTransform(Graphics2D)", "text": "Apply 2-D transforms before drawing this shape. This includes rotation and flipping.", "tags": "METHOD", "url": "exp/applyTransform.html"},
                {"title": "org.apache.poi.sl.draw.DrawableHint.draw(Graphics2D)", "text": "Draw this shape into the supplied canvas", "tags": "METHOD", "url": "exp/draw.html"},
                {"title": "org.apache.poi.sl.draw.DrawableHint.drawContent(Graphics2D)", "text": "draw any content within this shape (image, text, etc.).", "tags": "METHOD", "url": "exp/drawContent.html"},
                {"title": "org.apache.poi.sl.draw.DrawFactory.setDefaultFactory(DrawFactory)", "text": "Set a custom draw factory for the current thread", "tags": "METHOD", "url": "exp/setDefaultFactory.html"},
                {"title": "org.apache.poi.sl.draw.DrawFactory.getInstance(Graphics2D)", "text": "Returns the DrawFactory, preferably via a graphics instance", "tags": "METHOD", "url": "exp/getInstance.html"},
                {"title": "org.apache.poi.sl.draw.DrawFactory.drawShape(Graphics2D, Shape<?, ?>, Rectangle2D)", "text": "Convenience method for drawing single shapes. For drawing whole slides, use {@link Slide#draw(Graphics2D)}", "tags": "METHOD", "url": "exp/drawShape.html"},
                {"title": "org.apache.poi.sl.draw.DrawFactory.fixFonts(Graphics2D)", "text": "Replace font families for Windows JVM 6, which contains a font rendering error. This is likely to be removed, when POI upgrades to JDK 7", "tags": "METHOD", "url": "exp/fixFonts.html"},
                {"title": "org.apache.poi.sl.draw.DrawFontManager.getRendererableFont(String, int)", "text": "select a font to be used to paint text", "tags": "METHOD", "url": "exp/getRendererableFont.html"},
                {"title": "org.apache.poi.sl.draw.DrawFontManager.getFallbackFont(String, int)", "text": "In case the original font doesn't contain a glyph, use the", "tags": "METHOD", "url": "exp/getFallbackFont.html"},
                {"title": "org.apache.poi.sl.draw.DrawMasterSheet.canDraw(Shape<?, ?>)", "text": "Checks if this  displays the specified shape", "tags": "METHOD", "url": "exp/canDraw.html"},
                {"title": "org.apache.poi.sl.draw.DrawNothing.applyTransform(Graphics2D)", "text": "Apply 2-D transforms before drawing this shape. This includes rotation and flipping.", "tags": "METHOD", "url": "exp/applyTransform.html"},
                {"title": "org.apache.poi.sl.draw.SimpleSolidPaint.applyColorTransform(ColorStyle)", "text": "Convert color transformations in {@link ColorStyle} to a {@link Color} instance", "tags": "METHOD", "url": "exp/applyColorTransform.html"},
                {"title": "org.apache.poi.sl.draw.SimpleSolidPaint.applyHslModOff(double[], int, int, int)", "text": "Apply the modulation and offset adjustments to the given HSL part", "tags": "METHOD", "url": "exp/applyHslModOff.html"},
                {"title": "org.apache.poi.sl.draw.SimpleSolidPaint.applyShade(double[], ColorStyle)", "text": "Apply the shade For a shade, the equation is luminance  %tint.", "tags": "METHOD", "url": "exp/applyShade.html"},
                {"title": "org.apache.poi.sl.draw.SimpleSolidPaint.applyTint(double[], ColorStyle)", "text": "Apply the tint", "tags": "METHOD", "url": "exp/applyTint.html"},
                {"title": "org.apache.poi.sl.draw.SimpleSolidPaint.HSL2RGB(double, double, double, double)", "text": "Convert HSL values to a RGB Color.", "tags": "METHOD", "url": "exp/HSL2RGB.html"},
                {"title": "org.apache.poi.sl.draw.SimpleSolidPaint.RGB2HSL(Color)", "text": "Convert a RGB Color to it corresponding HSL values.", "tags": "METHOD", "url": "exp/RGB2HSL.html"},
                {"title": "org.apache.poi.sl.draw.SimpleSolidPaint.srgb2lin(float)", "text": "Convert sRGB float component [0..1] from sRGB to linear RGB [0..100000]", "tags": "METHOD", "url": "exp/srgb2lin.html"},
                {"title": "org.apache.poi.sl.draw.SimpleSolidPaint.lin2srgb(int)", "text": "Convert linear RGB [0..100000] to sRGB float component [0..1]", "tags": "METHOD", "url": "exp/lin2srgb.html"},
                {"title": "org.apache.poi.sl.draw.DrawPictureShape.getImageRenderer(Graphics2D, String)", "text": "Returns an ImageRenderer for the PictureData", "tags": "METHOD", "url": "exp/getImageRenderer.html"},
                {"title": "org.apache.poi.sl.draw.DrawPictureShape.resize()", "text": "Resize this picture to the default size", "tags": "METHOD", "url": "exp/resize.html"},
                {"title": "org.apache.poi.sl.draw.DrawPictureShape.resize(Rectangle2D)", "text": "Fit picture shape into the target rectangle, maintaining the aspect ratio and repositioning within the target rectangle with a centered alignment.", "tags": "METHOD", "url": "exp/resize.html"},
                {"title": "org.apache.poi.sl.draw.DrawPictureShape.resize(Rectangle2D, RectAlign)", "text": "Fit picture shape into the target rectangle, maintaining the aspect ratio", "tags": "METHOD", "url": "exp/resize.html"},
                {"title": "org.apache.poi.sl.draw.DrawShape.applyTransform(Graphics2D)", "text": "Apply 2-D transforms before drawing this shape. This includes rotation and flipping.", "tags": "METHOD", "url": "exp/applyTransform.html"},
                {"title": "org.apache.poi.sl.draw.DrawSheet.canDraw(Shape<?, ?>)", "text": "Checks if this  displays the specified shape", "tags": "METHOD", "url": "exp/canDraw.html"},
                {"title": "org.apache.poi.sl.draw.DrawTableShape.setAllBorders(Object)", "text": "Format the table and apply the specified Line to all cell boundaries,", "tags": "METHOD", "url": "exp/setAllBorders.html"},
                {"title": "org.apache.poi.sl.draw.DrawTableShape.setOutsideBorders(Object)", "text": "Format the outside border using the specified Line object", "tags": "METHOD", "url": "exp/setOutsideBorders.html"},
                {"title": "org.apache.poi.sl.draw.DrawTableShape.setInsideBorders(Object)", "text": "Format the inside border using the specified Line object", "tags": "METHOD", "url": "exp/setInsideBorders.html"},
                {"title": "org.apache.poi.sl.draw.DrawTableShape.setEdges(TableCell<?, ?>, BorderEdge[], Object)", "text": "Apply the border attributes (args) to the given cell and edges", "tags": "METHOD", "url": "exp/setEdges.html"},
                {"title": "org.apache.poi.sl.draw.XlinkAttribute.readResolve()", "text": "Resolves instances being deserialized to the predefined constants.", "tags": "METHOD", "url": "exp/readResolve.html"},
                {"title": "org.apache.poi.sl.draw.XlinkAttribute.setAutoNumberingIdx(int)", "text": "Sets the auto numbering index of the handled paragraph", "tags": "METHOD", "url": "exp/setAutoNumberingIdx.html"},
                {"title": "org.apache.poi.sl.draw.XlinkAttribute.breakText(Graphics2D)", "text": "break text into lines, each representing a line of text that fits in the wrapping width", "tags": "METHOD", "url": "exp/breakText.html"},
                {"title": "org.apache.poi.sl.draw.XlinkAttribute.tab2space(TextRun)", "text": "Replace a tab with the effective number of white spaces.", "tags": "METHOD", "url": "exp/tab2space.html"},
                {"title": "org.apache.poi.sl.draw.XlinkAttribute.getWrappingWidth(boolean, Graphics2D)", "text": "Returns wrapping width to break lines in this paragraph", "tags": "METHOD", "url": "exp/getWrappingWidth.html"},
                {"title": "org.apache.poi.sl.draw.AttributedStringData.getParagraphShape()", "text": "Helper method for paint style relative to bounds, e.g. gradient paint", "tags": "METHOD", "url": "exp/getParagraphShape.html"},
                {"title": "org.apache.poi.sl.draw.AttributedStringData.mapFontCharset(String, String)", "text": "Map text charset depending on font family. Currently this only maps for wingdings font (into unicode private use area)", "tags": "METHOD", "url": "exp/mapFontCharset.html"},
                {"title": "org.apache.poi.sl.draw.DrawTextShape.drawParagraphs(Graphics2D, double, double)", "text": "paint the paragraphs starting from top left (x,y)", "tags": "METHOD", "url": "exp/drawParagraphs.html"},
                {"title": "org.apache.poi.sl.draw.DrawTextShape.getTextHeight()", "text": "Compute the cumulative height occupied by the text", "tags": "METHOD", "url": "exp/getTextHeight.html"},
                {"title": "org.apache.poi.sl.draw.DrawTextShape.getTextHeight(Graphics2D)", "text": "Compute the cumulative height occupied by the text", "tags": "METHOD", "url": "exp/getTextHeight.html"},
                {"title": "org.apache.poi.sl.draw.geom.Path.getPath(Context)", "text": "Convert the internal represenation to java.awt.geom.Path2D", "tags": "METHOD", "url": "exp/getPath.html"},
                {"title": "org.apache.poi.sl.draw.geom.PathCommand.execute(Path2D.Double, Context)", "text": "Execute the command an append a segment to the specified path", "tags": "METHOD", "url": "exp/execute.html"},
                {"title": "org.apache.poi.sl.draw.geom.PresetGeometries.convertCustomGeometry(XMLStreamReader)", "text": "Convert a single CustomGeometry object, i.e. from xmlbeans", "tags": "METHOD", "url": "exp/convertCustomGeometry.html"},
                {"title": "org.apache.poi.sl.draw.ImageRenderer.loadImage(InputStream, String)", "text": "Load and buffer the image", "tags": "METHOD", "url": "exp/loadImage.html"},
                {"title": "org.apache.poi.sl.draw.ImageRenderer.loadImage(byte[], String)", "text": "Load and buffer the image", "tags": "METHOD", "url": "exp/loadImage.html"},
                {"title": "org.apache.poi.sl.draw.ImageRenderer.drawImage(Graphics2D, Rectangle2D)", "text": "Render picture data into the supplied graphics", "tags": "METHOD", "url": "exp/drawImage.html"},
                {"title": "org.apache.poi.sl.draw.ImageRenderer.drawImage(Graphics2D, Rectangle2D, Insets)", "text": "Render picture data into the supplied graphics", "tags": "METHOD", "url": "exp/drawImage.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getFont()", "text": "Gets the current font.", "tags": "METHOD", "url": "exp/getFont.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setFont(Font)", "text": "Sets this graphics context's font to the specified font", "tags": "METHOD", "url": "exp/setFont.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getColor()", "text": "Gets this graphics context's current color.", "tags": "METHOD", "url": "exp/getColor.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setColor(Color)", "text": "Sets this graphics context's current color to the specified", "tags": "METHOD", "url": "exp/setColor.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getStroke()", "text": "Returns the current  in the", "tags": "METHOD", "url": "exp/getStroke.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setStroke(Stroke)", "text": "Sets the  for the  context. during the rendering process", "tags": "METHOD", "url": "exp/setStroke.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getPaint()", "text": "Returns the current  of the", "tags": "METHOD", "url": "exp/getPaint.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setPaint(Paint)", "text": "Sets the  attribute for the", "tags": "METHOD", "url": "exp/setPaint.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getTransform()", "text": "Returns a copy of the current  in the", "tags": "METHOD", "url": "exp/getTransform.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setTransform(AffineTransform)", "text": "Sets the  in the", "tags": "METHOD", "url": "exp/setTransform.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.draw(Shape)", "text": "Strokes the outline of a  using the settings of the", "tags": "METHOD", "url": "exp/draw.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawString(String, float, float)", "text": "Renders the text specified by the specified ,", "tags": "METHOD", "url": "exp/drawString.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.fill(Shape)", "text": "Fills the interior of a  using the settings of the", "tags": "METHOD", "url": "exp/fill.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.translate(int, int)", "text": "Translates the origin of the graphics context to the point", "tags": "METHOD", "url": "exp/translate.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.clip(Shape)", "text": "Intersects the current  with the interior of the", "tags": "METHOD", "url": "exp/clip.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getClip()", "text": "Gets the current clipping area", "tags": "METHOD", "url": "exp/getClip.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.scale(double, double)", "text": "Concatenates the current", "tags": "METHOD", "url": "exp/scale.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawRoundRect(int, int, int, int, int, int)", "text": "Draws an outlined round-cornered rectangle using this graphics", "tags": "METHOD", "url": "exp/drawRoundRect.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawString(String, int, int)", "text": "Draws the text given by the specified string, using this", "tags": "METHOD", "url": "exp/drawString.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.fillOval(int, int, int, int)", "text": "Fills an oval bounded by the specified rectangle with the", "tags": "METHOD", "url": "exp/fillOval.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.fillRoundRect(int, int, int, int, int, int)", "text": "Fills the specified rounded corner rectangle with the current color", "tags": "METHOD", "url": "exp/fillRoundRect.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.fillArc(int, int, int, int, int, int)", "text": "Fills a circular or elliptical arc covering the specified rectangle", "tags": "METHOD", "url": "exp/fillArc.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawArc(int, int, int, int, int, int)", "text": "Draws the outline of a circular or elliptical arc", "tags": "METHOD", "url": "exp/drawArc.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawPolyline(int[], int[], int)", "text": "Draws a sequence of connected lines defined by", "tags": "METHOD", "url": "exp/drawPolyline.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawOval(int, int, int, int)", "text": "Draws the outline of an oval", "tags": "METHOD", "url": "exp/drawOval.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawImage(Image, int, int, Color, ImageObserver)", "text": "Draws as much of the specified image as is currently available", "tags": "METHOD", "url": "exp/drawImage.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawImage(Image, int, int, int, int, Color, ImageObserver)", "text": "Draws as much of the specified image as has already been scaled", "tags": "METHOD", "url": "exp/drawImage.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawImage(Image, int, int, int, int, int, int, int, int, ImageObserver)", "text": "Draws as much of the specified area of the specified image as is", "tags": "METHOD", "url": "exp/drawImage.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawImage(Image, int, int, int, int, int, int, int, int, Color, ImageObserver)", "text": "Draws as much of the specified area of the specified image as is", "tags": "METHOD", "url": "exp/drawImage.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawImage(Image, int, int, ImageObserver)", "text": "Draws as much of the specified image as is currently available", "tags": "METHOD", "url": "exp/drawImage.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.dispose()", "text": "Disposes of this graphics context and releases", "tags": "METHOD", "url": "exp/dispose.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawLine(int, int, int, int)", "text": "Draws a line, using the current color, between the points", "tags": "METHOD", "url": "exp/drawLine.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.fillPolygon(int[], int[], int)", "text": "Fills a closed polygon defined by", "tags": "METHOD", "url": "exp/fillPolygon.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.fillRect(int, int, int, int)", "text": "Fills the specified rectangle", "tags": "METHOD", "url": "exp/fillRect.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawRect(int, int, int, int)", "text": "Draws the outline of the specified rectangle", "tags": "METHOD", "url": "exp/drawRect.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawPolygon(int[], int[], int)", "text": "Draws a closed polygon defined by", "tags": "METHOD", "url": "exp/drawPolygon.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.clipRect(int, int, int, int)", "text": "Intersects the current clip with the specified rectangle", "tags": "METHOD", "url": "exp/clipRect.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setClip(Shape)", "text": "Sets the current clipping area to an arbitrary clip shape", "tags": "METHOD", "url": "exp/setClip.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getClipBounds()", "text": "Returns the bounding rectangle of the current clipping area", "tags": "METHOD", "url": "exp/getClipBounds.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawString(AttributedCharacterIterator, int, int)", "text": "Draws the text given by the specified iterator, using this", "tags": "METHOD", "url": "exp/drawString.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.clearRect(int, int, int, int)", "text": "Clears the specified rectangle by filling it with the background", "tags": "METHOD", "url": "exp/clearRect.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setClip(int, int, int, int)", "text": "Sets the current clip to the rectangle specified by the given", "tags": "METHOD", "url": "exp/setClip.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.rotate(double)", "text": "Concatenates the current", "tags": "METHOD", "url": "exp/rotate.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.rotate(double, double, double)", "text": "Concatenates the current", "tags": "METHOD", "url": "exp/rotate.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.shear(double, double)", "text": "Concatenates the current", "tags": "METHOD", "url": "exp/shear.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getFontRenderContext()", "text": "Get the rendering context of the  within this", "tags": "METHOD", "url": "exp/getFontRenderContext.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.transform(AffineTransform)", "text": "Composes an  object with the", "tags": "METHOD", "url": "exp/transform.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawImage(BufferedImage, BufferedImageOp, int, int)", "text": "Renders a  that is", "tags": "METHOD", "url": "exp/drawImage.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setBackground(Color)", "text": "Sets the background color for the  context", "tags": "METHOD", "url": "exp/setBackground.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getBackground()", "text": "Returns the background color used for clearing a region. which defines the background color.", "tags": "METHOD", "url": "exp/getBackground.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setComposite(Composite)", "text": "Sets the  for the  context", "tags": "METHOD", "url": "exp/setComposite.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getComposite()", "text": "Returns the current  in the", "tags": "METHOD", "url": "exp/getComposite.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getRenderingHint(RenderingHints.Key)", "text": "Returns the value of a single preference for the rendering algorithms", "tags": "METHOD", "url": "exp/getRenderingHint.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setRenderingHint(RenderingHints.Key, Object)", "text": "Sets the value of a single preference for the rendering algorithms", "tags": "METHOD", "url": "exp/setRenderingHint.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawGlyphVector(GlyphVector, float, float)", "text": "Renders the text of the specified", "tags": "METHOD", "url": "exp/drawGlyphVector.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getDeviceConfiguration()", "text": "Returns the device configuration associated with this .", "tags": "METHOD", "url": "exp/getDeviceConfiguration.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.addRenderingHints(Map<?, ?>)", "text": "Sets the values of an arbitrary number of preferences for the", "tags": "METHOD", "url": "exp/addRenderingHints.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.translate(double, double)", "text": "Concatenates the current", "tags": "METHOD", "url": "exp/translate.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawString(AttributedCharacterIterator, float, float)", "text": "Renders the text of the specified iterator, using the", "tags": "METHOD", "url": "exp/drawString.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.hit(Rectangle, Shape, boolean)", "text": "Checks whether or not the specified  intersects", "tags": "METHOD", "url": "exp/hit.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getRenderingHints()", "text": "Gets the preferences for the rendering algorithms", "tags": "METHOD", "url": "exp/getRenderingHints.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setRenderingHints(Map<?, ?>)", "text": "Replaces the values of all preferences for the rendering", "tags": "METHOD", "url": "exp/setRenderingHints.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawImage(Image, AffineTransform, ImageObserver)", "text": "Renders an image, applying a transform from image space into user space", "tags": "METHOD", "url": "exp/drawImage.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawImage(Image, int, int, int, int, ImageObserver)", "text": "Draws as much of the specified image as has already been scaled", "tags": "METHOD", "url": "exp/drawImage.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.create()", "text": "Creates a new  object that is", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.getFontMetrics(Font)", "text": "Gets the font metrics for the specified font.", "tags": "METHOD", "url": "exp/getFontMetrics.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setXORMode(Color)", "text": "Sets the paint mode of this graphics context to alternate between", "tags": "METHOD", "url": "exp/setXORMode.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.setPaintMode()", "text": "Sets the paint mode of this graphics context to overwrite the", "tags": "METHOD", "url": "exp/setPaintMode.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawRenderedImage(RenderedImage, AffineTransform)", "text": "Renders a", "tags": "METHOD", "url": "exp/drawRenderedImage.html"},
                {"title": "org.apache.poi.sl.draw.SLGraphics.drawRenderableImage(RenderableImage, AffineTransform)", "text": "Renders a {@link RenderedImage},", "tags": "METHOD", "url": "exp/drawRenderableImage.html"},
                {"title": "org.apache.poi.sl.image.ImageHeaderWMF.getChecksum()", "text": "Returns a checksum value for the previous 10 shorts in the header. The checksum is calculated by XORing each short value to an initial value of 0:", "tags": "METHOD", "url": "exp/getChecksum.html"},
                {"title": "org.apache.poi.sl.usermodel.ColorStyle.getAlpha()", "text": "the opacity as expressed by a percentage value or -1 if the value is not set", "tags": "METHOD", "url": "exp/getAlpha.html"},
                {"title": "org.apache.poi.sl.usermodel.ColorStyle.getHueOff()", "text": "the hue shift as expressed by a percentage relative to the input color", "tags": "METHOD", "url": "exp/getHueOff.html"},
                {"title": "org.apache.poi.sl.usermodel.ColorStyle.getHueMod()", "text": "the hue as expressed by a percentage relative to the input color", "tags": "METHOD", "url": "exp/getHueMod.html"},
                {"title": "org.apache.poi.sl.usermodel.ColorStyle.getSatOff()", "text": "the saturation shift as expressed by a percentage relative to the input color", "tags": "METHOD", "url": "exp/getSatOff.html"},
                {"title": "org.apache.poi.sl.usermodel.ColorStyle.getSatMod()", "text": "the saturation as expressed by a percentage relative to the input color", "tags": "METHOD", "url": "exp/getSatMod.html"},
                {"title": "org.apache.poi.sl.usermodel.ColorStyle.getLumOff()", "text": "the luminance shift as expressed by a percentage relative to the input color", "tags": "METHOD", "url": "exp/getLumOff.html"},
                {"title": "org.apache.poi.sl.usermodel.ColorStyle.getLumMod()", "text": "the luminance as expressed by a percentage relative to the input color", "tags": "METHOD", "url": "exp/getLumMod.html"},
                {"title": "org.apache.poi.sl.usermodel.ColorStyle.getShade()", "text": "specifies a darker version of its input color", "tags": "METHOD", "url": "exp/getShade.html"},
                {"title": "org.apache.poi.sl.usermodel.ColorStyle.getTint()", "text": "specifies a lighter version of its input color", "tags": "METHOD", "url": "exp/getTint.html"},
                {"title": "org.apache.poi.sl.usermodel.FreeformShape.getPath()", "text": "Gets the shape path.", "tags": "METHOD", "url": "exp/getPath.html"},
                {"title": "org.apache.poi.sl.usermodel.FreeformShape.setPath(Path2D.Double)", "text": "Set the shape path", "tags": "METHOD", "url": "exp/setPath.html"},
                {"title": "org.apache.poi.sl.usermodel.GroupShape.getInteriorAnchor()", "text": "Gets the coordinate space of this group.  All children are constrained to these coordinates.", "tags": "METHOD", "url": "exp/getInteriorAnchor.html"},
                {"title": "org.apache.poi.sl.usermodel.GroupShape.setInteriorAnchor(Rectangle2D)", "text": "Sets the coordinate space of this group.  All children are constrained to these coordinates.", "tags": "METHOD", "url": "exp/setInteriorAnchor.html"},
                {"title": "org.apache.poi.sl.usermodel.Hyperlink.linkToEmail(String)", "text": "Link to an email", "tags": "METHOD", "url": "exp/linkToEmail.html"},
                {"title": "org.apache.poi.sl.usermodel.Hyperlink.linkToUrl(String)", "text": "Link to a web page  URL", "tags": "METHOD", "url": "exp/linkToUrl.html"},
                {"title": "org.apache.poi.sl.usermodel.Hyperlink.linkToSlide(Slide<S, P>)", "text": "Link to a slide in this slideshow", "tags": "METHOD", "url": "exp/linkToSlide.html"},
                {"title": "org.apache.poi.sl.usermodel.Hyperlink.linkToNextSlide()", "text": "Link to the next slide (relative from the current)", "tags": "METHOD", "url": "exp/linkToNextSlide.html"},
                {"title": "org.apache.poi.sl.usermodel.Hyperlink.linkToPreviousSlide()", "text": "Link to the previous slide (relative from the current)", "tags": "METHOD", "url": "exp/linkToPreviousSlide.html"},
                {"title": "org.apache.poi.sl.usermodel.Hyperlink.linkToFirstSlide()", "text": "Link to the first slide in this slideshow", "tags": "METHOD", "url": "exp/linkToFirstSlide.html"},
                {"title": "org.apache.poi.sl.usermodel.Hyperlink.linkToLastSlide()", "text": "Link to the last slide in this slideshow", "tags": "METHOD", "url": "exp/linkToLastSlide.html"},
                {"title": "org.apache.poi.sl.usermodel.Insets2D.set(double, double, double, double)", "text": "Set top, left, bottom, and right to the specified values", "tags": "METHOD", "url": "exp/set.html"},
                {"title": "org.apache.poi.sl.usermodel.Insets2D.equals(Object)", "text": "Checks whether two insets objects are equal", "tags": "METHOD", "url": "exp/equals.html"},
                {"title": "org.apache.poi.sl.usermodel.Insets2D.hashCode()", "text": "Returns the hash code for this Insets.", "tags": "METHOD", "url": "exp/hashCode.html"},
                {"title": "org.apache.poi.sl.usermodel.Insets2D.toString()", "text": "Returns a string representation of this  object", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.sl.usermodel.Insets2D.clone()", "text": "Create a copy of this object.", "tags": "METHOD", "url": "exp/clone.html"},
                {"title": "org.apache.poi.sl.usermodel.PictureData.getContentType()", "text": "Returns content type (mime type) of this picture.", "tags": "METHOD", "url": "exp/getContentType.html"},
                {"title": "org.apache.poi.sl.usermodel.PictureData.getData()", "text": "Returns the binary data of this Picture", "tags": "METHOD", "url": "exp/getData.html"},
                {"title": "org.apache.poi.sl.usermodel.PictureData.setData(byte[])", "text": "Sets the binary picture data", "tags": "METHOD", "url": "exp/setData.html"},
                {"title": "org.apache.poi.sl.usermodel.PictureData.getChecksum()", "text": "Gets the checksum - the checksum can be of various length - mostly it's 8 (XSLF) or 16 (HSLF) bytes long.", "tags": "METHOD", "url": "exp/getChecksum.html"},
                {"title": "org.apache.poi.sl.usermodel.PictureData.getImageDimension()", "text": "Return the original image dimensions in points", "tags": "METHOD", "url": "exp/getImageDimension.html"},
                {"title": "org.apache.poi.sl.usermodel.PictureData.getImageDimensionInPixels()", "text": "Return the original image dimensions in pixels", "tags": "METHOD", "url": "exp/getImageDimensionInPixels.html"},
                {"title": "org.apache.poi.sl.usermodel.PictureShape.getPictureData()", "text": "Returns the picture data for this picture.", "tags": "METHOD", "url": "exp/getPictureData.html"},
                {"title": "org.apache.poi.sl.usermodel.PictureShape.getClipping()", "text": "Returns the clipping values as percent ratio relatively to the image size. The clipping are returned as insets convertedscaled to 100000 (=100%).", "tags": "METHOD", "url": "exp/getClipping.html"},
                {"title": "org.apache.poi.sl.usermodel.PlaceableShape.getAnchor()", "text": "The coordinates are expressed in points", "tags": "METHOD", "url": "exp/getAnchor.html"},
                {"title": "org.apache.poi.sl.usermodel.PlaceableShape.setAnchor(Rectangle2D)", "text": "The coordinates are expressed in points", "tags": "METHOD", "url": "exp/setAnchor.html"},
                {"title": "org.apache.poi.sl.usermodel.PlaceableShape.getRotation()", "text": "Rotation angle in degrees", "tags": "METHOD", "url": "exp/getRotation.html"},
                {"title": "org.apache.poi.sl.usermodel.PlaceableShape.setRotation(double)", "text": "Rotate this shape.", "tags": "METHOD", "url": "exp/setRotation.html"},
                {"title": "org.apache.poi.sl.usermodel.PlaceableShape.setFlipVertical(boolean)", "text": "Whether the shape is vertically flipped", "tags": "METHOD", "url": "exp/setFlipVertical.html"},
                {"title": "org.apache.poi.sl.usermodel.PlaceableShape.getFlipHorizontal()", "text": "Whether the shape is horizontally flipped", "tags": "METHOD", "url": "exp/getFlipHorizontal.html"},
                {"title": "org.apache.poi.sl.usermodel.PlaceableShape.getFlipVertical()", "text": "Whether the shape is vertically flipped", "tags": "METHOD", "url": "exp/getFlipVertical.html"},
                {"title": "org.apache.poi.sl.usermodel.PlaceableShape.toString()", "text": "The string representation, which corresponds to the internal XML enum value", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.sl.usermodel.Shadow.getBlur()", "text": "TODO: figure out how to make sense of this property when rendering shadows", "tags": "METHOD", "url": "exp/getBlur.html"},
                {"title": "org.apache.poi.sl.usermodel.Shadow.getFillStyle()", "text": "Depending whether the parent shape is filled or stroked, this color is used to fill or stroke this shadow", "tags": "METHOD", "url": "exp/getFillStyle.html"},
                {"title": "org.apache.poi.sl.usermodel.Shape.getAnchor()", "text": "Returns the anchor (the bounding box rectangle) of this shape. All coordinates are expressed in points (72 dpi).", "tags": "METHOD", "url": "exp/getAnchor.html"},
                {"title": "org.apache.poi.sl.usermodel.Shape.draw(Graphics2D, Rectangle2D)", "text": "Convenience method to draw a single shape if null, the bounds of the shape are used.", "tags": "METHOD", "url": "exp/draw.html"},
                {"title": "org.apache.poi.sl.usermodel.ShapeContainer.getShapes()", "text": "Returns an list containing all of the elements in this container in proper", "tags": "METHOD", "url": "exp/getShapes.html"},
                {"title": "org.apache.poi.sl.usermodel.ShapeContainer.removeShape(S)", "text": "Removes the specified shape from this sheet, if it is present", "tags": "METHOD", "url": "exp/removeShape.html"},
                {"title": "org.apache.poi.sl.usermodel.ShapeContainer.createAutoShape()", "text": "create a new shape with a predefined geometry and add it to this shape container", "tags": "METHOD", "url": "exp/createAutoShape.html"},
                {"title": "org.apache.poi.sl.usermodel.ShapeContainer.createFreeform()", "text": "create a new shape with a custom geometry", "tags": "METHOD", "url": "exp/createFreeform.html"},
                {"title": "org.apache.poi.sl.usermodel.ShapeContainer.createTextBox()", "text": "create a text box", "tags": "METHOD", "url": "exp/createTextBox.html"},
                {"title": "org.apache.poi.sl.usermodel.ShapeContainer.createConnector()", "text": "create a connector", "tags": "METHOD", "url": "exp/createConnector.html"},
                {"title": "org.apache.poi.sl.usermodel.ShapeContainer.createGroup()", "text": "create a group of shapes belonging to this container", "tags": "METHOD", "url": "exp/createGroup.html"},
                {"title": "org.apache.poi.sl.usermodel.ShapeContainer.createPicture(PictureData)", "text": "create a picture belonging to this container", "tags": "METHOD", "url": "exp/createPicture.html"},
                {"title": "org.apache.poi.sl.usermodel.ShapeContainer.createTable(int, int)", "text": "Create a new Table of the given number of rows and columns", "tags": "METHOD", "url": "exp/createTable.html"},
                {"title": "org.apache.poi.sl.usermodel.ShapeContainer.getOoxmlName()", "text": "name of the presetShapeDefinit(i)on entry", "tags": "METHOD", "url": "exp/getOoxmlName.html"},
                {"title": "org.apache.poi.sl.usermodel.Sheet.getFollowMasterGraphics()", "text": "Sheets that support the notion of master (slide, slideLayout) should override it and check this setting in the sheet XML", "tags": "METHOD", "url": "exp/getFollowMasterGraphics.html"},
                {"title": "org.apache.poi.sl.usermodel.Sheet.draw(Graphics2D)", "text": "Convenience method to draw a sheet to a graphics context", "tags": "METHOD", "url": "exp/draw.html"},
                {"title": "org.apache.poi.sl.usermodel.SimpleShape.setStrokeStyle(Object)", "text": "Sets the line attributes", "tags": "METHOD", "url": "exp/setStrokeStyle.html"},
                {"title": "org.apache.poi.sl.usermodel.SimpleShape.setPlaceholder(Placeholder)", "text": "Specifies that the corresponding shape should be represented by the generating application", "tags": "METHOD", "url": "exp/setPlaceholder.html"},
                {"title": "org.apache.poi.sl.usermodel.SimpleShape.getFillColor()", "text": "Returns the solid color fill. is not solid (pattern or gradient)", "tags": "METHOD", "url": "exp/getFillColor.html"},
                {"title": "org.apache.poi.sl.usermodel.SimpleShape.setFillColor(Color)", "text": "Specifies a solid color fill", "tags": "METHOD", "url": "exp/setFillColor.html"},
                {"title": "org.apache.poi.sl.usermodel.SimpleShape.getHyperlink()", "text": "Returns the hyperlink assigned to this shape or  if not found.", "tags": "METHOD", "url": "exp/getHyperlink.html"},
                {"title": "org.apache.poi.sl.usermodel.SimpleShape.createHyperlink()", "text": "Creates a hyperlink and asigns it to this shape. If the shape has already a hyperlink assigned, return it instead", "tags": "METHOD", "url": "exp/createHyperlink.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShow.getSlideMasters()", "text": "Returns all slide masters. This doesn't include notes master and other arbitrary masters.", "tags": "METHOD", "url": "exp/getSlideMasters.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShow.getPageSize()", "text": "Returns the current page size", "tags": "METHOD", "url": "exp/getPageSize.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShow.setPageSize(Dimension)", "text": "Change the current page size", "tags": "METHOD", "url": "exp/setPageSize.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShow.getPictureData()", "text": "Returns all Pictures of this slideshow. The returned {@link List} is unmodifiable.", "tags": "METHOD", "url": "exp/getPictureData.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShow.addPicture(byte[], PictureType)", "text": "Adds a picture to the presentation.", "tags": "METHOD", "url": "exp/addPicture.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShow.addPicture(InputStream, PictureType)", "text": "Adds a picture to the presentation.", "tags": "METHOD", "url": "exp/addPicture.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShow.addPicture(File, PictureType)", "text": "Adds a picture to the presentation.", "tags": "METHOD", "url": "exp/addPicture.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShow.findPictureData(byte[])", "text": "check if a picture with this picture data already exists in this presentation", "tags": "METHOD", "url": "exp/findPictureData.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShow.write(OutputStream)", "text": "Writes out the slideshow file the is represented by an instance of this", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShowFactory.create(NPOIFSFileSystem)", "text": "Creates a SlideShow from the given NPOIFSFileSystem.", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShowFactory.create(NPOIFSFileSystem, String)", "text": "Creates a SlideShow from the given NPOIFSFileSystem, which may be password protected", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShowFactory.create(InputStream)", "text": "Creates the appropriate HSLFSlideShow  XMLSlideShow from", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShowFactory.create(InputStream, String)", "text": "Creates the appropriate HSLFSlideShow  XMLSlideShow from the given InputStream, which may be password protected.", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShowFactory.create(File)", "text": "Creates the appropriate HSLFSlideShow  XMLSlideShow from", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShowFactory.create(File, String)", "text": "Creates the appropriate HSLFSlideShow  XMLSlideShow from", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.sl.usermodel.SlideShowFactory.create(File, String, boolean)", "text": "Creates the appropriate HSLFSlideShow  XMLSlideShow from", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.sl.usermodel.TableCell.getBorderStyle(BorderEdge)", "text": "Return line style of given edge or {@code null} if border is not defined", "tags": "METHOD", "url": "exp/getBorderStyle.html"},
                {"title": "org.apache.poi.sl.usermodel.TableCell.setBorderStyle(BorderEdge, StrokeStyle)", "text": "Sets the {@link StrokeStyle} of the given border edge. A {@code null} property of the style is ignored.", "tags": "METHOD", "url": "exp/setBorderStyle.html"},
                {"title": "org.apache.poi.sl.usermodel.TableCell.setBorderWidth(BorderEdge, double)", "text": "Convenience method for setting the border width.", "tags": "METHOD", "url": "exp/setBorderWidth.html"},
                {"title": "org.apache.poi.sl.usermodel.TableCell.setBorderColor(BorderEdge, Color)", "text": "Convenience method for setting the border color.", "tags": "METHOD", "url": "exp/setBorderColor.html"},
                {"title": "org.apache.poi.sl.usermodel.TableCell.setBorderCompound(BorderEdge, LineCompound)", "text": "Convenience method for setting the border line compound.", "tags": "METHOD", "url": "exp/setBorderCompound.html"},
                {"title": "org.apache.poi.sl.usermodel.TableCell.setBorderDash(BorderEdge, LineDash)", "text": "Convenience method for setting the border line dash.", "tags": "METHOD", "url": "exp/setBorderDash.html"},
                {"title": "org.apache.poi.sl.usermodel.TableCell.removeBorder(BorderEdge)", "text": "Remove all line attributes of the given border edge", "tags": "METHOD", "url": "exp/removeBorder.html"},
                {"title": "org.apache.poi.sl.usermodel.TableCell.getGridSpan()", "text": "Get the number of columns to be spannedmerged", "tags": "METHOD", "url": "exp/getGridSpan.html"},
                {"title": "org.apache.poi.sl.usermodel.TableCell.getRowSpan()", "text": "Get the number of rows to be spannedmerged", "tags": "METHOD", "url": "exp/getRowSpan.html"},
                {"title": "org.apache.poi.sl.usermodel.TableCell.isMerged()", "text": "Return if this cell is part of a merged cell. The topleft cell of a merged region is not regarded as merged - its grid andor row span is greater than one.", "tags": "METHOD", "url": "exp/isMerged.html"},
                {"title": "org.apache.poi.sl.usermodel.TableShape.getNumberOfColumns()", "text": "Return the maximum number of columns. If the table contains merged cells, the number of columns might be less than the maximum.", "tags": "METHOD", "url": "exp/getNumberOfColumns.html"},
                {"title": "org.apache.poi.sl.usermodel.TableShape.getNumberOfRows()", "text": "Return the number of rows", "tags": "METHOD", "url": "exp/getNumberOfRows.html"},
                {"title": "org.apache.poi.sl.usermodel.TableShape.getCell(int, int)", "text": "Gets a cell a merged cell or if the index is out of bounds", "tags": "METHOD", "url": "exp/getCell.html"},
                {"title": "org.apache.poi.sl.usermodel.TableShape.getColumnWidth(int)", "text": "Gets the width (in points) of the n-th column", "tags": "METHOD", "url": "exp/getColumnWidth.html"},
                {"title": "org.apache.poi.sl.usermodel.TableShape.setColumnWidth(int, double)", "text": "Sets the width (in points) of the n-th column", "tags": "METHOD", "url": "exp/setColumnWidth.html"},
                {"title": "org.apache.poi.sl.usermodel.TableShape.getRowHeight(int)", "text": "Gets the row height", "tags": "METHOD", "url": "exp/getRowHeight.html"},
                {"title": "org.apache.poi.sl.usermodel.TableShape.setRowHeight(int, double)", "text": "Sets the row height.", "tags": "METHOD", "url": "exp/setRowHeight.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.getBulletFontSize()", "text": "The bullet point font size", "tags": "METHOD", "url": "exp/getBulletFontSize.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.setBulletFontColor(Color)", "text": "Convenience function to set a solid color", "tags": "METHOD", "url": "exp/setBulletFontColor.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.getBulletFontColor()", "text": "A {@code null} value means to use the text font color.", "tags": "METHOD", "url": "exp/getBulletFontColor.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.getAutoNumberingStartAt()", "text": "Index (1-based) of the first auto number value, or null if auto numbering scheme wasn't assigned.", "tags": "METHOD", "url": "exp/getAutoNumberingStartAt.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.getSpaceBefore()", "text": "The amount of vertical white space before the paragraph", "tags": "METHOD", "url": "exp/getSpaceBefore.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.setSpaceBefore(Double)", "text": "Set the amount of vertical white space that will be present before the paragraph", "tags": "METHOD", "url": "exp/setSpaceBefore.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.getSpaceAfter()", "text": "The amount of vertical white space after the paragraph", "tags": "METHOD", "url": "exp/getSpaceAfter.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.setSpaceAfter(Double)", "text": "Set the amount of vertical white space that will be present after the paragraph", "tags": "METHOD", "url": "exp/setSpaceAfter.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.setLeftMargin(Double)", "text": "Specifies the left margin of the paragraph", "tags": "METHOD", "url": "exp/setLeftMargin.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.getRightMargin()", "text": "Specifies the right margin of the paragraph", "tags": "METHOD", "url": "exp/getRightMargin.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.getIndent()", "text": "or null, if unset", "tags": "METHOD", "url": "exp/getIndent.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.setIndent(Double)", "text": "Specifies the indent size that will be applied to the first line of text in the paragraph.", "tags": "METHOD", "url": "exp/setIndent.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.setIndentLevel(int)", "text": "Specifies the particular level text properties that this paragraph will follow", "tags": "METHOD", "url": "exp/setIndentLevel.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.getLineSpacing()", "text": "Returns the vertical line spacing that is to be used within a paragraph", "tags": "METHOD", "url": "exp/getLineSpacing.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.setLineSpacing(Double)", "text": "This element specifies the vertical line spacing that is to be used within a paragraph", "tags": "METHOD", "url": "exp/setLineSpacing.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.getTextAlign()", "text": "Returns the alignment that is applied to the paragraph", "tags": "METHOD", "url": "exp/getTextAlign.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.setTextAlign(TextAlign)", "text": "Specifies the alignment that is to be applied to the paragraph", "tags": "METHOD", "url": "exp/setTextAlign.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.getFontAlign()", "text": "Returns the font alignment that is applied to the paragraph", "tags": "METHOD", "url": "exp/getFontAlign.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.setBulletStyle(Object)", "text": "Sets the bullet styles", "tags": "METHOD", "url": "exp/setBulletStyle.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.getTextRuns()", "text": "Fetch the text runs that are contained within this block of text", "tags": "METHOD", "url": "exp/getTextRuns.html"},
                {"title": "org.apache.poi.sl.usermodel.BulletStyle.isHeaderOrFooter()", "text": "Convenience method to determine if this text paragraph is part of the slide header or footer", "tags": "METHOD", "url": "exp/isHeaderOrFooter.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun.getFontColor()", "text": "Returns the font color. This usually returns a {@link SolidPaint}, but but also other classes are possible", "tags": "METHOD", "url": "exp/getFontColor.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun.setFontColor(Color)", "text": "Sets the (solid) font color - convenience function", "tags": "METHOD", "url": "exp/setFontColor.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun.setFontColor(PaintStyle)", "text": "Sets the font color", "tags": "METHOD", "url": "exp/setFontColor.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun.getFontSize()", "text": "Returns the font size which is either set directly on this text run or given from the slide layout", "tags": "METHOD", "url": "exp/getFontSize.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun.setFontSize(Double)", "text": "Sets the font size directly on this text run, if null is given, the font size defaults to the values given from the slide layout", "tags": "METHOD", "url": "exp/setFontSize.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun.setFontFamily(String)", "text": "Specifies the typeface, or name of the font that is to be used for this text run. The value of  unsets the Typeface attrubute from the underlying xml.", "tags": "METHOD", "url": "exp/setFontFamily.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun.setBold(boolean)", "text": "Sets the bold state", "tags": "METHOD", "url": "exp/setBold.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun.setItalic(boolean)", "text": "Sets the italic state", "tags": "METHOD", "url": "exp/setItalic.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun.setUnderlined(boolean)", "text": "Sets the underlined state", "tags": "METHOD", "url": "exp/setUnderlined.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun.setStrikethrough(boolean)", "text": "Sets the strikethrough state", "tags": "METHOD", "url": "exp/setStrikethrough.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun.getHyperlink()", "text": "Return the associated hyperlink", "tags": "METHOD", "url": "exp/getHyperlink.html"},
                {"title": "org.apache.poi.sl.usermodel.TextRun.createHyperlink()", "text": "Creates a new hyperlink and assigns it to this text run. If the text run has already a hyperlink assigned, return it instead", "tags": "METHOD", "url": "exp/createHyperlink.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.getText()", "text": "Returns the text contained in this text frame, which has been made safe for printing and other use.", "tags": "METHOD", "url": "exp/getText.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.setText(String)", "text": "Sets (overwrites) the current text", "tags": "METHOD", "url": "exp/setText.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.appendText(String, boolean)", "text": "Adds the supplied text onto the end of the TextParagraphs,", "tags": "METHOD", "url": "exp/appendText.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.setInsets(Insets2D)", "text": "Sets the shape margins", "tags": "METHOD", "url": "exp/setInsets.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.getTextHeight()", "text": "Compute the cumulative height occupied by the text", "tags": "METHOD", "url": "exp/getTextHeight.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.getVerticalAlignment()", "text": "Returns the type of vertical alignment for the text.", "tags": "METHOD", "url": "exp/getVerticalAlignment.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.setVerticalAlignment(VerticalAlignment)", "text": "Sets the type of vertical alignment for the text. A {@code null} values unsets this property.", "tags": "METHOD", "url": "exp/setVerticalAlignment.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.isHorizontalCentered()", "text": "Returns if the text is centered", "tags": "METHOD", "url": "exp/isHorizontalCentered.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.setHorizontalCentered(Boolean)", "text": "Sets if the paragraphs are horizontal centered A {@code null} values unsets this property.", "tags": "METHOD", "url": "exp/setHorizontalCentered.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.setTextDirection(TextDirection)", "text": "sets the vertical orientation", "tags": "METHOD", "url": "exp/setTextDirection.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.getTextRotation()", "text": "The text rotation can be independent specified from the shape rotation. For XSLF this can be an arbitrary degree, for HSLF the degree is given in steps of 90 degrees", "tags": "METHOD", "url": "exp/getTextRotation.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.setTextRotation(Double)", "text": "Sets the text rotation. For XSLF this can ben an arbitrary degree, for HSLF the rotation is rounded to next 90 degree step", "tags": "METHOD", "url": "exp/setTextRotation.html"},
                {"title": "org.apache.poi.sl.usermodel.TextShape.setTextPlaceholder(TextPlaceholder)", "text": "Sets the text placeholder", "tags": "METHOD", "url": "exp/setTextPlaceholder.html"},
                {"title": "org.apache.poi.ss.extractor.ExcelExtractor.setIncludeSheetNames(boolean)", "text": "Should sheet names be included? Default is true", "tags": "METHOD", "url": "exp/setIncludeSheetNames.html"},
                {"title": "org.apache.poi.ss.extractor.ExcelExtractor.setFormulasNotResults(boolean)", "text": "Should we return the formula itself, and not the result it produces? Default is false", "tags": "METHOD", "url": "exp/setFormulasNotResults.html"},
                {"title": "org.apache.poi.ss.extractor.ExcelExtractor.setIncludeHeadersFooters(boolean)", "text": "Should headers and footers be included in the output? Default is true", "tags": "METHOD", "url": "exp/setIncludeHeadersFooters.html"},
                {"title": "org.apache.poi.ss.extractor.ExcelExtractor.setIncludeCellComments(boolean)", "text": "Should cell comments be included? Default is false", "tags": "METHOD", "url": "exp/setIncludeCellComments.html"},
                {"title": "org.apache.poi.ss.extractor.ExcelExtractor.getText()", "text": "Retrieves the text contents of the file", "tags": "METHOD", "url": "exp/getText.html"},
                {"title": "org.apache.poi.ss.format.DatePartHandler.formatValue(StringBuffer, Object)", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/formatValue.html"},
                {"title": "org.apache.poi.ss.format.DatePartHandler.simpleValue(StringBuffer, Object)", "text": "{@inheritDoc} \"mmdy\"<tt>.", "tags": "METHOD", "url": "exp/simpleValue.html"},
                {"title": "org.apache.poi.ss.format.ElapsedPartHandler.formatValue(StringBuffer, Object)", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/formatValue.html"},
                {"title": "org.apache.poi.ss.format.ElapsedPartHandler.simpleValue(StringBuffer, Object)", "text": "{@inheritDoc} \"mmdy\"<tt>.", "tags": "METHOD", "url": "exp/simpleValue.html"},
                {"title": "org.apache.poi.ss.format.CellFormat.getInstance(String)", "text": "Returns a {@link CellFormat} that applies the given format.  Two calls with the same format may or may not return the same object.", "tags": "METHOD", "url": "exp/getInstance.html"},
                {"title": "org.apache.poi.ss.format.CellFormat.apply(Object)", "text": "Returns the result of applying the format to the given value", "tags": "METHOD", "url": "exp/apply.html"},
                {"title": "org.apache.poi.ss.format.CellFormat.apply(Date, double)", "text": "Returns the result of applying the format to the given date.", "tags": "METHOD", "url": "exp/apply.html"},
                {"title": "org.apache.poi.ss.format.CellFormat.apply(Cell)", "text": "Fetches the appropriate value from the cell, and returns the result of", "tags": "METHOD", "url": "exp/apply.html"},
                {"title": "org.apache.poi.ss.format.CellFormat.apply(JLabel, Object)", "text": "Uses the result of applying this format to the value, setting the text and color of a label before returning the result.", "tags": "METHOD", "url": "exp/apply.html"},
                {"title": "org.apache.poi.ss.format.CellFormat.apply(JLabel, Date, double)", "text": "Uses the result of applying this format to the given date, setting the text and color of a label before returning the result.", "tags": "METHOD", "url": "exp/apply.html"},
                {"title": "org.apache.poi.ss.format.CellFormat.apply(JLabel, Cell)", "text": "Fetches the appropriate value from the cell, and uses the result, setting the text and color of a label before returning the result.", "tags": "METHOD", "url": "exp/apply.html"},
                {"title": "org.apache.poi.ss.format.CellFormat.getApplicableFormatPart(Object)", "text": "Returns the {@link CellFormatPart} that applies to the value", "tags": "METHOD", "url": "exp/getApplicableFormatPart.html"},
                {"title": "org.apache.poi.ss.format.CellFormat.equals(Object)", "text": "Returns  if the other object is a {@link CellFormat} object with the same format.", "tags": "METHOD", "url": "exp/equals.html"},
                {"title": "org.apache.poi.ss.format.CellFormat.hashCode()", "text": "Returns a hash code for the format.", "tags": "METHOD", "url": "exp/hashCode.html"},
                {"title": "org.apache.poi.ss.format.CellFormatCondition.getInstance(String, String)", "text": "Returns an instance of a condition object. , <tt>\">\"\">=\"\"=\"\"==\"\"!=\"\"&lt;>\"\"12\"<tt>).", "tags": "METHOD", "url": "exp/getInstance.html"},
                {"title": "org.apache.poi.ss.format.CellFormatCondition.pass(double)", "text": "Returns  if the given value passes the constraint's test.", "tags": "METHOD", "url": "exp/pass.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.applies(Object)", "text": "Returns  if this format part applies to the given value", "tags": "METHOD", "url": "exp/applies.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.findGroup(Pattern, String, String)", "text": "Returns the number of the first group that is the same as the marker string. Starts from group 1.", "tags": "METHOD", "url": "exp/findGroup.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.getColor(Matcher)", "text": "Returns the color specification from the matcher, or  if there is none.", "tags": "METHOD", "url": "exp/getColor.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.getCondition(Matcher)", "text": "Returns the condition specification from the matcher, or  if there is none.", "tags": "METHOD", "url": "exp/getCondition.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.getCellFormatType(Matcher)", "text": "Returns the CellFormatType object implied by the format specification for the format part.", "tags": "METHOD", "url": "exp/getCellFormatType.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.getFormatter(Matcher)", "text": "Returns the formatter object implied by the format specification for the format part.", "tags": "METHOD", "url": "exp/getFormatter.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.formatType(String)", "text": "Returns the type of format.", "tags": "METHOD", "url": "exp/formatType.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.quoteSpecial(String, CellFormatType)", "text": "Returns a version of the original string that has any special characters", "tags": "METHOD", "url": "exp/quoteSpecial.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.apply(Object)", "text": "Apply this format part to the given value", "tags": "METHOD", "url": "exp/apply.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.apply(JLabel, Object)", "text": "Apply this format part to the given value, applying the result to the given label.", "tags": "METHOD", "url": "exp/apply.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.getCellFormatType()", "text": "Returns the CellFormatType object implied by the format specification for the format part.", "tags": "METHOD", "url": "exp/getCellFormatType.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.hasCondition()", "text": "Returns  if this format part has a condition.", "tags": "METHOD", "url": "exp/hasCondition.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.expandChar(String)", "text": "Expands a character", "tags": "METHOD", "url": "exp/expandChar.html"},
                {"title": "org.apache.poi.ss.format.PartHandler.group(Matcher, int)", "text": "Returns the string from the group, or  if the group is .", "tags": "METHOD", "url": "exp/group.html"},
                {"title": "org.apache.poi.ss.format.CellFormatter.formatValue(StringBuffer, Object)", "text": "Format a value according the format string.", "tags": "METHOD", "url": "exp/formatValue.html"},
                {"title": "org.apache.poi.ss.format.CellFormatter.simpleValue(StringBuffer, Object)", "text": "Format a value according to the type, in the most basic way.", "tags": "METHOD", "url": "exp/simpleValue.html"},
                {"title": "org.apache.poi.ss.format.CellFormatter.format(Object)", "text": "Formats the value, returning the resulting string.", "tags": "METHOD", "url": "exp/format.html"},
                {"title": "org.apache.poi.ss.format.CellFormatter.simpleFormat(Object)", "text": "Formats the value in the most basic way, returning the resulting string.", "tags": "METHOD", "url": "exp/simpleFormat.html"},
                {"title": "org.apache.poi.ss.format.CellFormatter.quote(String)", "text": "Returns the input string, surrounded by quotes.", "tags": "METHOD", "url": "exp/quote.html"},
                {"title": "org.apache.poi.ss.format.CellFormatter.isSpecial(char)", "text": "Returns  if the format is special and needs to be quoted.", "tags": "METHOD", "url": "exp/isSpecial.html"},
                {"title": "org.apache.poi.ss.format.CellFormatter.formatter(String)", "text": "Returns a new formatter of the appropriate type, for the given pattern. The pattern must be appropriate for the type.", "tags": "METHOD", "url": "exp/formatter.html"},
                {"title": "org.apache.poi.ss.format.CellGeneralFormatter.formatValue(StringBuffer, Object)", "text": "The general style is not quite the same as any other, or any combination of others.", "tags": "METHOD", "url": "exp/formatValue.html"},
                {"title": "org.apache.poi.ss.format.CellGeneralFormatter.simpleValue(StringBuffer, Object)", "text": "Equivalent to {@link #formatValue(StringBuffer,Object)}. {@inheritDoc}.", "tags": "METHOD", "url": "exp/simpleValue.html"},
                {"title": "org.apache.poi.ss.format.Special.formatValue(StringBuffer, Object)", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/formatValue.html"},
                {"title": "org.apache.poi.ss.format.Special.simpleValue(StringBuffer, Object)", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/simpleValue.html"},
                {"title": "org.apache.poi.ss.format.CellTextFormatter.formatValue(StringBuffer, Object)", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/formatValue.html"},
                {"title": "org.apache.poi.ss.format.CellTextFormatter.simpleValue(StringBuffer, Object)", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/simpleValue.html"},
                {"title": "org.apache.poi.ss.format.SimpleFraction.buildFractionExactDenominator(double, int)", "text": "Create a fraction given a double value and a denominator.", "tags": "METHOD", "url": "exp/buildFractionExactDenominator.html"},
                {"title": "org.apache.poi.ss.format.SimpleFraction.buildFractionMaxDenominator(double, int)", "text": "Create a fraction given the double value and either the maximum error", "tags": "METHOD", "url": "exp/buildFractionMaxDenominator.html"},
                {"title": "org.apache.poi.ss.format.SimpleFraction.buildFractionMaxDenominator(double, double, int, int)", "text": "Create a fraction given the double value and either the maximum error", "tags": "METHOD", "url": "exp/buildFractionMaxDenominator.html"},
                {"title": "org.apache.poi.ss.format.SimpleFraction.getDenominator()", "text": "Access the denominator.", "tags": "METHOD", "url": "exp/getDenominator.html"},
                {"title": "org.apache.poi.ss.format.SimpleFraction.getNumerator()", "text": "Access the numerator.", "tags": "METHOD", "url": "exp/getNumerator.html"},
                {"title": "org.apache.poi.ss.formula.atp.NotImplemented.getSupportedFunctionNames()", "text": "Returns a collection of ATP function names implemented by POI.", "tags": "METHOD", "url": "exp/getSupportedFunctionNames.html"},
                {"title": "org.apache.poi.ss.formula.atp.NotImplemented.getNotSupportedFunctionNames()", "text": "Returns a collection of ATP function names NOT implemented by POI.", "tags": "METHOD", "url": "exp/getNotSupportedFunctionNames.html"},
                {"title": "org.apache.poi.ss.formula.atp.NotImplemented.registerFunction(String, FreeRefFunction)", "text": "Register a ATP function in runtime.", "tags": "METHOD", "url": "exp/registerFunction.html"},
                {"title": "org.apache.poi.ss.formula.atp.ArgumentsEvaluator.evaluateDateArg(ValueEval, int, int)", "text": "Evaluate a generic {@link ValueEval} argument to a double value that represents a date in POI.", "tags": "METHOD", "url": "exp/evaluateDateArg.html"},
                {"title": "org.apache.poi.ss.formula.atp.ArgumentsEvaluator.evaluateDatesArg(ValueEval, int, int)", "text": "Evaluate a generic {@link ValueEval} argument to an array of double values that represents dates in POI.", "tags": "METHOD", "url": "exp/evaluateDatesArg.html"},
                {"title": "org.apache.poi.ss.formula.atp.ArgumentsEvaluator.evaluateNumberArg(ValueEval, int, int)", "text": "Evaluate a generic {@link ValueEval} argument to a double value.", "tags": "METHOD", "url": "exp/evaluateNumberArg.html"},
                {"title": "org.apache.poi.ss.formula.atp.DateParser.parseDate(String)", "text": "Parses a date from a string.", "tags": "METHOD", "url": "exp/parseDate.html"},
                {"title": "org.apache.poi.ss.formula.atp.NetworkdaysFunction.evaluate(ValueEval[], OperationEvaluationContext)", "text": "Evaluate for NETWORKDAYS. Given two dates and a optional date or interval of holidays, determines how many working days are there between those dates.", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.atp.RandBetween.evaluate(ValueEval[], OperationEvaluationContext)", "text": "Evaluate for RANDBETWEEN()", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.atp.WorkdayCalculator.calculateWorkdays(double, double, double[])", "text": "Calculate how many workdays are there between a start and an end date, as excel representations, considering a range of holidays.", "tags": "METHOD", "url": "exp/calculateWorkdays.html"},
                {"title": "org.apache.poi.ss.formula.atp.WorkdayCalculator.calculateWorkdays(double, int, double[])", "text": "Calculate the workday past x workdays from a starting date, considering a range of holidays.", "tags": "METHOD", "url": "exp/calculateWorkdays.html"},
                {"title": "org.apache.poi.ss.formula.atp.WorkdayCalculator.pastDaysOfWeek(double, double, int)", "text": "Calculates how many days of week past between a start and an end date.", "tags": "METHOD", "url": "exp/pastDaysOfWeek.html"},
                {"title": "org.apache.poi.ss.formula.atp.WorkdayCalculator.calculateNonWeekendHolidays(double, double, double[])", "text": "Calculates how many holidays in a list are workdays, considering an interval of dates.", "tags": "METHOD", "url": "exp/calculateNonWeekendHolidays.html"},
                {"title": "org.apache.poi.ss.formula.atp.WorkdayFunction.evaluate(ValueEval[], OperationEvaluationContext)", "text": "Evaluate for WORKDAY. Given a date, a number of days and a optional date or interval of holidays, determines which date it is past number of parametrized workdays.", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.atp.YearFracCalculator.shouldCountFeb29(SimpleDate, SimpleDate)", "text": "Assumes dates are no more than 1 year apart.", "tags": "METHOD", "url": "exp/shouldCountFeb29.html"},
                {"title": "org.apache.poi.ss.formula.atp.YearFracCalculator.dateDiff(long, long)", "text": "assumed to represent 12:00 midnight on the respective day.", "tags": "METHOD", "url": "exp/dateDiff.html"},
                {"title": "org.apache.poi.ss.formula.BaseFormulaEvaluator.setupEnvironment(String[], BaseFormulaEvaluator[])", "text": "Coordinates several formula evaluators together so that formulas that involve external", "tags": "METHOD", "url": "exp/setupEnvironment.html"},
                {"title": "org.apache.poi.ss.formula.BaseFormulaEvaluator.clearAllCachedResultValues()", "text": "Should be called whenever there are major changes (e", "tags": "METHOD", "url": "exp/clearAllCachedResultValues.html"},
                {"title": "org.apache.poi.ss.formula.BaseFormulaEvaluator.evaluate(Cell)", "text": "If cell contains a formula, the formula is evaluated and returned,", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.BaseFormulaEvaluator.evaluateInCell(Cell)", "text": "If cell contains formula, it evaluates the formula, and", "tags": "METHOD", "url": "exp/evaluateInCell.html"},
                {"title": "org.apache.poi.ss.formula.BaseFormulaEvaluator.evaluateFormulaCellEnum(Cell)", "text": "If cell contains formula, it evaluates the formula,", "tags": "METHOD", "url": "exp/evaluateFormulaCellEnum.html"},
                {"title": "org.apache.poi.ss.formula.BaseFormulaEvaluator.evaluateAllFormulaCells(Workbook)", "text": "Loops over all cells in all sheets of the supplied", "tags": "METHOD", "url": "exp/evaluateAllFormulaCells.html"},
                {"title": "org.apache.poi.ss.formula.BaseFormulaEvaluator.setIgnoreMissingWorkbooks(boolean)", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/setIgnoreMissingWorkbooks.html"},
                {"title": "org.apache.poi.ss.formula.BaseFormulaEvaluator.setDebugEvaluationOutputForNextEval(boolean)", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/setDebugEvaluationOutputForNextEval.html"},
                {"title": "org.apache.poi.ss.formula.CellCacheEntry.recurseClearCachedFormulaResults()", "text": "Calls formulaCell", "tags": "METHOD", "url": "exp/recurseClearCachedFormulaResults.html"},
                {"title": "org.apache.poi.ss.formula.CellCacheEntry.recurseClearCachedFormulaResults(IEvaluationListener, int)", "text": "Identical to {@link #recurseClearCachedFormulaResults()} except for the listener call-backs", "tags": "METHOD", "url": "exp/recurseClearCachedFormulaResults.html"},
                {"title": "org.apache.poi.ss.formula.CellEvaluationFrame.getSensitiveInputCells()", "text": "evaluating the formula of this frame.", "tags": "METHOD", "url": "exp/getSensitiveInputCells.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookNotFoundException.unhookOldEnvironments(WorkbookEvaluator[])", "text": "Completely dismantles all workbook environments that the supplied evaluators are part of", "tags": "METHOD", "url": "exp/unhookOldEnvironments.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookNotFoundException.unhook()", "text": "Tell all contained evaluators that this environment should be discarded", "tags": "METHOD", "url": "exp/unhook.html"},
                {"title": "org.apache.poi.ss.formula.eval.AreaEval.getFirstRow()", "text": "returns the 0-based index of the first row in this area.", "tags": "METHOD", "url": "exp/getFirstRow.html"},
                {"title": "org.apache.poi.ss.formula.eval.AreaEval.getLastRow()", "text": "returns the 0-based index of the last row in this area.", "tags": "METHOD", "url": "exp/getLastRow.html"},
                {"title": "org.apache.poi.ss.formula.eval.AreaEval.getFirstColumn()", "text": "returns the 0-based index of the first col in this area.", "tags": "METHOD", "url": "exp/getFirstColumn.html"},
                {"title": "org.apache.poi.ss.formula.eval.AreaEval.getLastColumn()", "text": "returns the 0-based index of the last col in this area.", "tags": "METHOD", "url": "exp/getLastColumn.html"},
                {"title": "org.apache.poi.ss.formula.eval.AreaEval.getAbsoluteValue(int, int)", "text": "(possibly {@link BlankEval}).  The specified indexes should be absolute indexes in the sheet and not relative indexes within the area.", "tags": "METHOD", "url": "exp/getAbsoluteValue.html"},
                {"title": "org.apache.poi.ss.formula.eval.AreaEval.contains(int, int)", "text": "returns true if the cell at row and col specified", "tags": "METHOD", "url": "exp/contains.html"},
                {"title": "org.apache.poi.ss.formula.eval.AreaEval.containsColumn(int)", "text": "returns true if the specified col is in range", "tags": "METHOD", "url": "exp/containsColumn.html"},
                {"title": "org.apache.poi.ss.formula.eval.AreaEval.containsRow(int)", "text": "returns true if the specified row is in range", "tags": "METHOD", "url": "exp/containsRow.html"},
                {"title": "org.apache.poi.ss.formula.eval.AreaEval.getRelativeValue(int, int)", "text": "relativeColumnIndex. Never  (possibly {@link BlankEval}). The specified indexes should relative to the top left corner of this area.", "tags": "METHOD", "url": "exp/getRelativeValue.html"},
                {"title": "org.apache.poi.ss.formula.eval.AreaEval.offset(int, int, int, int)", "text": "Creates an {@link AreaEval} offset by a relative amount from from the upper left cell of this area", "tags": "METHOD", "url": "exp/offset.html"},
                {"title": "org.apache.poi.ss.formula.eval.AreaEvalBase.isSubTotal(int, int)", "text": "By default return false which means 'don't care about subtotals'", "tags": "METHOD", "url": "exp/isSubTotal.html"},
                {"title": "org.apache.poi.ss.formula.eval.BoolEval.valueOf(boolean)", "text": "Convenience method for the following:(b ? BoolEval.TRUE : BoolEval.FALSE)BoolEvalb<tt>.", "tags": "METHOD", "url": "exp/valueOf.html"},
                {"title": "org.apache.poi.ss.formula.eval.ErrorEval.valueOf(int)", "text": "Translates an Excel internal error code into the corresponding POI ErrorEval instance", "tags": "METHOD", "url": "exp/valueOf.html"},
                {"title": "org.apache.poi.ss.formula.eval.ErrorEval.getText(int)", "text": "Converts error codes to text.  Handles non-standard error codes OK. For debugtest purposes (and for formatting error messages).", "tags": "METHOD", "url": "exp/getText.html"},
                {"title": "org.apache.poi.ss.formula.eval.EvaluationException.invalidValue()", "text": "- Wrong type of operand", "tags": "METHOD", "url": "exp/invalidValue.html"},
                {"title": "org.apache.poi.ss.formula.eval.EvaluationException.invalidRef()", "text": "- Illegal or deleted cell reference", "tags": "METHOD", "url": "exp/invalidRef.html"},
                {"title": "org.apache.poi.ss.formula.eval.EvaluationException.numberError()", "text": "- Value range overflow", "tags": "METHOD", "url": "exp/numberError.html"},
                {"title": "org.apache.poi.ss.formula.eval.forked.ForkedEvaluator.updateCell(String, int, int, ValueEval)", "text": "Sets the specified cell to the supplied", "tags": "METHOD", "url": "exp/updateCell.html"},
                {"title": "org.apache.poi.ss.formula.eval.forked.ForkedEvaluator.copyUpdatedCells(Workbook)", "text": "Copies the values of all updated cells (modified by calls to {@link", "tags": "METHOD", "url": "exp/copyUpdatedCells.html"},
                {"title": "org.apache.poi.ss.formula.eval.forked.ForkedEvaluator.evaluate(String, int, int)", "text": "If cell contains a formula, the formula is evaluated and returned,", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.eval.forked.ForkedEvaluator.setupEnvironment(String[], ForkedEvaluator[])", "text": "Coordinates several formula evaluators together so that formulas that involve external", "tags": "METHOD", "url": "exp/setupEnvironment.html"},
                {"title": "org.apache.poi.ss.formula.eval.FunctionID.produceFunctions()", "text": "See", "tags": "METHOD", "url": "exp/produceFunctions.html"},
                {"title": "org.apache.poi.ss.formula.eval.FunctionID.registerFunction(String, Function)", "text": "Register a new function in runtime.", "tags": "METHOD", "url": "exp/registerFunction.html"},
                {"title": "org.apache.poi.ss.formula.eval.FunctionID.getSupportedFunctionNames()", "text": "Returns a collection of function names implemented by POI.", "tags": "METHOD", "url": "exp/getSupportedFunctionNames.html"},
                {"title": "org.apache.poi.ss.formula.eval.FunctionID.getNotSupportedFunctionNames()", "text": "Returns an array of function names NOT implemented by POI.", "tags": "METHOD", "url": "exp/getNotSupportedFunctionNames.html"},
                {"title": "org.apache.poi.ss.formula.eval.IntersectionEval.resolveRange(AreaEval, AreaEval)", "text": "and . If the two areas do not intersect, the result is .", "tags": "METHOD", "url": "exp/resolveRange.html"},
                {"title": "org.apache.poi.ss.formula.eval.OperandResolver.getSingleValue(ValueEval, int, int)", "text": "Retrieves a single value from a variety of different argument types according to standard", "tags": "METHOD", "url": "exp/getSingleValue.html"},
                {"title": "org.apache.poi.ss.formula.eval.OperandResolver.chooseSingleElementFromArea(AreaEval, int, int)", "text": "Implements (some perhaps not well known) Excel functionality to select a single cell from an", "tags": "METHOD", "url": "exp/chooseSingleElementFromArea.html"},
                {"title": "org.apache.poi.ss.formula.eval.OperandResolver.coerceValueToInt(ValueEval)", "text": "Applies some conversion rules if the supplied value is not already an integer", "tags": "METHOD", "url": "exp/coerceValueToInt.html"},
                {"title": "org.apache.poi.ss.formula.eval.OperandResolver.coerceValueToDouble(ValueEval)", "text": "Applies some conversion rules if the supplied value is not already a number", "tags": "METHOD", "url": "exp/coerceValueToDouble.html"},
                {"title": "org.apache.poi.ss.formula.eval.OperandResolver.parseDouble(String)", "text": "Converts a string to a double using standard rules that Excel would use", "tags": "METHOD", "url": "exp/parseDouble.html"},
                {"title": "org.apache.poi.ss.formula.eval.RangeEval.resolveRange(AreaEval, AreaEval)", "text": "and", "tags": "METHOD", "url": "exp/resolveRange.html"},
                {"title": "org.apache.poi.ss.formula.eval.RefEval.getColumn()", "text": "returns the zero based column index.", "tags": "METHOD", "url": "exp/getColumn.html"},
                {"title": "org.apache.poi.ss.formula.eval.RefEval.getRow()", "text": "returns the zero based row index.", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.ss.formula.eval.RefEval.getFirstSheetIndex()", "text": "returns the first sheet index this applies to", "tags": "METHOD", "url": "exp/getFirstSheetIndex.html"},
                {"title": "org.apache.poi.ss.formula.eval.RefEval.getLastSheetIndex()", "text": "returns the last sheet index this applies to, which will be the same as the first for a 2D and many 3D references", "tags": "METHOD", "url": "exp/getLastSheetIndex.html"},
                {"title": "org.apache.poi.ss.formula.eval.RefEval.getNumberOfSheets()", "text": "returns the number of sheets this applies to", "tags": "METHOD", "url": "exp/getNumberOfSheets.html"},
                {"title": "org.apache.poi.ss.formula.eval.RefEval.offset(int, int, int, int)", "text": "Creates an {@link AreaEval} offset by a relative amount from this RefEval", "tags": "METHOD", "url": "exp/offset.html"},
                {"title": "org.apache.poi.ss.formula.eval.RelationalOperationEval.convertComparisonResult(int)", "text": "Converts a standard compare result (-1, 0, 1) to  or according to subclass' comparison type.", "tags": "METHOD", "url": "exp/convertComparisonResult.html"},
                {"title": "org.apache.poi.ss.formula.eval.RelationalOperationEval.evaluate(int, int, ValueEval, ValueEval)", "text": "This is a description of how the relational operators apply in MS Excel", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationCache.clear()", "text": "Should be called whenever there are changes to input cells in the evaluated workbook.", "tags": "METHOD", "url": "exp/clear.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationCell.getIdentityKey()", "text": "suitable for use as a key in a {@link java.util.HashMap}", "tags": "METHOD", "url": "exp/getIdentityKey.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationSheet.clearAllCachedResultValues()", "text": "Propagated from {@link EvaluationWorkbook#clearAllCachedResultValues()} to clear locally cached data.", "tags": "METHOD", "url": "exp/clearAllCachedResultValues.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationTracker.startEvaluate(FormulaCellCacheEntry)", "text": "Notifies this evaluation tracker that evaluation of the specified cell is", "tags": "METHOD", "url": "exp/startEvaluate.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationTracker.endEvaluate(CellCacheEntry)", "text": "Notifies this evaluation tracker that the evaluation of the specified cell is complete", "tags": "METHOD", "url": "exp/endEvaluate.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationWorkbook.getSheetIndex(String)", "text": "Finds a sheet index by case insensitive name.", "tags": "METHOD", "url": "exp/getSheetIndex.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationWorkbook.getExternalSheet(int)", "text": "HSSF Only - fetch the external-style sheet details", "tags": "METHOD", "url": "exp/getExternalSheet.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationWorkbook.getExternalSheet(String, String, int)", "text": "XSSF Only - fetch the external-style sheet details", "tags": "METHOD", "url": "exp/getExternalSheet.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationWorkbook.convertFromExternSheetIndex(int)", "text": "HSSF Only - convert an external sheet index to an internal sheet index, for an external-style reference to one of this workbook's own sheets", "tags": "METHOD", "url": "exp/convertFromExternSheetIndex.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationWorkbook.getExternalName(int, int)", "text": "HSSF Only - fetch the external-style name details", "tags": "METHOD", "url": "exp/getExternalName.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationWorkbook.getExternalName(String, String, int)", "text": "XSSF Only - fetch the external-style name details", "tags": "METHOD", "url": "exp/getExternalName.html"},
                {"title": "org.apache.poi.ss.formula.EvaluationWorkbook.clearAllCachedResultValues()", "text": "Propagated from {@link WorkbookEvaluator#clearAllCachedResultValues()} to clear locally cached data. Implementations must call the same method on all referenced {@link EvaluationSheet} instances, as well as clearing local caches.", "tags": "METHOD", "url": "exp/clearAllCachedResultValues.html"},
                {"title": "org.apache.poi.ss.formula.Formula.read(int, LittleEndianInput)", "text": "Convenience method for {@link #read(int, LittleEndianInput, int)}", "tags": "METHOD", "url": "exp/read.html"},
                {"title": "org.apache.poi.ss.formula.Formula.read(int, LittleEndianInput, int)", "text": "When there are no array constants present, == for array constants, but does not include 2 bytes for initial  field.", "tags": "METHOD", "url": "exp/read.html"},
                {"title": "org.apache.poi.ss.formula.Formula.serialize(LittleEndianOutput)", "text": "Writes  The formula encoding is includes: ushort tokenDataLentokenDataarrayConstantData (if present)", "tags": "METHOD", "url": "exp/serialize.html"},
                {"title": "org.apache.poi.ss.formula.Formula.getEncodedSize()", "text": "ushort tokenDataLentokenDataarrayConstantData (optional) Note - this value is different to", "tags": "METHOD", "url": "exp/getEncodedSize.html"},
                {"title": "org.apache.poi.ss.formula.Formula.getEncodedTokenSize()", "text": "This method is often used when the formula length does not appear immediately before", "tags": "METHOD", "url": "exp/getEncodedTokenSize.html"},
                {"title": "org.apache.poi.ss.formula.Formula.create(Ptg[])", "text": "Creates a {@link Formula} object from a supplied {@link Ptg} array. Handles s OK.", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.ss.formula.Formula.getTokens(Formula)", "text": "Gets the {@link Ptg} array from the supplied {@link Formula}. Handles s OK.", "tags": "METHOD", "url": "exp/getTokens.html"},
                {"title": "org.apache.poi.ss.formula.Formula.getExpReference()", "text": "Gets the locator for the corresponding {@link org", "tags": "METHOD", "url": "exp/getExpReference.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.parse(String, FormulaParsingWorkbook, FormulaType, int, int)", "text": "Parse a formula into an array of tokens", "tags": "METHOD", "url": "exp/parse.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.parse(String, FormulaParsingWorkbook, FormulaType, int)", "text": "Parse a formula into an array of tokens", "tags": "METHOD", "url": "exp/parse.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.parseStructuredReference(String, FormulaParsingWorkbook, int)", "text": "Parse a structured reference. Converts the structured reference to the area that represent it.", "tags": "METHOD", "url": "exp/parseStructuredReference.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.GetChar()", "text": "Read New Character From Input Stream", "tags": "METHOD", "url": "exp/GetChar.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.expected(String)", "text": "Report What Was Expected", "tags": "METHOD", "url": "exp/expected.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.IsAlpha(int)", "text": "Recognize an Alpha Character", "tags": "METHOD", "url": "exp/IsAlpha.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.IsDigit(int)", "text": "Recognize a Decimal Digit", "tags": "METHOD", "url": "exp/IsDigit.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.IsWhite(int)", "text": "Recognize White Space", "tags": "METHOD", "url": "exp/IsWhite.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.SkipWhite()", "text": "Skip Over Leading White Space", "tags": "METHOD", "url": "exp/SkipWhite.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.Match(int)", "text": "Consumes the next input character if it is equal to the one specified otherwise throws an", "tags": "METHOD", "url": "exp/Match.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.GetNum()", "text": "Get a Number", "tags": "METHOD", "url": "exp/GetNum.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.needsMemFunc(ParseNode)", "text": "From OOO doc: \"Whenever one operand of the reference subexpression is a function,", "tags": "METHOD", "url": "exp/needsMemFunc.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.isValidRangeOperand(ParseNode)", "text": "cannot appear on either side of the range (':') operator", "tags": "METHOD", "url": "exp/isValidRangeOperand.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.parseRangeable()", "text": "Parses area refs (things which could be the operand of ':') and simple factors Examples", "tags": "METHOD", "url": "exp/parseRangeable.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.parseStructuredReference(String)", "text": "Parses a structured reference, returns it as area reference. Examples:", "tags": "METHOD", "url": "exp/parseStructuredReference.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.parseAsColumnQuantifier()", "text": "Tries to parse the next as column - can contain whitespace Caller should save pointer.", "tags": "METHOD", "url": "exp/parseAsColumnQuantifier.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.parseAsSpecialQuantifier()", "text": "Tries to parse the next as special quantifier Caller should save pointer.", "tags": "METHOD", "url": "exp/parseAsSpecialQuantifier.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.parseNonRange(int)", "text": "Parses simple factors that are not primitive ranges or range components", "tags": "METHOD", "url": "exp/parseNonRange.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParser.parseSimpleRangePart()", "text": "Parses out a potential LHS or RHS of a ':' intended to produce a plain AreaRef.  Normally these are proper cell references but they could also be row or column refs like \"$AC\" or \"10\"", "tags": "METHOD", "url": "exp/parseSimpleRangePart.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.isCompatibleForArea(SimpleRangePart)", "text": "{@link AreaPtg} ( Note - the explicit range operator (:) may still be valid when this method returns  )", "tags": "METHOD", "url": "exp/isCompatibleForArea.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.parseSheetName()", "text": "Note - caller should reset {@link #_pointer} upon  result", "tags": "METHOD", "url": "exp/parseSheetName.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.parseSheetRange(String, NameIdentifier)", "text": "If we have something that looks like [book]Sheet1: or Sheet1, see if it's actually a range eg Sheet1:Sheet2!", "tags": "METHOD", "url": "exp/parseSheetRange.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.isUnquotedSheetNameChar(int)", "text": "very similar to {@link SheetNameFormatter#isSpecialChar(char)}", "tags": "METHOD", "url": "exp/isUnquotedSheetNameChar.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.function(String)", "text": "Note - Excel function names are 'case aware but not case sensitive'", "tags": "METHOD", "url": "exp/function.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.addName(String)", "text": "Adds a name (named range or user defined function) to underlying workbook's names table", "tags": "METHOD", "url": "exp/addName.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.getFunction(String, Ptg, ParseNode[])", "text": "Generates the variable function ptg for the formula. null<code>", "tags": "METHOD", "url": "exp/getFunction.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.Arguments()", "text": "get arguments to a function", "tags": "METHOD", "url": "exp/Arguments.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.powerFactor()", "text": "Parse and Translate a Math Factor", "tags": "METHOD", "url": "exp/powerFactor.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.parseSimpleFactor()", "text": "factors (without ^ or % )", "tags": "METHOD", "url": "exp/parseSimpleFactor.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.getNumberPtgFromString(String, String, String)", "text": "Get a PTG for an integer from its string representation. return Int or Number Ptg based on size of input", "tags": "METHOD", "url": "exp/getNumberPtgFromString.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.Term()", "text": "Parse and Translate a Math Term", "tags": "METHOD", "url": "exp/Term.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.additiveExpression()", "text": "Parse and Translate an Expression", "tags": "METHOD", "url": "exp/additiveExpression.html"},
                {"title": "org.apache.poi.ss.formula.SimpleRangePart.parse()", "text": "API call to execute the parsing of the formula", "tags": "METHOD", "url": "exp/parse.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParsingWorkbook.getName(String, int)", "text": "named range name matching is case insensitive", "tags": "METHOD", "url": "exp/getName.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParsingWorkbook.createName()", "text": "Return the underlying workbook", "tags": "METHOD", "url": "exp/createName.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParsingWorkbook.getTable(String)", "text": "XSSF Only - gets a table that exists in the worksheet", "tags": "METHOD", "url": "exp/getTable.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParsingWorkbook.getNameXPtg(String, SheetIdentifier)", "text": "Return an external name (named range, function, user-defined function) Ptg", "tags": "METHOD", "url": "exp/getNameXPtg.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParsingWorkbook.get3DReferencePtg(CellReference, SheetIdentifier)", "text": "Produce the appropriate Ptg for a 3d cell reference", "tags": "METHOD", "url": "exp/get3DReferencePtg.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParsingWorkbook.get3DReferencePtg(AreaReference, SheetIdentifier)", "text": "Produce the appropriate Ptg for a 3d area reference", "tags": "METHOD", "url": "exp/get3DReferencePtg.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParsingWorkbook.getExternalSheetIndex(String)", "text": "gets the externSheet index for a sheet from this workbook", "tags": "METHOD", "url": "exp/getExternalSheetIndex.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParsingWorkbook.getExternalSheetIndex(String, String)", "text": "gets the externSheet index for a sheet from an external workbook", "tags": "METHOD", "url": "exp/getExternalSheetIndex.html"},
                {"title": "org.apache.poi.ss.formula.FormulaParsingWorkbook.getSpreadsheetVersion()", "text": "Returns an enum holding spreadhseet properties specific to an Excel version ( max column and row numbers, max arguments to a function, etc.)", "tags": "METHOD", "url": "exp/getSpreadsheetVersion.html"},
                {"title": "org.apache.poi.ss.formula.FormulaRenderer.toFormulaString(FormulaRenderingWorkbook, Ptg[])", "text": "Static method to convert an array of {@link Ptg}s in RPN order to a human readable string format in infix mode.", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.ss.formula.FormulaShifter.adjustPtgDueToRowMove(Ptg, int)", "text": "deleted ref ptg (if row move causes an error), or null (if no Ptg change is needed)", "tags": "METHOD", "url": "exp/adjustPtgDueToRowMove.html"},
                {"title": "org.apache.poi.ss.formula.FormulaShifter.adjustPtgDueToRowCopy(Ptg)", "text": "Call this on any ptg reference contained in a row of cells that was copied", "tags": "METHOD", "url": "exp/adjustPtgDueToRowCopy.html"},
                {"title": "org.apache.poi.ss.formula.FormulaShifter.rowCopyRefPtg(RefPtgBase)", "text": "Modifies rptg in-place and return a reference to rptg if the cell reference", "tags": "METHOD", "url": "exp/rowCopyRefPtg.html"},
                {"title": "org.apache.poi.ss.formula.FormulaShifter.rowCopyAreaPtg(AreaPtgBase)", "text": "Modifies aptg in-place and return a reference to aptg if the first or last row of", "tags": "METHOD", "url": "exp/rowCopyAreaPtg.html"},
                {"title": "org.apache.poi.ss.formula.function.FunctionMetadata.hasUnlimitedVarags()", "text": "Some varags functions (like VLOOKUP) have a specific limit to the number of arguments that", "tags": "METHOD", "url": "exp/hasUnlimitedVarags.html"},
                {"title": "org.apache.poi.ss.formula.function.FunctionMetadataReader.validateFunctionName(String)", "text": "Makes sure that footnote digits from the original OOO document have not been accidentally left behind", "tags": "METHOD", "url": "exp/validateFunctionName.html"},
                {"title": "org.apache.poi.ss.formula.function.FunctionMetadataRegistry.lookupIndexByName(String)", "text": "Resolves a built-in function index. This typically occurs for external functions.", "tags": "METHOD", "url": "exp/lookupIndexByName.html"},
                {"title": "org.apache.poi.ss.formula.functions.Count.matches(TwoDEval, int, int)", "text": "don't count cells that are subtotals", "tags": "METHOD", "url": "exp/matches.html"},
                {"title": "org.apache.poi.ss.formula.functions.Count.subtotalInstance()", "text": "Create an instance of Count to use in {@link Subtotal}", "tags": "METHOD", "url": "exp/subtotalInstance.html"},
                {"title": "org.apache.poi.ss.formula.functions.Counta.matches(TwoDEval, int, int)", "text": "don't count cells that are subtotals", "tags": "METHOD", "url": "exp/matches.html"},
                {"title": "org.apache.poi.ss.formula.functions.StringMatcher.getWildCardPattern(String)", "text": "Translates Excel countif wildcard strings into java regex strings", "tags": "METHOD", "url": "exp/getWildCardPattern.html"},
                {"title": "org.apache.poi.ss.formula.functions.StringMatcher.createGeneralMatchPredicate(StringEval)", "text": "When the second argument is a string, many things are possible", "tags": "METHOD", "url": "exp/createGeneralMatchPredicate.html"},
                {"title": "org.apache.poi.ss.formula.functions.DateFunc.evaluate(int, int, int)", "text": "Note - works with Java Calendar months, not Excel months", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.functions.DStarRunner.getColumnForString(AreaEval, String)", "text": "For a given database returns the column number for a column heading.", "tags": "METHOD", "url": "exp/getColumnForString.html"},
                {"title": "org.apache.poi.ss.formula.functions.DStarRunner.fullfillsConditions(AreaEval, int, AreaEval)", "text": "Checks a row in a database against a condition database. operators and operands didn't match.", "tags": "METHOD", "url": "exp/fullfillsConditions.html"},
                {"title": "org.apache.poi.ss.formula.functions.DStarRunner.testNormalCondition(ValueEval, ValueEval)", "text": "Test a value against a simple (= = starts-with) condition string.", "tags": "METHOD", "url": "exp/testNormalCondition.html"},
                {"title": "org.apache.poi.ss.formula.functions.DStarRunner.testNumericCondition(ValueEval, operator, String)", "text": "Test whether a value matches a numeric condition.", "tags": "METHOD", "url": "exp/testNumericCondition.html"},
                {"title": "org.apache.poi.ss.formula.functions.DStarRunner.resolveReference(AreaEval, int, int)", "text": "Resolve a ValueEval that's in an AreaEval.", "tags": "METHOD", "url": "exp/resolveReference.html"},
                {"title": "org.apache.poi.ss.formula.functions.Finance.pmt(double, int, double, double)", "text": "Overloaded pmt() call omitting type, which defaults to 0.", "tags": "METHOD", "url": "exp/pmt.html"},
                {"title": "org.apache.poi.ss.formula.functions.Finance.pmt(double, int, double)", "text": "Overloaded pmt() call omitting fv and type, which both default to 0.", "tags": "METHOD", "url": "exp/pmt.html"},
                {"title": "org.apache.poi.ss.formula.functions.Finance.ppmt(double, int, int, double, double, int)", "text": "Emulates ExcelCalc's PPMT(interest_rate, period, number_payments, PV,", "tags": "METHOD", "url": "exp/ppmt.html"},
                {"title": "org.apache.poi.ss.formula.functions.Finance.fv(double, int, double, double)", "text": "Overloaded fv() call omitting type, which defaults to 0.", "tags": "METHOD", "url": "exp/fv.html"},
                {"title": "org.apache.poi.ss.formula.functions.FinanceLib.fv(double, double, double, double, boolean)", "text": "Future value of an amount given the number of payments, rate, amount", "tags": "METHOD", "url": "exp/fv.html"},
                {"title": "org.apache.poi.ss.formula.functions.FinanceLib.pv(double, double, double, double, boolean)", "text": "Present value of an amount given the number of future payments, rate, amount", "tags": "METHOD", "url": "exp/pv.html"},
                {"title": "org.apache.poi.ss.formula.functions.FinanceLib.npv(double, double[])", "text": "calculates the Net Present Value of a principal amount", "tags": "METHOD", "url": "exp/npv.html"},
                {"title": "org.apache.poi.ss.formula.functions.FreeRefFunction.evaluate(ValueEval[], OperationEvaluationContext)", "text": "nor are any of its elements", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.functions.Function.evaluate(ValueEval[], int, int)", "text": "{@link BlankEval} or {@link MissingArgEval}, never ", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.functions.Function0Arg.evaluate(int, int)", "text": "see {@link Function#evaluate(ValueEval[], int, int)}", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.functions.Function1Arg.evaluate(int, int, ValueEval)", "text": "see {@link Function#evaluate(ValueEval[], int, int)}", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.functions.Function2Arg.evaluate(int, int, ValueEval, ValueEval)", "text": "see {@link Function#evaluate(ValueEval[], int, int)}", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.functions.Function3Arg.evaluate(int, int, ValueEval, ValueEval, ValueEval)", "text": "see {@link Function#evaluate(ValueEval[], int, int)}", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.functions.Function4Arg.evaluate(int, int, ValueEval, ValueEval, ValueEval, ValueEval)", "text": "see {@link Function#evaluate(ValueEval[], int, int)}", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.functions.Hlookup.createResultColumnVector(TwoDEval, int)", "text": "Returns one column from an", "tags": "METHOD", "url": "exp/createResultColumnVector.html"},
                {"title": "org.apache.poi.ss.formula.functions.IDStarAlgorithm.processMatch(ValueEval)", "text": "Process a match that is found during a run through a database.", "tags": "METHOD", "url": "exp/processMatch.html"},
                {"title": "org.apache.poi.ss.formula.functions.IDStarAlgorithm.getResult()", "text": "Return a result ValueEval that will be the result of the calculation. This is always called at the end of a run through the database.", "tags": "METHOD", "url": "exp/getResult.html"},
                {"title": "org.apache.poi.ss.formula.functions.Indirect.parseWorkbookAndSheetName(CharSequence)", "text": "present.  First element may be null if sheetName is unqualified. Returns  if text cannot be parsed.", "tags": "METHOD", "url": "exp/parseWorkbookAndSheetName.html"},
                {"title": "org.apache.poi.ss.formula.functions.Indirect.unescapeString(CharSequence)", "text": "(the typical syntax error is a single quote character not followed by another).", "tags": "METHOD", "url": "exp/unescapeString.html"},
                {"title": "org.apache.poi.ss.formula.functions.Irr.irr(double[])", "text": "Computes the internal rate of return using an estimated irr of 10 percent.", "tags": "METHOD", "url": "exp/irr.html"},
                {"title": "org.apache.poi.ss.formula.functions.Irr.irr(double[], double)", "text": "Calculates IRR using the Newton-Raphson Method", "tags": "METHOD", "url": "exp/irr.html"},
                {"title": "org.apache.poi.ss.formula.functions.LookupValueComparer.compareTo(ValueEval)", "text": "or", "tags": "METHOD", "url": "exp/compareTo.html"},
                {"title": "org.apache.poi.ss.formula.functions.LookupValueComparerBase.getValueAsString()", "text": "used only for debug purposes", "tags": "METHOD", "url": "exp/getValueAsString.html"},
                {"title": "org.apache.poi.ss.formula.functions.BooleanLookupComparer.resolveRowOrColIndexArg(ValueEval, int, int)", "text": "Processes the third argument to VLOOKUP, or HLOOKUP (", "tags": "METHOD", "url": "exp/resolveRowOrColIndexArg.html"},
                {"title": "org.apache.poi.ss.formula.functions.BooleanLookupComparer.resolveTableArrayArg(ValueEval)", "text": "The second argument (table_array) should be an area ref, but can actually be a cell ref, in which case it is interpreted as a 1x1 area ref.  Other scalar values cause #VALUE! error.", "tags": "METHOD", "url": "exp/resolveTableArrayArg.html"},
                {"title": "org.apache.poi.ss.formula.functions.BooleanLookupComparer.resolveRangeLookupArg(ValueEval, int, int)", "text": "Resolves the last (optional) parameter () to the VLOOKUP and HLOOKUP functions.", "tags": "METHOD", "url": "exp/resolveRangeLookupArg.html"},
                {"title": "org.apache.poi.ss.formula.functions.BooleanLookupComparer.lookupIndexOfExactValue(LookupValueComparer, ValueVector)", "text": "Finds first (lowest index) exact occurrence of specified value. tableArray. For HLOOKUP this is the first row of the tableArray.", "tags": "METHOD", "url": "exp/lookupIndexOfExactValue.html"},
                {"title": "org.apache.poi.ss.formula.functions.BinarySearchIndexes.performBinarySearch(ValueVector, LookupValueComparer)", "text": "Excel has funny behaviour when the some elements in the search vector are the wrong type.", "tags": "METHOD", "url": "exp/performBinarySearch.html"},
                {"title": "org.apache.poi.ss.formula.functions.BinarySearchIndexes.handleMidValueTypeMismatch(LookupValueComparer, ValueVector, BinarySearchIndexes, int)", "text": "Excel seems to handle mismatched types initially by just stepping 'mid' ix forward to the", "tags": "METHOD", "url": "exp/handleMidValueTypeMismatch.html"},
                {"title": "org.apache.poi.ss.formula.functions.BinarySearchIndexes.findLastIndexInRunOfEqualValues(LookupValueComparer, ValueVector, int, int)", "text": "Once the binary search has found a single match, (VH)LOOKUP steps one by one over subsequent values to choose the last matching item.", "tags": "METHOD", "url": "exp/findLastIndexInRunOfEqualValues.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.round(double, int)", "text": "Returns a value rounded to p digits after decimal", "tags": "METHOD", "url": "exp/round.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.roundUp(double, int)", "text": "Returns a value rounded-up to p digits after decimal", "tags": "METHOD", "url": "exp/roundUp.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.roundDown(double, int)", "text": "Returns a value rounded to p digits after decimal", "tags": "METHOD", "url": "exp/roundDown.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.sign(double)", "text": "If d < 0, returns short -1", "tags": "METHOD", "url": "exp/sign.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.average(double[])", "text": "average of all values", "tags": "METHOD", "url": "exp/average.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.sum(double[])", "text": "sum of all values", "tags": "METHOD", "url": "exp/sum.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.sumsq(double[])", "text": "sum of squares of all values", "tags": "METHOD", "url": "exp/sumsq.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.product(double[])", "text": "product of all values", "tags": "METHOD", "url": "exp/product.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.min(double[])", "text": "min of all values. If supplied array is zero length, Double.POSITIVE_INFINITY is returned.", "tags": "METHOD", "url": "exp/min.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.max(double[])", "text": "min of all values. If supplied array is zero length, Double.NEGATIVE_INFINITY is returned.", "tags": "METHOD", "url": "exp/max.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.floor(double, double)", "text": "Note: this function is different from java", "tags": "METHOD", "url": "exp/floor.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.ceiling(double, double)", "text": "Note: this function is different from java", "tags": "METHOD", "url": "exp/ceiling.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.factorial(int)", "text": "<br> for all n >= 1; factorial n = n  (n-1)  (n-2)  ", "tags": "METHOD", "url": "exp/factorial.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.mod(double, double)", "text": "returns the remainder resulting from operation:", "tags": "METHOD", "url": "exp/mod.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.acosh(double)", "text": "inverse hyperbolic cosine", "tags": "METHOD", "url": "exp/acosh.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.asinh(double)", "text": "inverse hyperbolic sine", "tags": "METHOD", "url": "exp/asinh.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.atanh(double)", "text": "inverse hyperbolic tangent", "tags": "METHOD", "url": "exp/atanh.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.cosh(double)", "text": "hyperbolic cosine", "tags": "METHOD", "url": "exp/cosh.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.sinh(double)", "text": "hyperbolic sine", "tags": "METHOD", "url": "exp/sinh.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.tanh(double)", "text": "hyperbolic tangent", "tags": "METHOD", "url": "exp/tanh.html"},
                {"title": "org.apache.poi.ss.formula.functions.MathX.nChooseK(int, int)", "text": "returns the total number of combinations possible when", "tags": "METHOD", "url": "exp/nChooseK.html"},
                {"title": "org.apache.poi.ss.formula.functions.Mode.evaluate(double[])", "text": "if v is zero length or contains no duplicates, return value is", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.functions.DoubleList.getMaxNumOperands()", "text": "Maximum number of operands accepted by this function. Subclasses may override to change default value.", "tags": "METHOD", "url": "exp/getMaxNumOperands.html"},
                {"title": "org.apache.poi.ss.formula.functions.DoubleList.getNumberArray(ValueEval[])", "text": "Returns a double array that contains values for the numeric cells", "tags": "METHOD", "url": "exp/getNumberArray.html"},
                {"title": "org.apache.poi.ss.formula.functions.DoubleList.isSubtotalCounted()", "text": "Whether to count nested subtotals.", "tags": "METHOD", "url": "exp/isSubtotalCounted.html"},
                {"title": "org.apache.poi.ss.formula.functions.DoubleList.collectValues(ValueEval, DoubleList)", "text": "Collects values from a single argument", "tags": "METHOD", "url": "exp/collectValues.html"},
                {"title": "org.apache.poi.ss.formula.functions.Log.isDefaultResult(double, double)", "text": "This checks is x = 0 and the mean = 0", "tags": "METHOD", "url": "exp/isDefaultResult.html"},
                {"title": "org.apache.poi.ss.formula.functions.LinearOffsetRange.normaliseAndTranslate(int)", "text": "Moves the range by the specified translation amount. specified translationAmount.", "tags": "METHOD", "url": "exp/normaliseAndTranslate.html"},
                {"title": "org.apache.poi.ss.formula.functions.BaseRef.evaluateIntArg(ValueEval, int, int)", "text": "OFFSET's numeric arguments (2..5) have similar processing rules", "tags": "METHOD", "url": "exp/evaluateIntArg.html"},
                {"title": "org.apache.poi.ss.formula.functions.Rate.checkValue(double)", "text": "Excel does not support infinities and NaNs, rather, it gives a #NUM! error in these cases", "tags": "METHOD", "url": "exp/checkValue.html"},
                {"title": "org.apache.poi.ss.formula.functions.Roman.integerToRoman(int)", "text": "Classic conversion.", "tags": "METHOD", "url": "exp/integerToRoman.html"},
                {"title": "org.apache.poi.ss.formula.functions.Roman.makeConcise(String, int)", "text": "Use conversion rule to factor some parts and make them more concise", "tags": "METHOD", "url": "exp/makeConcise.html"},
                {"title": "org.apache.poi.ss.formula.functions.StatsLib.avedev(double[])", "text": "returns the mean of deviations from mean.", "tags": "METHOD", "url": "exp/avedev.html"},
                {"title": "org.apache.poi.ss.formula.functions.StatsLib.kthLargest(double[], int)", "text": "returns the kth largest element in the array", "tags": "METHOD", "url": "exp/kthLargest.html"},
                {"title": "org.apache.poi.ss.formula.functions.StatsLib.kthSmallest(double[], int)", "text": "returns the kth smallest element in the array", "tags": "METHOD", "url": "exp/kthSmallest.html"},
                {"title": "org.apache.poi.ss.formula.functions.Sumifs.validateCriteriaRanges(AreaEval[], AreaEval)", "text": "Verify that each  argument contains the same number of rows and columns as the  argument", "tags": "METHOD", "url": "exp/validateCriteriaRanges.html"},
                {"title": "org.apache.poi.ss.formula.functions.Sumifs.validateCriteria(I_MatchPredicate[])", "text": "Verify that each  predicate is valid, i.e. not an error", "tags": "METHOD", "url": "exp/validateCriteria.html"},
                {"title": "org.apache.poi.ss.formula.functions.Sumproduct.getProductTerm(ValueEval, boolean)", "text": "Determines a  value for the specified ", "tags": "METHOD", "url": "exp/getProductTerm.html"},
                {"title": "org.apache.poi.ss.formula.functions.SingleArgTextFunc.isPrintable(char)", "text": "From Excel docs: The CLEAN function was designed to remove the first 32 nonprinting characters", "tags": "METHOD", "url": "exp/isPrintable.html"},
                {"title": "org.apache.poi.ss.formula.functions.TimeFunc.evaluate(int, int, int)", "text": "Converts the supplied hours, minutes and seconds to an Excel time value", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.functions.Value.convertTextToNumber(String)", "text": "TODO see if the same functionality is needed in {@link OperandResolver#parseDouble(String)}", "tags": "METHOD", "url": "exp/convertTextToNumber.html"},
                {"title": "org.apache.poi.ss.formula.functions.Vlookup.createResultColumnVector(TwoDEval, int)", "text": "Returns one column from an", "tags": "METHOD", "url": "exp/createResultColumnVector.html"},
                {"title": "org.apache.poi.ss.formula.functions.WeekdayFunc.evaluate(ValueEval[], int, int)", "text": "Perform WEEKDAY(date, returnOption) function", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.functions.Accumulator.createAccumulator()", "text": "Constructs a new instance of the Accumulator used to calculated this function", "tags": "METHOD", "url": "exp/createAccumulator.html"},
                {"title": "org.apache.poi.ss.formula.ICacheEntry.sortDependentCachedValues(ICacheEntry[])", "text": "Internally, formula {@link ICacheEntry}s are stored in sets which may change ordering due", "tags": "METHOD", "url": "exp/sortDependentCachedValues.html"},
                {"title": "org.apache.poi.ss.formula.IStabilityClassifier.isCellFinal(int, int, int)", "text": "Checks if a cell's value(formula) is fixed - in other words - not expected to be modified", "tags": "METHOD", "url": "exp/isCellFinal.html"},
                {"title": "org.apache.poi.ss.formula.OperandClassTransformer.transformFormula(ParseNode)", "text": "Traverses the supplied formula parse tree, calling  for each non-base token to set its operand class.", "tags": "METHOD", "url": "exp/transformFormula.html"},
                {"title": "org.apache.poi.ss.formula.OperandClassTransformer.transformNode(ParseNode, byte, boolean)", "text": "function Ptg which has been changed from default 'V' to 'A' type (due to requirements on the function return value).", "tags": "METHOD", "url": "exp/transformNode.html"},
                {"title": "org.apache.poi.ss.formula.OperationEvaluationContext.getDynamicReference(String, String, String, String, boolean)", "text": "Resolves a cell or area reference dynamically", "tags": "METHOD", "url": "exp/getDynamicReference.html"},
                {"title": "org.apache.poi.ss.formula.OperationEvaluatorFactory.evaluate(OperationPtg, ValueEval[], OperationEvaluationContext)", "text": "returns the OperationEval concrete impl instance corresponding to the supplied operationPtg", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.formula.ParseNode.toTokenArray(ParseNode)", "text": "Collects the array of  tokens for the specified tree.", "tags": "METHOD", "url": "exp/toTokenArray.html"},
                {"title": "org.apache.poi.ss.formula.ParseNode.collectIfPtgs(TokenCollector)", "text": "The IF() function gets marked up with two or three tAttr tokens", "tags": "METHOD", "url": "exp/collectIfPtgs.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AbstractFunctionPtg.isExternalFunction()", "text": "external functions get some special processing", "tags": "METHOD", "url": "exp/isExternalFunction.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AbstractFunctionPtg.isBuiltInFunctionName(String)", "text": "Used to detect whether a function name found in a formula is one of the standard excel functions truefalse<code> if the name should be assumed to be an external function.", "tags": "METHOD", "url": "exp/isBuiltInFunctionName.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AbstractFunctionPtg.lookupIndex(String)", "text": "Resolves internal function names into function indexes. FUNCTION_INDEX_EXTERNAL<tt>", "tags": "METHOD", "url": "exp/lookupIndex.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AddPtg.toFormulaString(String[])", "text": "implementation of method from OperationsPtg", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Area3DPtg.toFormulaString(FormulaRenderingWorkbook)", "text": "formulas. The sheet name will get properly delimited if required.", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtgBase.notImplemented()", "text": "TODO - (May-2008) fix subclasses of AreaPtg 'AreaN~' which are used in shared formulas. see similar comment in ReferencePtg", "tags": "METHOD", "url": "exp/notImplemented.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtgBase.sortTopLeftToBottomRight()", "text": "Sort the first and last row and columns in-place to the preferred (top left:bottom right) order", "tags": "METHOD", "url": "exp/sortTopLeftToBottomRight.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtgBase.setFirstRow(int)", "text": "sets the first row", "tags": "METHOD", "url": "exp/setFirstRow.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtgBase.setFirstRowRelative(boolean)", "text": "sets the first row to relative or not", "tags": "METHOD", "url": "exp/setFirstRowRelative.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtgBase.setFirstColRelative(boolean)", "text": "set whether the first column is relative", "tags": "METHOD", "url": "exp/setFirstColRelative.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtgBase.setFirstColumn(int)", "text": "set the first column in the area", "tags": "METHOD", "url": "exp/setFirstColumn.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtgBase.setFirstColumnRaw(int)", "text": "set the first column irrespective of the bitmasks", "tags": "METHOD", "url": "exp/setFirstColumnRaw.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtgBase.setLastRowRelative(boolean)", "text": "set whether the last row is relative or not", "tags": "METHOD", "url": "exp/setLastRowRelative.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtgBase.setLastColRelative(boolean)", "text": "set whether the last column should be relative or not", "tags": "METHOD", "url": "exp/setLastColRelative.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtgBase.setLastColumn(int)", "text": "set the last column in the area", "tags": "METHOD", "url": "exp/setLastColumn.html"},
                {"title": "org.apache.poi.ss.formula.ptg.AreaPtgBase.setLastColumnRaw(short)", "text": "set the last column irrespective of the bitmasks", "tags": "METHOD", "url": "exp/setLastColumnRaw.html"},
                {"title": "org.apache.poi.ss.formula.ptg.ArrayPtg.getSize()", "text": "This size includes the size of the array Ptg plus the Array Ptg Token value size", "tags": "METHOD", "url": "exp/getSize.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Initial.finishReading(LittleEndianInput)", "text": "Read in the actual token (array) values", "tags": "METHOD", "url": "exp/finishReading.html"},
                {"title": "org.apache.poi.ss.formula.ptg.FuncVarPtg.create(LittleEndianInput)", "text": "Creates new function pointer from a byte array usually called while reading an excel file.", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.ss.formula.ptg.FuncVarPtg.create(String, int)", "text": "Create a function ptg from a string tokenised by the parser", "tags": "METHOD", "url": "exp/create.html"},
                {"title": "org.apache.poi.ss.formula.ptg.GreaterThanPtg.getNumberOfOperands()", "text": "Get the number of operands for the Less than operator", "tags": "METHOD", "url": "exp/getNumberOfOperands.html"},
                {"title": "org.apache.poi.ss.formula.ptg.GreaterThanPtg.toFormulaString(String[])", "text": "Implementation of method from OperationsPtg", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.ss.formula.ptg.IntPtg.isInRange(int)", "text": "Excel represents integers 0..65535 with the tInt token. can represent.", "tags": "METHOD", "url": "exp/isInRange.html"},
                {"title": "org.apache.poi.ss.formula.ptg.LessThanPtg.getNumberOfOperands()", "text": "Get the number of operands for the Less than operator", "tags": "METHOD", "url": "exp/getNumberOfOperands.html"},
                {"title": "org.apache.poi.ss.formula.ptg.LessThanPtg.toFormulaString(String[])", "text": "Implementation of method from OperationsPtg", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.ss.formula.ptg.OperandPtg.isBaseToken()", "text": "All Operand {@link Ptg}s are classified ('relative', 'value', 'array')", "tags": "METHOD", "url": "exp/isBaseToken.html"},
                {"title": "org.apache.poi.ss.formula.ptg.OperationPtg.toFormulaString(String[])", "text": "returns a string representation of the operations the length of the input array should equal the number returned by", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.ss.formula.ptg.OperationPtg.getNumberOfOperands()", "text": "The number of operands expected by the operations", "tags": "METHOD", "url": "exp/getNumberOfOperands.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Ptg.readTokens(int, LittleEndianInput)", "text": "Reads  bytes of the input stream, to create an array of s. Extra data (beyond ) may be read if and s are present.", "tags": "METHOD", "url": "exp/readTokens.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Ptg.getEncodedSize(Ptg[])", "text": "This method will return the same result as {@link #getEncodedSizeWithoutArrayData(Ptg[])} if there are no array tokens present.", "tags": "METHOD", "url": "exp/getEncodedSize.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Ptg.getEncodedSizeWithoutArrayData(Ptg[])", "text": "Used to calculate value that should be encoded at the start of the encoded Ptg token array;", "tags": "METHOD", "url": "exp/getEncodedSizeWithoutArrayData.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Ptg.serializePtgs(Ptg[], byte[], int)", "text": "Writes the ptgs to the data buffer, starting at the specified offset. not<b> written by this method.", "tags": "METHOD", "url": "exp/serializePtgs.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Ptg.toFormulaString()", "text": "return a string representation of this token alone", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Ptg.toString()", "text": "Overridden toString method to ensure object hash is not printed", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Ptg.getRVAType()", "text": "Debug  diagnostic method to get this token's 'operand class' type.", "tags": "METHOD", "url": "exp/getRVAType.html"},
                {"title": "org.apache.poi.ss.formula.ptg.RangePtg.toFormulaString(String[])", "text": "implementation of method from OperationsPtg", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.ss.formula.ptg.Ref3DPtg.toFormulaString(FormulaRenderingWorkbook)", "text": "formulas. The sheet name will get properly delimited if required.", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.ss.formula.ptg.UnaryMinusPtg.toFormulaString(String[])", "text": "implementation of method from OperationsPtg", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.ss.formula.ptg.UnaryPlusPtg.toFormulaString(String[])", "text": "implementation of method from OperationsPtg", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.ss.formula.ptg.UnionPtg.toFormulaString(String[])", "text": "implementation of method from OperationsPtg", "tags": "METHOD", "url": "exp/toFormulaString.html"},
                {"title": "org.apache.poi.ss.formula.ptg.ValueOperatorPtg.isBaseToken()", "text": "All Operator s are base tokens (i.e. are not RVA classified)", "tags": "METHOD", "url": "exp/isBaseToken.html"},
                {"title": "org.apache.poi.ss.formula.SharedFormula.convertSharedFormulas(Ptg[], int, int)", "text": "Creates a non shared formula from the shared formula counterpart, i", "tags": "METHOD", "url": "exp/convertSharedFormulas.html"},
                {"title": "org.apache.poi.ss.formula.SheetNameFormatter.format(String)", "text": "Used to format sheet names as they would appear in cell formula expressions", "tags": "METHOD", "url": "exp/format.html"},
                {"title": "org.apache.poi.ss.formula.SheetNameFormatter.appendFormat(StringBuffer, String)", "text": "Convenience method for ({@link #format(String)}) when a StringBuffer is already available.", "tags": "METHOD", "url": "exp/appendFormat.html"},
                {"title": "org.apache.poi.ss.formula.TwoDEval.isRow()", "text": "the trivial case when the area has just a single cell.", "tags": "METHOD", "url": "exp/isRow.html"},
                {"title": "org.apache.poi.ss.formula.TwoDEval.isColumn()", "text": "the trivial case when the area has just a single cell.", "tags": "METHOD", "url": "exp/isColumn.html"},
                {"title": "org.apache.poi.ss.formula.udf.AggregatingUDFFinder.findFunction(String)", "text": "Returns executor by specified name. Returns  if function isn't contained by any registered tool pack.", "tags": "METHOD", "url": "exp/findFunction.html"},
                {"title": "org.apache.poi.ss.formula.udf.AggregatingUDFFinder.add(UDFFinder)", "text": "Add a new toolpack", "tags": "METHOD", "url": "exp/add.html"},
                {"title": "org.apache.poi.ss.formula.udf.UDFFinder.findFunction(String)", "text": "Returns executor by specified name. Returns  if the function name is unknown.", "tags": "METHOD", "url": "exp/findFunction.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator.clearAllCachedResultValues()", "text": "Should be called whenever there are changes to input cells in the evaluated workbook", "tags": "METHOD", "url": "exp/clearAllCachedResultValues.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator.notifyUpdateCell(EvaluationCell)", "text": "Should be called to tell the cell value cache that the specified (value or formula) cell has changed.", "tags": "METHOD", "url": "exp/notifyUpdateCell.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator.notifyDeleteCell(EvaluationCell)", "text": "Should be called to tell the cell value cache that the specified cell has just been deleted.", "tags": "METHOD", "url": "exp/notifyDeleteCell.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator.addExceptionInfo(NotImplementedException, int, int, int)", "text": "Adds the current cell reference to the exception for easier debugging", "tags": "METHOD", "url": "exp/addExceptionInfo.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator.countTokensToBeSkipped(Ptg[], int, int)", "text": "Calculates the number of tokens that the evaluator should skip upon reaching a tAttrSkip. to achieve the specified  skip distance.", "tags": "METHOD", "url": "exp/countTokensToBeSkipped.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator.dereferenceResult(ValueEval, int, int)", "text": "Dereferences a single value from any AreaEval or RefEval evaluation", "tags": "METHOD", "url": "exp/dereferenceResult.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator.getEvalForPtg(Ptg, OperationEvaluationContext)", "text": "returns an appropriate Eval impl instance for the Ptg", "tags": "METHOD", "url": "exp/getEvalForPtg.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator.setIgnoreMissingWorkbooks(boolean)", "text": "Whether to ignore missing references to external workbooks and", "tags": "METHOD", "url": "exp/setIgnoreMissingWorkbooks.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator.getSupportedFunctionNames()", "text": "Return a collection of functions that POI can evaluate", "tags": "METHOD", "url": "exp/getSupportedFunctionNames.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator.getNotSupportedFunctionNames()", "text": "Return a collection of functions that POI does not support", "tags": "METHOD", "url": "exp/getNotSupportedFunctionNames.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator.registerFunction(String, FreeRefFunction)", "text": "Register a ATP function in runtime.", "tags": "METHOD", "url": "exp/registerFunction.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluator.registerFunction(String, Function)", "text": "Register a function in runtime.", "tags": "METHOD", "url": "exp/registerFunction.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluatorProvider._getWorkbookEvaluator()", "text": "Provide the underlying WorkbookEvaluator", "tags": "METHOD", "url": "exp/_getWorkbookEvaluator.html"},
                {"title": "org.apache.poi.ss.formula.WorkbookEvaluatorProvider.getLastColumnName()", "text": "( or ).", "tags": "METHOD", "url": "exp/getLastColumnName.html"},
                {"title": "org.apache.poi.ss.usermodel.BorderFormatting.setBorderBottom(BorderStyle)", "text": "Set bottom border.", "tags": "METHOD", "url": "exp/setBorderBottom.html"},
                {"title": "org.apache.poi.ss.usermodel.BorderFormatting.setBorderDiagonal(BorderStyle)", "text": "Set diagonal border.", "tags": "METHOD", "url": "exp/setBorderDiagonal.html"},
                {"title": "org.apache.poi.ss.usermodel.BorderFormatting.setBorderLeft(BorderStyle)", "text": "Set left border.", "tags": "METHOD", "url": "exp/setBorderLeft.html"},
                {"title": "org.apache.poi.ss.usermodel.BorderFormatting.setBorderRight(BorderStyle)", "text": "Set right border.", "tags": "METHOD", "url": "exp/setBorderRight.html"},
                {"title": "org.apache.poi.ss.usermodel.BorderFormatting.setBorderTop(BorderStyle)", "text": "Set top border.", "tags": "METHOD", "url": "exp/setBorderTop.html"},
                {"title": "org.apache.poi.ss.usermodel.BuiltinFormats.getBuiltinFormat(int)", "text": "Get the format string that matches the given format index", "tags": "METHOD", "url": "exp/getBuiltinFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.BuiltinFormats.getBuiltinFormat(String)", "text": "Get the format index that matches the given format string.<br> Automatically converts \"text\" to excel's format string to represent text.", "tags": "METHOD", "url": "exp/getBuiltinFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getColumnIndex()", "text": "Returns column index of this cell", "tags": "METHOD", "url": "exp/getColumnIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getRowIndex()", "text": "Returns row index of a row in the sheet that contains this cell", "tags": "METHOD", "url": "exp/getRowIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getSheet()", "text": "Returns the sheet this cell belongs to", "tags": "METHOD", "url": "exp/getSheet.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getRow()", "text": "Returns the Row this cell belongs to", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setCellType(CellType)", "text": "Set the cells type (numeric, formula or string). stop!", "tags": "METHOD", "url": "exp/setCellType.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getCellTypeEnum()", "text": "Return the cell type. Will be renamed to  when we make the CellType enum transition in POI 4.0. See bug 59791.", "tags": "METHOD", "url": "exp/getCellTypeEnum.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getCachedFormulaResultTypeEnum()", "text": "Only valid for formula cells", "tags": "METHOD", "url": "exp/getCachedFormulaResultTypeEnum.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setCellValue(double)", "text": "Set a numeric value for the cell", "tags": "METHOD", "url": "exp/setCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setCellValue(Date)", "text": "Notecell style", "tags": "METHOD", "url": "exp/setCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setCellValue(Calendar)", "text": "setCellValue(value", "tags": "METHOD", "url": "exp/setCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setCellValue(RichTextString)", "text": "Set a rich string value for the cell", "tags": "METHOD", "url": "exp/setCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setCellValue(String)", "text": "Set a string value for the cell", "tags": "METHOD", "url": "exp/setCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setCellFormula(String)", "text": "Sets formula for this cell. If the argument is  then the current formula is removed.", "tags": "METHOD", "url": "exp/setCellFormula.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getCellFormula()", "text": "Return a formula for the cell, for example,", "tags": "METHOD", "url": "exp/getCellFormula.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getNumericCellValue()", "text": "Get the value of the cell as a number.", "tags": "METHOD", "url": "exp/getNumericCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getDateCellValue()", "text": "Get the value of the cell as a date.", "tags": "METHOD", "url": "exp/getDateCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getRichStringCellValue()", "text": "Get the value of the cell as a XSSFRichTextString", "tags": "METHOD", "url": "exp/getRichStringCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getStringCellValue()", "text": "Get the value of the cell as a string", "tags": "METHOD", "url": "exp/getStringCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setCellValue(boolean)", "text": "Set a boolean value for the cell", "tags": "METHOD", "url": "exp/setCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setCellErrorValue(byte)", "text": "Set a error value for the cell", "tags": "METHOD", "url": "exp/setCellErrorValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getBooleanCellValue()", "text": "Get the value of the cell as a boolean. is not {@link CellType#BOOLEAN}, {@link CellType#BLANK} or {@link CellType#FORMULA}", "tags": "METHOD", "url": "exp/getBooleanCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getErrorCellValue()", "text": "Get the value of the cell as an error code.", "tags": "METHOD", "url": "exp/getErrorCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setCellStyle(CellStyle)", "text": "If the value is null then the style information is removed causing the cell to used the default workbook style.", "tags": "METHOD", "url": "exp/setCellStyle.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getCellStyle()", "text": "Return the cell's style.", "tags": "METHOD", "url": "exp/getCellStyle.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setAsActiveCell()", "text": "Sets this cell as the active cell for the worksheet", "tags": "METHOD", "url": "exp/setAsActiveCell.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getAddress()", "text": "Gets the address of this cell", "tags": "METHOD", "url": "exp/getAddress.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setCellComment(Comment)", "text": "Assign a comment to this cell", "tags": "METHOD", "url": "exp/setCellComment.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getCellComment()", "text": "Returns comment associated with this cell", "tags": "METHOD", "url": "exp/getCellComment.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.removeCellComment()", "text": "Removes the comment for this cell, if there is one.", "tags": "METHOD", "url": "exp/removeCellComment.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.setHyperlink(Hyperlink)", "text": "Assign a hyperlink to this cell", "tags": "METHOD", "url": "exp/setHyperlink.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.removeHyperlink()", "text": "Removes the hyperlink for this cell, if there is one.", "tags": "METHOD", "url": "exp/removeHyperlink.html"},
                {"title": "org.apache.poi.ss.usermodel.Cell.getArrayFormulaRange()", "text": "Only valid for array formula cells", "tags": "METHOD", "url": "exp/getArrayFormulaRange.html"},
                {"title": "org.apache.poi.ss.usermodel.Builder.isCondenseRows()", "text": "If condenseRows is true, a discontinuities in srcRows will be removed when copied to destination", "tags": "METHOD", "url": "exp/isCondenseRows.html"},
                {"title": "org.apache.poi.ss.usermodel.CellRange.size()", "text": "Gets the number of cells in this range.", "tags": "METHOD", "url": "exp/size.html"},
                {"title": "org.apache.poi.ss.usermodel.CellRange.getReferenceText()", "text": "like single cell references (e.g. 'A1' instead of 'A1:A1').", "tags": "METHOD", "url": "exp/getReferenceText.html"},
                {"title": "org.apache.poi.ss.usermodel.CellRange.getCells()", "text": "array dimension is the row index (values ) and the second dimension is the column index (values )", "tags": "METHOD", "url": "exp/getCells.html"},
                {"title": "org.apache.poi.ss.usermodel.CellRange.iterator()", "text": "with all cells in the first row followed by all cells in the next row, etc.", "tags": "METHOD", "url": "exp/iterator.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getDataFormat()", "text": "get the index of the data format. Built in formats are defined at {@link BuiltinFormats}.", "tags": "METHOD", "url": "exp/getDataFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getDataFormatString()", "text": "Get the format string", "tags": "METHOD", "url": "exp/getDataFormatString.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getFontIndex()", "text": "gets the index of the font for this style", "tags": "METHOD", "url": "exp/getFontIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setQuotePrefixed(boolean)", "text": "Turn on or off \"Quote Prefix\" or \"123 Prefix\" for the style,", "tags": "METHOD", "url": "exp/setQuotePrefixed.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getQuotePrefixed()", "text": "Is \"Quote Prefix\" or \"123 Prefix\" enabled for the cell?", "tags": "METHOD", "url": "exp/getQuotePrefixed.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setAlignment(HorizontalAlignment)", "text": "set the type of horizontal alignment for the cell", "tags": "METHOD", "url": "exp/setAlignment.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getAlignmentEnum()", "text": "get the type of horizontal alignment for the cell", "tags": "METHOD", "url": "exp/getAlignmentEnum.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setVerticalAlignment(VerticalAlignment)", "text": "set the type of vertical alignment for the cell", "tags": "METHOD", "url": "exp/setVerticalAlignment.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getVerticalAlignmentEnum()", "text": "get the type of vertical alignment for the cell", "tags": "METHOD", "url": "exp/getVerticalAlignmentEnum.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setRotation(short)", "text": "set the degree of rotation for the text in the cell", "tags": "METHOD", "url": "exp/setRotation.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getRotation()", "text": "get the degree of rotation for the text in the cell", "tags": "METHOD", "url": "exp/getRotation.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setBorderLeft(BorderStyle)", "text": "set the type of border to use for the left border of the cell", "tags": "METHOD", "url": "exp/setBorderLeft.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getBorderLeftEnum()", "text": "get the type of border to use for the left border of the cell", "tags": "METHOD", "url": "exp/getBorderLeftEnum.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setBorderRight(BorderStyle)", "text": "set the type of border to use for the right border of the cell", "tags": "METHOD", "url": "exp/setBorderRight.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getBorderRightEnum()", "text": "get the type of border to use for the right border of the cell", "tags": "METHOD", "url": "exp/getBorderRightEnum.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setBorderTop(BorderStyle)", "text": "set the type of border to use for the top border of the cell", "tags": "METHOD", "url": "exp/setBorderTop.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getBorderTopEnum()", "text": "get the type of border to use for the top border of the cell", "tags": "METHOD", "url": "exp/getBorderTopEnum.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setBorderBottom(BorderStyle)", "text": "set the type of border to use for the bottom border of the cell", "tags": "METHOD", "url": "exp/setBorderBottom.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getBorderBottomEnum()", "text": "get the type of border to use for the bottom border of the cell", "tags": "METHOD", "url": "exp/getBorderBottomEnum.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setLeftBorderColor(short)", "text": "set the color to use for the left border", "tags": "METHOD", "url": "exp/setLeftBorderColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getLeftBorderColor()", "text": "get the color to use for the left border", "tags": "METHOD", "url": "exp/getLeftBorderColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setRightBorderColor(short)", "text": "set the color to use for the right border", "tags": "METHOD", "url": "exp/setRightBorderColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getRightBorderColor()", "text": "get the color to use for the left border", "tags": "METHOD", "url": "exp/getRightBorderColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setTopBorderColor(short)", "text": "set the color to use for the top border", "tags": "METHOD", "url": "exp/setTopBorderColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getTopBorderColor()", "text": "get the color to use for the top border", "tags": "METHOD", "url": "exp/getTopBorderColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setBottomBorderColor(short)", "text": "set the color to use for the bottom border", "tags": "METHOD", "url": "exp/setBottomBorderColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getBottomBorderColor()", "text": "get the color to use for the left border", "tags": "METHOD", "url": "exp/getBottomBorderColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setFillPattern(FillPatternType)", "text": "setting to one fills the cell with the foreground color... No idea about other values", "tags": "METHOD", "url": "exp/setFillPattern.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getFillPatternEnum()", "text": "get the fill pattern (??) - set to 1 to fill with foreground color", "tags": "METHOD", "url": "exp/getFillPatternEnum.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getFillBackgroundColor()", "text": "get the background fill color, if the fill is defined with an indexed color.", "tags": "METHOD", "url": "exp/getFillBackgroundColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getFillBackgroundColorColor()", "text": "Gets the color object representing the current", "tags": "METHOD", "url": "exp/getFillBackgroundColorColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setFillForegroundColor(short)", "text": "set the foreground fill color", "tags": "METHOD", "url": "exp/setFillForegroundColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getFillForegroundColor()", "text": "get the foreground fill color, if the fill is defined with an indexed color.", "tags": "METHOD", "url": "exp/getFillForegroundColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getFillForegroundColorColor()", "text": "Gets the color object representing the current", "tags": "METHOD", "url": "exp/getFillForegroundColorColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.cloneStyleFrom(CellStyle)", "text": "Clones all the style information from another", "tags": "METHOD", "url": "exp/cloneStyleFrom.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.setShrinkToFit(boolean)", "text": "Controls if the Cell should be auto-sized to shrink to fit if the text is too long", "tags": "METHOD", "url": "exp/setShrinkToFit.html"},
                {"title": "org.apache.poi.ss.usermodel.CellStyle.getShrinkToFit()", "text": "Should the Cell be auto-sized by Excel to shrink it to fit if this text is too long?", "tags": "METHOD", "url": "exp/getShrinkToFit.html"},
                {"title": "org.apache.poi.ss.usermodel.CellValue.getCellTypeEnum()", "text": "Return the cell type. Will be renamed to  when we make the CellType enum transition in POI 4.0. See bug 59791.", "tags": "METHOD", "url": "exp/getCellTypeEnum.html"},
                {"title": "org.apache.poi.ss.usermodel.Chart.deleteLegend()", "text": "Delete current chart legend.", "tags": "METHOD", "url": "exp/deleteLegend.html"},
                {"title": "org.apache.poi.ss.usermodel.Chart.plot(ChartData, ChartAxis)", "text": "Plots specified data on the chart.", "tags": "METHOD", "url": "exp/plot.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartAxis.crossAxis(ChartAxis)", "text": "Declare this axis cross another axis.", "tags": "METHOD", "url": "exp/crossAxis.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartData.fillChart(Chart, ChartAxis)", "text": "Fills a charts with data specified by implementation.", "tags": "METHOD", "url": "exp/fillChart.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartDataSource.getPointCount()", "text": "Return number of points contained by data source.", "tags": "METHOD", "url": "exp/getPointCount.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartDataSource.getPointAt(int)", "text": "Returns point value at specified index. parameter not in range {@code 0 <= index <= pointCount}", "tags": "METHOD", "url": "exp/getPointAt.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartDataSource.isReference()", "text": "Returns {@code true} if charts data source is valid cell range.", "tags": "METHOD", "url": "exp/isReference.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartDataSource.isNumeric()", "text": "Returns {@code true} if data source points should be treated as numbers.", "tags": "METHOD", "url": "exp/isNumeric.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartDataSource.getFormulaString()", "text": "Returns formula representation of the data source", "tags": "METHOD", "url": "exp/getFormulaString.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartLegend.setOverlay(boolean)", "text": "If true the legend is positioned over the chart area otherwise", "tags": "METHOD", "url": "exp/setOverlay.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartSeries.setTitle(String)", "text": "Sets the title of the series as a string literal.", "tags": "METHOD", "url": "exp/setTitle.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ChartSeries.setTitle(CellReference)", "text": "Sets the title of the series as a cell reference.", "tags": "METHOD", "url": "exp/setTitle.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.setTarget(LayoutTarget)", "text": "Sets the layout target.", "tags": "METHOD", "url": "exp/setTarget.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.getTarget()", "text": "Returns current layout target.", "tags": "METHOD", "url": "exp/getTarget.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.setXMode(LayoutMode)", "text": "Sets the x-coordinate layout mode.", "tags": "METHOD", "url": "exp/setXMode.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.getXMode()", "text": "Returns current x-coordinnate layout mode.", "tags": "METHOD", "url": "exp/getXMode.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.setYMode(LayoutMode)", "text": "Sets the y-coordinate layout mode.", "tags": "METHOD", "url": "exp/setYMode.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.getYMode()", "text": "Returns current y-coordinate layout mode.", "tags": "METHOD", "url": "exp/getYMode.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.getX()", "text": "Returns the x location of the chart element. not set.", "tags": "METHOD", "url": "exp/getX.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.setX(double)", "text": "Specifies the x location (left) of the chart element as a", "tags": "METHOD", "url": "exp/setX.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.getY()", "text": "Returns current y location of the chart element. set.", "tags": "METHOD", "url": "exp/getY.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.setY(double)", "text": "Specifies the y location (top) of the chart element as a", "tags": "METHOD", "url": "exp/setY.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.setWidthMode(LayoutMode)", "text": "Specifies how to interpret the Width element for this manual layout.", "tags": "METHOD", "url": "exp/setWidthMode.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.getWidthMode()", "text": "Returns current width mode of this manual layout.", "tags": "METHOD", "url": "exp/getWidthMode.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.setHeightMode(LayoutMode)", "text": "Specifies how to interpret the Height element for this manual layout.", "tags": "METHOD", "url": "exp/setHeightMode.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.getHeightMode()", "text": "Returns current height mode of this", "tags": "METHOD", "url": "exp/getHeightMode.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.setWidthRatio(double)", "text": "Specifies the width (if Width Mode is Factor) or right (if", "tags": "METHOD", "url": "exp/setWidthRatio.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.getWidthRatio()", "text": "Returns current fraction of the width of the chart.", "tags": "METHOD", "url": "exp/getWidthRatio.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.setHeightRatio(double)", "text": "Specifies the height (if Height Mode is Factor) or bottom (if", "tags": "METHOD", "url": "exp/setHeightRatio.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManualLayout.getHeightRatio()", "text": "Returns current fraction of the height of the chart.", "tags": "METHOD", "url": "exp/getHeightRatio.html"},
                {"title": "org.apache.poi.ss.usermodel.charts.ManuallyPositionable.getManualLayout()", "text": "Returns manual layout for the chart element.", "tags": "METHOD", "url": "exp/getManualLayout.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.byId(int)", "text": "return the AnchorType corresponding to the code", "tags": "METHOD", "url": "exp/byId.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.getCol1()", "text": "Returns the column (0 based) of the first cell.", "tags": "METHOD", "url": "exp/getCol1.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.setCol1(int)", "text": "Sets the column (0 based) of the first cell.", "tags": "METHOD", "url": "exp/setCol1.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.getCol2()", "text": "Returns the column (0 based) of the second cell.", "tags": "METHOD", "url": "exp/getCol2.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.setCol2(int)", "text": "Returns the column (0 based) of the second cell.", "tags": "METHOD", "url": "exp/setCol2.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.getRow1()", "text": "Returns the row (0 based) of the first cell.", "tags": "METHOD", "url": "exp/getRow1.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.setRow1(int)", "text": "Returns the row (0 based) of the first cell.", "tags": "METHOD", "url": "exp/setRow1.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.getRow2()", "text": "Returns the row (0 based) of the second cell.", "tags": "METHOD", "url": "exp/getRow2.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.setRow2(int)", "text": "Returns the row (0 based) of the first cell.", "tags": "METHOD", "url": "exp/setRow2.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.getDx1()", "text": "Returns the x coordinate within the first cell", "tags": "METHOD", "url": "exp/getDx1.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.setDx1(int)", "text": "Sets the x coordinate within the first cell", "tags": "METHOD", "url": "exp/setDx1.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.getDy1()", "text": "Returns the y coordinate within the first cell", "tags": "METHOD", "url": "exp/getDy1.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.setDy1(int)", "text": "Sets the y coordinate within the first cell", "tags": "METHOD", "url": "exp/setDy1.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.getDy2()", "text": "Sets the y coordinate within the second cell", "tags": "METHOD", "url": "exp/getDy2.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.setDy2(int)", "text": "Sets the y coordinate within the second cell", "tags": "METHOD", "url": "exp/setDy2.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.getDx2()", "text": "Returns the x coordinate within the second cell", "tags": "METHOD", "url": "exp/getDx2.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.setDx2(int)", "text": "Sets the x coordinate within the second cell", "tags": "METHOD", "url": "exp/setDx2.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.setAnchorType(AnchorType)", "text": "Sets the anchor type", "tags": "METHOD", "url": "exp/setAnchorType.html"},
                {"title": "org.apache.poi.ss.usermodel.ClientAnchor.getAnchorType()", "text": "Gets the anchor type Changed from returning an int to an enum in POI 3.14 beta 1.", "tags": "METHOD", "url": "exp/getAnchorType.html"},
                {"title": "org.apache.poi.ss.usermodel.ColorScaleFormatting.getNumControlPoints()", "text": "How many control points should be used to map the colours? Normally 2 or 3", "tags": "METHOD", "url": "exp/getNumControlPoints.html"},
                {"title": "org.apache.poi.ss.usermodel.ColorScaleFormatting.setNumControlPoints(int)", "text": "Sets the number of control points to use to map", "tags": "METHOD", "url": "exp/setNumControlPoints.html"},
                {"title": "org.apache.poi.ss.usermodel.ColorScaleFormatting.getColors()", "text": "Gets the list of colours that are interpolated between.", "tags": "METHOD", "url": "exp/getColors.html"},
                {"title": "org.apache.poi.ss.usermodel.ColorScaleFormatting.setColors(Color[])", "text": "Sets the list of colours that are interpolated between. The number must match {@link #getNumControlPoints()}", "tags": "METHOD", "url": "exp/setColors.html"},
                {"title": "org.apache.poi.ss.usermodel.ColorScaleFormatting.getThresholds()", "text": "Gets the list of thresholds", "tags": "METHOD", "url": "exp/getThresholds.html"},
                {"title": "org.apache.poi.ss.usermodel.ColorScaleFormatting.setThresholds(ConditionalFormattingThreshold[])", "text": "Sets the of thresholds. The number must match {@link #getNumControlPoints()}", "tags": "METHOD", "url": "exp/setThresholds.html"},
                {"title": "org.apache.poi.ss.usermodel.ColorScaleFormatting.createThreshold()", "text": "Creates a new, empty Threshold", "tags": "METHOD", "url": "exp/createThreshold.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.setVisible(boolean)", "text": "Sets whether this comment is visible.", "tags": "METHOD", "url": "exp/setVisible.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.isVisible()", "text": "Returns whether this comment is visible.", "tags": "METHOD", "url": "exp/isVisible.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.getAddress()", "text": "Get the address of the cell that this comment is attached to", "tags": "METHOD", "url": "exp/getAddress.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.setAddress(CellAddress)", "text": "Set the address of the cell that this comment is attached to", "tags": "METHOD", "url": "exp/setAddress.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.setAddress(int, int)", "text": "Set the address of the cell that this comment is attached to", "tags": "METHOD", "url": "exp/setAddress.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.getRow()", "text": "Return the row of the cell that contains the comment", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.setRow(int)", "text": "Set the row of the cell that contains the comment", "tags": "METHOD", "url": "exp/setRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.getColumn()", "text": "Return the column of the cell that contains the comment", "tags": "METHOD", "url": "exp/getColumn.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.setColumn(int)", "text": "Set the column of the cell that contains the comment", "tags": "METHOD", "url": "exp/setColumn.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.getAuthor()", "text": "Name of the original comment author", "tags": "METHOD", "url": "exp/getAuthor.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.setAuthor(String)", "text": "Name of the original comment author", "tags": "METHOD", "url": "exp/setAuthor.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.getString()", "text": "Fetches the rich text string of the comment", "tags": "METHOD", "url": "exp/getString.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.setString(RichTextString)", "text": "Sets the rich text string used by this comment.", "tags": "METHOD", "url": "exp/setString.html"},
                {"title": "org.apache.poi.ss.usermodel.Comment.getClientAnchor()", "text": "Return defines position of this anchor in the sheet", "tags": "METHOD", "url": "exp/getClientAnchor.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormatting.setFormattingRanges(CellRangeAddress[])", "text": "Sets the cell ranges the rule conditional formatting must be applied to.", "tags": "METHOD", "url": "exp/setFormattingRanges.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormatting.setRule(int, ConditionalFormattingRule)", "text": "Replaces an existing Conditional Formatting rule at position idx", "tags": "METHOD", "url": "exp/setRule.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormatting.addRule(ConditionalFormattingRule)", "text": "Add a Conditional Formatting rule. Excel pre-2007 allows to create up to 3 Conditional Formatting rules.", "tags": "METHOD", "url": "exp/addRule.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingRule.createBorderFormatting()", "text": "Create a new border formatting structure if it does not exist, otherwise just return existing object.", "tags": "METHOD", "url": "exp/createBorderFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingRule.createFontFormatting()", "text": "Create a new font formatting structure if it does not exist, otherwise just return existing object.", "tags": "METHOD", "url": "exp/createFontFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingRule.createPatternFormatting()", "text": "Create a new pattern formatting structure if it does not exist, otherwise just return existing object.", "tags": "METHOD", "url": "exp/createPatternFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingRule.getConditionType()", "text": "Type of conditional formatting rule.", "tags": "METHOD", "url": "exp/getConditionType.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingRule.getComparisonOperation()", "text": "The comparison function used when the type of conditional formatting is set to {@link ConditionType#CELL_VALUE_IS}", "tags": "METHOD", "url": "exp/getComparisonOperation.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingRule.getFormula1()", "text": "The formula used to evaluate the first operand for the conditional formatting rule.", "tags": "METHOD", "url": "exp/getFormula1.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingRule.getFormula2()", "text": "The formula used to evaluate the second operand of the comparison when", "tags": "METHOD", "url": "exp/getFormula2.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingThreshold.getRangeType()", "text": "Get the Range Type used", "tags": "METHOD", "url": "exp/getRangeType.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingThreshold.setRangeType(RangeType)", "text": "Changes the Range Type used", "tags": "METHOD", "url": "exp/setRangeType.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingThreshold.getFormula()", "text": "Formula to use to calculate the threshold, or  if no formula", "tags": "METHOD", "url": "exp/getFormula.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingThreshold.setFormula(String)", "text": "Sets the formula used to calculate the threshold, or unsets it if  is given.", "tags": "METHOD", "url": "exp/setFormula.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingThreshold.getValue()", "text": "Gets the value used for the threshold, or if there isn't one.", "tags": "METHOD", "url": "exp/getValue.html"},
                {"title": "org.apache.poi.ss.usermodel.ConditionalFormattingThreshold.setValue(Double)", "text": "Sets the value used for the threshold", "tags": "METHOD", "url": "exp/setValue.html"},
                {"title": "org.apache.poi.ss.usermodel.CreationHelper.createRichTextString(String)", "text": "Creates a new RichTextString instance", "tags": "METHOD", "url": "exp/createRichTextString.html"},
                {"title": "org.apache.poi.ss.usermodel.CreationHelper.createDataFormat()", "text": "Creates a new DataFormat instance", "tags": "METHOD", "url": "exp/createDataFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.CreationHelper.createHyperlink(HyperlinkType)", "text": "Creates a new Hyperlink, of the given type", "tags": "METHOD", "url": "exp/createHyperlink.html"},
                {"title": "org.apache.poi.ss.usermodel.CreationHelper.createFormulaEvaluator()", "text": "Creates FormulaEvaluator - an object that evaluates formula cells.", "tags": "METHOD", "url": "exp/createFormulaEvaluator.html"},
                {"title": "org.apache.poi.ss.usermodel.CreationHelper.createExtendedColor()", "text": "Creates a XSSF-style Color object, used for extended sheet formattings and conditional formattings", "tags": "METHOD", "url": "exp/createExtendedColor.html"},
                {"title": "org.apache.poi.ss.usermodel.CreationHelper.createClientAnchor()", "text": "Creates a ClientAnchor. Use this object to position drawing object in a sheet", "tags": "METHOD", "url": "exp/createClientAnchor.html"},
                {"title": "org.apache.poi.ss.usermodel.DataBarFormatting.isLeftToRight()", "text": "Is the bar drawn from Left-to-Right, or from Right-to-Left", "tags": "METHOD", "url": "exp/isLeftToRight.html"},
                {"title": "org.apache.poi.ss.usermodel.DataBarFormatting.setLeftToRight(boolean)", "text": "Control if the bar is drawn from Left-to-Right, or from Right-to-Left", "tags": "METHOD", "url": "exp/setLeftToRight.html"},
                {"title": "org.apache.poi.ss.usermodel.DataBarFormatting.isIconOnly()", "text": "Should Icon + Value be displayed, or only the Icon?", "tags": "METHOD", "url": "exp/isIconOnly.html"},
                {"title": "org.apache.poi.ss.usermodel.DataBarFormatting.setIconOnly(boolean)", "text": "Control if only the Icon is shown, or Icon + Value", "tags": "METHOD", "url": "exp/setIconOnly.html"},
                {"title": "org.apache.poi.ss.usermodel.DataBarFormatting.getWidthMin()", "text": "How much of the cell width, in %, should be given to the min value?", "tags": "METHOD", "url": "exp/getWidthMin.html"},
                {"title": "org.apache.poi.ss.usermodel.DataBarFormatting.getWidthMax()", "text": "How much of the cell width, in %, should be given to the max value?", "tags": "METHOD", "url": "exp/getWidthMax.html"},
                {"title": "org.apache.poi.ss.usermodel.DataBarFormatting.getMinThreshold()", "text": "The threshold that defines \"everything from here down is minimum\"", "tags": "METHOD", "url": "exp/getMinThreshold.html"},
                {"title": "org.apache.poi.ss.usermodel.DataBarFormatting.getMaxThreshold()", "text": "The threshold that defines \"everything from here up is maximum\"", "tags": "METHOD", "url": "exp/getMaxThreshold.html"},
                {"title": "org.apache.poi.ss.usermodel.DataFormat.getFormat(String)", "text": "get the format index that matches the given format string. Creates a new format if one is not found.  Aliases text to the proper format.", "tags": "METHOD", "url": "exp/getFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.DataFormat.getFormat(short)", "text": "get the format string that matches the given format index", "tags": "METHOD", "url": "exp/getFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.getFormat(Cell)", "text": "Return a Format for the given cell if one exists, otherwise try to", "tags": "METHOD", "url": "exp/getFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.createFormat(Cell)", "text": "Create and return a Format based on the format string from a  cell's style. If the pattern cannot be parsed, return a default pattern.", "tags": "METHOD", "url": "exp/createFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.getDefaultFormat(Cell)", "text": "Returns a default format for a cell.", "tags": "METHOD", "url": "exp/getDefaultFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.performDateFormatting(Date, Format)", "text": "Performs Excel-style date formatting, using the supplied Date and format", "tags": "METHOD", "url": "exp/performDateFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.getFormattedDateString(Cell)", "text": "Returns the formatted value of an Excel date as a  based", "tags": "METHOD", "url": "exp/getFormattedDateString.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.getFormattedNumberString(Cell)", "text": "Returns the formatted value of an Excel number as a", "tags": "METHOD", "url": "exp/getFormattedNumberString.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.formatRawCellContents(double, int, String)", "text": "Formats the given raw cell value, based on the supplied format index and string, according to excel style rules.", "tags": "METHOD", "url": "exp/formatRawCellContents.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.formatRawCellContents(double, int, String, boolean)", "text": "Formats the given raw cell value, based on the supplied format index and string, according to excel style rules.", "tags": "METHOD", "url": "exp/formatRawCellContents.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.formatCellValue(Cell)", "text": "String", "tags": "METHOD", "url": "exp/formatCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.formatCellValue(Cell, FormulaEvaluator)", "text": "String", "tags": "METHOD", "url": "exp/formatCellValue.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.setDefaultNumberFormat(Format)", "text": "Note:General java.text.Format#formatNumber", "tags": "METHOD", "url": "exp/setDefaultNumberFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.addFormat(String, Format)", "text": "Adds a new format to the available formats. java.text.Format#formatNumber", "tags": "METHOD", "url": "exp/addFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.setExcelStyleRoundingMode(DecimalFormat)", "text": "Enables excel style rounding mode (round half up) on the Decimal Format given.", "tags": "METHOD", "url": "exp/setExcelStyleRoundingMode.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.setExcelStyleRoundingMode(DecimalFormat, RoundingMode)", "text": "Enables custom rounding mode on the given Decimal Format.", "tags": "METHOD", "url": "exp/setExcelStyleRoundingMode.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.getLocaleChangedObservable()", "text": "If the Locale has been changed via {@link LocaleUtil#setUserLocale(Locale)} the stored", "tags": "METHOD", "url": "exp/getLocaleChangedObservable.html"},
                {"title": "org.apache.poi.ss.usermodel.LocaleChangeObservable.update(Observable, Object)", "text": "Update formats when locale has been changed", "tags": "METHOD", "url": "exp/update.html"},
                {"title": "org.apache.poi.ss.usermodel.SSNFormat.format(Number)", "text": "Format a number as an SSN", "tags": "METHOD", "url": "exp/format.html"},
                {"title": "org.apache.poi.ss.usermodel.ZipPlusFourFormat.format(Number)", "text": "Format a number as Zip + 4", "tags": "METHOD", "url": "exp/format.html"},
                {"title": "org.apache.poi.ss.usermodel.PhoneFormat.format(Number)", "text": "Format a number as a phone number", "tags": "METHOD", "url": "exp/format.html"},
                {"title": "org.apache.poi.ss.usermodel.ErrorStyle.setErrorStyle(int)", "text": "Sets the error style for error box", "tags": "METHOD", "url": "exp/setErrorStyle.html"},
                {"title": "org.apache.poi.ss.usermodel.ErrorStyle.getErrorStyle()", "text": "o", "tags": "METHOD", "url": "exp/getErrorStyle.html"},
                {"title": "org.apache.poi.ss.usermodel.ErrorStyle.setEmptyCellAllowed(boolean)", "text": "Sets if this object allows empty as a valid value otherwise", "tags": "METHOD", "url": "exp/setEmptyCellAllowed.html"},
                {"title": "org.apache.poi.ss.usermodel.ErrorStyle.getEmptyCellAllowed()", "text": "Retrieve the settings for empty cells allowed otherwise", "tags": "METHOD", "url": "exp/getEmptyCellAllowed.html"},
                {"title": "org.apache.poi.ss.usermodel.ErrorStyle.setSuppressDropDownArrow(boolean)", "text": "Useful for list validation objects ", "tags": "METHOD", "url": "exp/setSuppressDropDownArrow.html"},
                {"title": "org.apache.poi.ss.usermodel.ErrorStyle.getSuppressDropDownArrow()", "text": "Useful only list validation objects ", "tags": "METHOD", "url": "exp/getSuppressDropDownArrow.html"},
                {"title": "org.apache.poi.ss.usermodel.ErrorStyle.setShowPromptBox(boolean)", "text": "Sets the behaviour when a cell which belongs to this object is selected", "tags": "METHOD", "url": "exp/setShowPromptBox.html"},
                {"title": "org.apache.poi.ss.usermodel.ErrorStyle.setShowErrorBox(boolean)", "text": "Sets the behaviour when an invalid value is entered", "tags": "METHOD", "url": "exp/setShowErrorBox.html"},
                {"title": "org.apache.poi.ss.usermodel.ErrorStyle.createPromptBox(String, String)", "text": "Sets the title and text for the prompt box ", "tags": "METHOD", "url": "exp/createPromptBox.html"},
                {"title": "org.apache.poi.ss.usermodel.ErrorStyle.createErrorBox(String, String)", "text": "Sets the title and text for the error box ", "tags": "METHOD", "url": "exp/createErrorBox.html"},
                {"title": "org.apache.poi.ss.usermodel.DataValidationConstraint.setOperator(int)", "text": "Sets the comparison operator for this constraint", "tags": "METHOD", "url": "exp/setOperator.html"},
                {"title": "org.apache.poi.ss.usermodel.DataValidationConstraint.getExplicitListValues()", "text": "If validation type is {@link ValidationType#LIST}", "tags": "METHOD", "url": "exp/getExplicitListValues.html"},
                {"title": "org.apache.poi.ss.usermodel.DataValidationConstraint.setFormula1(String)", "text": "Sets a formula for expression 1.", "tags": "METHOD", "url": "exp/setFormula1.html"},
                {"title": "org.apache.poi.ss.usermodel.DataValidationConstraint.setFormula2(String)", "text": "Sets a formula for expression 2.", "tags": "METHOD", "url": "exp/setFormula2.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getExcelDate(Date)", "text": "Given a Date, converts it into a double representing its internal Excel representation, which is the number of days since 111900. Fractional days represent hours, minutes, and seconds.", "tags": "METHOD", "url": "exp/getExcelDate.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getExcelDate(Date, boolean)", "text": "Given a Date, converts it into a double representing its internal Excel representation, which is the number of days since 111900. Fractional days represent hours, minutes, and seconds.", "tags": "METHOD", "url": "exp/getExcelDate.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getExcelDate(Calendar, boolean)", "text": "Given a Date in the form of a Calendar, converts it into a double", "tags": "METHOD", "url": "exp/getExcelDate.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getJavaDate(double, TimeZone)", "text": "Given an Excel date with using 1900 date windowing, and", "tags": "METHOD", "url": "exp/getJavaDate.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getJavaDate(double)", "text": "Given an Excel date with using 1900 date windowing, and", "tags": "METHOD", "url": "exp/getJavaDate.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getJavaDate(double, boolean, TimeZone)", "text": "Given an Excel date with either 1900 or 1904 date windowing,", "tags": "METHOD", "url": "exp/getJavaDate.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getJavaDate(double, boolean, TimeZone, boolean)", "text": "Given an Excel date with either 1900 or 1904 date windowing,", "tags": "METHOD", "url": "exp/getJavaDate.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getJavaDate(double, boolean)", "text": "Given an Excel date with either 1900 or 1904 date windowing,", "tags": "METHOD", "url": "exp/getJavaDate.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getJavaCalendar(double)", "text": "Get EXCEL date as Java Calendar (with default time zone). This is like {@link #getJavaDate(double)} but returns a Calendar object.", "tags": "METHOD", "url": "exp/getJavaCalendar.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getJavaCalendar(double, boolean)", "text": "Get EXCEL date as Java Calendar (with default time zone)", "tags": "METHOD", "url": "exp/getJavaCalendar.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getJavaCalendarUTC(double, boolean)", "text": "Get EXCEL date as Java Calendar with UTC time zone", "tags": "METHOD", "url": "exp/getJavaCalendarUTC.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getJavaCalendar(double, boolean, TimeZone)", "text": "Get EXCEL date as Java Calendar with given time zone. or false if using 1900 date windowing.", "tags": "METHOD", "url": "exp/getJavaCalendar.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.getJavaCalendar(double, boolean, TimeZone, boolean)", "text": "Get EXCEL date as Java Calendar with given time zone. or false if using 1900 date windowing.", "tags": "METHOD", "url": "exp/getJavaCalendar.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.isInternalDateFormat(int)", "text": "Given a format ID this will check whether the format represents an internal excel date format or not.", "tags": "METHOD", "url": "exp/isInternalDateFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(Cell)", "text": "Check if a cell contains a date", "tags": "METHOD", "url": "exp/isCellDateFormatted.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.isCellInternalDateFormatted(Cell)", "text": "Check if a cell contains a date, checking only for internal", "tags": "METHOD", "url": "exp/isCellInternalDateFormatted.html"},
                {"title": "org.apache.poi.ss.usermodel.DateUtil.absoluteDay(Calendar, boolean)", "text": "Given a Calendar, return the number of days since 19001231.", "tags": "METHOD", "url": "exp/absoluteDay.html"},
                {"title": "org.apache.poi.ss.usermodel.FormatException.convertTime(String)", "text": "Converts a string of format \"HH:MM\" or \"HH:MM:SS\" to its (Excel) numeric equivalent", "tags": "METHOD", "url": "exp/convertTime.html"},
                {"title": "org.apache.poi.ss.usermodel.FormatException.parseYYYYMMDDDate(String)", "text": "Converts a string of format \"YYYYMMDD\" to its (Excel) numeric equivalent", "tags": "METHOD", "url": "exp/parseYYYYMMDDDate.html"},
                {"title": "org.apache.poi.ss.usermodel.Drawing.createPicture(ClientAnchor, int)", "text": "Creates a picture", "tags": "METHOD", "url": "exp/createPicture.html"},
                {"title": "org.apache.poi.ss.usermodel.Drawing.createCellComment(ClientAnchor)", "text": "Creates a comment. to the sheet.", "tags": "METHOD", "url": "exp/createCellComment.html"},
                {"title": "org.apache.poi.ss.usermodel.Drawing.createChart(ClientAnchor)", "text": "Creates a chart. the sheet.", "tags": "METHOD", "url": "exp/createChart.html"},
                {"title": "org.apache.poi.ss.usermodel.Drawing.createAnchor(int, int, int, int, int, int, int, int)", "text": "Creates a new client anchor and sets the top-left and bottom-right coordinates of the anchor.", "tags": "METHOD", "url": "exp/createAnchor.html"},
                {"title": "org.apache.poi.ss.usermodel.Drawing.createObjectData(ClientAnchor, int, int)", "text": "Adds a new OLE Package Shape", "tags": "METHOD", "url": "exp/createObjectData.html"},
                {"title": "org.apache.poi.ss.usermodel.ExcelStyleDateFormatter.processFormatPattern(String)", "text": "Takes a format String, and replaces Excel specific bits with our detection sequences", "tags": "METHOD", "url": "exp/processFormatPattern.html"},
                {"title": "org.apache.poi.ss.usermodel.ExcelStyleDateFormatter.setDateToBeFormatted(double)", "text": "Used to let us know what the date being", "tags": "METHOD", "url": "exp/setDateToBeFormatted.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.isAuto()", "text": "A boolean value indicating the color is automatic", "tags": "METHOD", "url": "exp/isAuto.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.isIndexed()", "text": "A boolean value indicating the color is indexed", "tags": "METHOD", "url": "exp/isIndexed.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.isRGB()", "text": "A boolean value indicating the color is RGB  ARGB", "tags": "METHOD", "url": "exp/isRGB.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.isThemed()", "text": "A boolean value indicating the color is from a Theme", "tags": "METHOD", "url": "exp/isThemed.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.getIndex()", "text": "Indexed Color value, if {@link #isIndexed()} is true", "tags": "METHOD", "url": "exp/getIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.getTheme()", "text": "Index of Theme color, if {@link #isThemed()} is true", "tags": "METHOD", "url": "exp/getTheme.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.getRGB()", "text": "Standard Red Green Blue ctColor value (RGB). If there was an A (Alpha) value, it will be stripped.", "tags": "METHOD", "url": "exp/getRGB.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.getARGB()", "text": "Standard Alpha Red Green Blue ctColor value (ARGB).", "tags": "METHOD", "url": "exp/getARGB.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.getStoredRBG()", "text": "RGB or ARGB or null", "tags": "METHOD", "url": "exp/getStoredRBG.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.setRGB(byte[])", "text": "Sets the Red Green Blue or Alpha Red Green Blue", "tags": "METHOD", "url": "exp/setRGB.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.getRGBWithTint()", "text": "Standard Red Green Blue ctColor value (RGB) with applied tint. Alpha values are ignored.", "tags": "METHOD", "url": "exp/getRGBWithTint.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.getARGBHex()", "text": "Return the ARGB value in hex format, eg FF00FF00. Works for both regular and indexed colours.", "tags": "METHOD", "url": "exp/getARGBHex.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.setARGBHex(String)", "text": "Sets the ARGB value from hex format, eg FF0077FF. Only works for regular (non-indexed) colours", "tags": "METHOD", "url": "exp/setARGBHex.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.getTint()", "text": "Specifies the tint value applied to the ctColor", "tags": "METHOD", "url": "exp/getTint.html"},
                {"title": "org.apache.poi.ss.usermodel.ExtendedColor.setTint(double)", "text": "Specifies the tint value applied to the ctColor", "tags": "METHOD", "url": "exp/setTint.html"},
                {"title": "org.apache.poi.ss.usermodel.Font.getFontHeight()", "text": "Get the font height in unit's of 120th of a point", "tags": "METHOD", "url": "exp/getFontHeight.html"},
                {"title": "org.apache.poi.ss.usermodel.Font.getFontHeightInPoints()", "text": "Get the font height in points", "tags": "METHOD", "url": "exp/getFontHeightInPoints.html"},
                {"title": "org.apache.poi.ss.usermodel.Font.getColor()", "text": "get the color for the font", "tags": "METHOD", "url": "exp/getColor.html"},
                {"title": "org.apache.poi.ss.usermodel.Font.getCharSet()", "text": "get character-set to use.", "tags": "METHOD", "url": "exp/getCharSet.html"},
                {"title": "org.apache.poi.ss.usermodel.Font.setCharSet(byte)", "text": "set character-set to use.", "tags": "METHOD", "url": "exp/setCharSet.html"},
                {"title": "org.apache.poi.ss.usermodel.Font.setCharSet(int)", "text": "set character-set to use.", "tags": "METHOD", "url": "exp/setCharSet.html"},
                {"title": "org.apache.poi.ss.usermodel.Font.getIndex()", "text": "get the index within the XSSFWorkbook (sequence within the collection of Font objects) unless you're comparing which one is which)", "tags": "METHOD", "url": "exp/getIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Font.getValue()", "text": "Returns value of this charset", "tags": "METHOD", "url": "exp/getValue.html"},
                {"title": "org.apache.poi.ss.usermodel.Font.getValue()", "text": "Returns index of this font family", "tags": "METHOD", "url": "exp/getValue.html"},
                {"title": "org.apache.poi.ss.usermodel.FontFormatting.getEscapementType()", "text": "get the type of super or subscript for the font", "tags": "METHOD", "url": "exp/getEscapementType.html"},
                {"title": "org.apache.poi.ss.usermodel.FontFormatting.setEscapementType(short)", "text": "set the escapement type for the font", "tags": "METHOD", "url": "exp/setEscapementType.html"},
                {"title": "org.apache.poi.ss.usermodel.FontFormatting.setFontColorIndex(short)", "text": "Sets the indexed colour to use", "tags": "METHOD", "url": "exp/setFontColorIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.FontFormatting.setFontColor(Color)", "text": "Sets the colour to use", "tags": "METHOD", "url": "exp/setFontColor.html"},
                {"title": "org.apache.poi.ss.usermodel.FontFormatting.getFontHeight()", "text": "gets the height of the font in 120th point units", "tags": "METHOD", "url": "exp/getFontHeight.html"},
                {"title": "org.apache.poi.ss.usermodel.FontFormatting.setFontHeight(int)", "text": "Sets the height of the font in 120th point units", "tags": "METHOD", "url": "exp/setFontHeight.html"},
                {"title": "org.apache.poi.ss.usermodel.FontFormatting.getUnderlineType()", "text": "get the type of underlining for the font", "tags": "METHOD", "url": "exp/getUnderlineType.html"},
                {"title": "org.apache.poi.ss.usermodel.FontFormatting.setUnderlineType(short)", "text": "set the type of underlining type for the font", "tags": "METHOD", "url": "exp/setUnderlineType.html"},
                {"title": "org.apache.poi.ss.usermodel.FontFormatting.isBold()", "text": "get whether the font weight is set to bold or not", "tags": "METHOD", "url": "exp/isBold.html"},
                {"title": "org.apache.poi.ss.usermodel.FontFormatting.setFontStyle(boolean, boolean)", "text": "set font style options.", "tags": "METHOD", "url": "exp/setFontStyle.html"},
                {"title": "org.apache.poi.ss.usermodel.FontFormatting.resetFontStyle()", "text": "set font style options to default values (non-italic, non-bold)", "tags": "METHOD", "url": "exp/resetFontStyle.html"},
                {"title": "org.apache.poi.ss.usermodel.Footer.getLeft()", "text": "Get the left side of the footer.", "tags": "METHOD", "url": "exp/getLeft.html"},
                {"title": "org.apache.poi.ss.usermodel.Footer.setLeft(String)", "text": "Sets the left string.", "tags": "METHOD", "url": "exp/setLeft.html"},
                {"title": "org.apache.poi.ss.usermodel.Footer.getCenter()", "text": "Get the center of the footer.", "tags": "METHOD", "url": "exp/getCenter.html"},
                {"title": "org.apache.poi.ss.usermodel.Footer.setCenter(String)", "text": "Sets the center string.", "tags": "METHOD", "url": "exp/setCenter.html"},
                {"title": "org.apache.poi.ss.usermodel.Footer.getRight()", "text": "Get the right side of the footer.", "tags": "METHOD", "url": "exp/getRight.html"},
                {"title": "org.apache.poi.ss.usermodel.Footer.setRight(String)", "text": "Sets the right string.", "tags": "METHOD", "url": "exp/setRight.html"},
                {"title": "org.apache.poi.ss.usermodel.FormulaEvaluator.clearAllCachedResultValues()", "text": "Should be called whenever there are changes to input cells in the evaluated workbook", "tags": "METHOD", "url": "exp/clearAllCachedResultValues.html"},
                {"title": "org.apache.poi.ss.usermodel.FormulaEvaluator.notifySetFormula(Cell)", "text": "Should be called to tell the cell value cache that the specified (value or formula) cell", "tags": "METHOD", "url": "exp/notifySetFormula.html"},
                {"title": "org.apache.poi.ss.usermodel.FormulaEvaluator.notifyDeleteCell(Cell)", "text": "Should be called to tell the cell value cache that the specified cell has just become a formula cell, or the formula text has changed", "tags": "METHOD", "url": "exp/notifyDeleteCell.html"},
                {"title": "org.apache.poi.ss.usermodel.FormulaEvaluator.notifyUpdateCell(Cell)", "text": "Should be called to tell the cell value cache that the specified (value or formula) cell", "tags": "METHOD", "url": "exp/notifyUpdateCell.html"},
                {"title": "org.apache.poi.ss.usermodel.FormulaEvaluator.evaluateAll()", "text": "Loops over all cells in all sheets of the associated workbook", "tags": "METHOD", "url": "exp/evaluateAll.html"},
                {"title": "org.apache.poi.ss.usermodel.FormulaEvaluator.evaluate(Cell)", "text": "If cell contains a formula, the formula is evaluated and returned,", "tags": "METHOD", "url": "exp/evaluate.html"},
                {"title": "org.apache.poi.ss.usermodel.FormulaEvaluator.evaluateFormulaCellEnum(Cell)", "text": "If cell contains formula, it evaluates the formula,", "tags": "METHOD", "url": "exp/evaluateFormulaCellEnum.html"},
                {"title": "org.apache.poi.ss.usermodel.FormulaEvaluator.evaluateInCell(Cell)", "text": "If cell contains formula, it evaluates the formula, and", "tags": "METHOD", "url": "exp/evaluateInCell.html"},
                {"title": "org.apache.poi.ss.usermodel.FormulaEvaluator.setupReferencedWorkbooks(Map<String, FormulaEvaluator>)", "text": "Sets up the Formula Evaluator to be able to reference and resolve", "tags": "METHOD", "url": "exp/setupReferencedWorkbooks.html"},
                {"title": "org.apache.poi.ss.usermodel.FormulaEvaluator.setIgnoreMissingWorkbooks(boolean)", "text": "Whether to ignore missing references to external workbooks and", "tags": "METHOD", "url": "exp/setIgnoreMissingWorkbooks.html"},
                {"title": "org.apache.poi.ss.usermodel.FormulaEvaluator.setDebugEvaluationOutputForNextEval(boolean)", "text": "Perform detailed output of formula evaluation for next evaluation only?", "tags": "METHOD", "url": "exp/setDebugEvaluationOutputForNextEval.html"},
                {"title": "org.apache.poi.ss.usermodel.Header.getLeft()", "text": "Get the left side of the header.", "tags": "METHOD", "url": "exp/getLeft.html"},
                {"title": "org.apache.poi.ss.usermodel.Header.setLeft(String)", "text": "Sets the left string.", "tags": "METHOD", "url": "exp/setLeft.html"},
                {"title": "org.apache.poi.ss.usermodel.Header.getCenter()", "text": "Get the center of the header.", "tags": "METHOD", "url": "exp/getCenter.html"},
                {"title": "org.apache.poi.ss.usermodel.Header.setCenter(String)", "text": "Sets the center string.", "tags": "METHOD", "url": "exp/setCenter.html"},
                {"title": "org.apache.poi.ss.usermodel.Header.getRight()", "text": "Get the right side of the header.", "tags": "METHOD", "url": "exp/getRight.html"},
                {"title": "org.apache.poi.ss.usermodel.Header.setRight(String)", "text": "Sets the right string.", "tags": "METHOD", "url": "exp/setRight.html"},
                {"title": "org.apache.poi.ss.usermodel.HeaderFooter.getLeft()", "text": "Get the left side of the header or footer.", "tags": "METHOD", "url": "exp/getLeft.html"},
                {"title": "org.apache.poi.ss.usermodel.HeaderFooter.setLeft(String)", "text": "Sets the left string.", "tags": "METHOD", "url": "exp/setLeft.html"},
                {"title": "org.apache.poi.ss.usermodel.HeaderFooter.getCenter()", "text": "Get the center of the header or footer.", "tags": "METHOD", "url": "exp/getCenter.html"},
                {"title": "org.apache.poi.ss.usermodel.HeaderFooter.setCenter(String)", "text": "Sets the center string.", "tags": "METHOD", "url": "exp/setCenter.html"},
                {"title": "org.apache.poi.ss.usermodel.HeaderFooter.getRight()", "text": "Get the right side of the header or footer.", "tags": "METHOD", "url": "exp/getRight.html"},
                {"title": "org.apache.poi.ss.usermodel.HeaderFooter.setRight(String)", "text": "Sets the right string or footer.", "tags": "METHOD", "url": "exp/setRight.html"},
                {"title": "org.apache.poi.ss.usermodel.helpers.RowShifter.shiftMergedRegions(int, int, int)", "text": "Shifts, grows, or shrinks the merged regions due to a row shift. Merged regions that are completely overlaid by shifting will be deleted.", "tags": "METHOD", "url": "exp/shiftMergedRegions.html"},
                {"title": "org.apache.poi.ss.usermodel.helpers.RowShifter.updateNamedRanges(FormulaShifter)", "text": "Updated named ranges", "tags": "METHOD", "url": "exp/updateNamedRanges.html"},
                {"title": "org.apache.poi.ss.usermodel.helpers.RowShifter.updateFormulas(FormulaShifter)", "text": "Update formulas.", "tags": "METHOD", "url": "exp/updateFormulas.html"},
                {"title": "org.apache.poi.ss.usermodel.helpers.RowShifter.updateRowFormulas(Row, FormulaShifter)", "text": "Update the formulas in specified row using the formula shifting policy specified by shifter", "tags": "METHOD", "url": "exp/updateRowFormulas.html"},
                {"title": "org.apache.poi.ss.usermodel.helpers.RowShifter.updateHyperlinks(FormulaShifter)", "text": "Shift the Hyperlink anchors (not the hyperlink text, even if the hyperlink", "tags": "METHOD", "url": "exp/updateHyperlinks.html"},
                {"title": "org.apache.poi.ss.usermodel.Hyperlink.getFirstRow()", "text": "Return the row of the first cell that contains the hyperlink", "tags": "METHOD", "url": "exp/getFirstRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Hyperlink.setFirstRow(int)", "text": "Set the row of the first cell that contains the hyperlink", "tags": "METHOD", "url": "exp/setFirstRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Hyperlink.getLastRow()", "text": "Return the row of the last cell that contains the hyperlink", "tags": "METHOD", "url": "exp/getLastRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Hyperlink.setLastRow(int)", "text": "Set the row of the last cell that contains the hyperlink", "tags": "METHOD", "url": "exp/setLastRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Hyperlink.getFirstColumn()", "text": "Return the column of the first cell that contains the hyperlink", "tags": "METHOD", "url": "exp/getFirstColumn.html"},
                {"title": "org.apache.poi.ss.usermodel.Hyperlink.setFirstColumn(int)", "text": "Set the column of the first cell that contains the hyperlink", "tags": "METHOD", "url": "exp/setFirstColumn.html"},
                {"title": "org.apache.poi.ss.usermodel.Hyperlink.getLastColumn()", "text": "Return the column of the last cell that contains the hyperlink", "tags": "METHOD", "url": "exp/getLastColumn.html"},
                {"title": "org.apache.poi.ss.usermodel.Hyperlink.setLastColumn(int)", "text": "Set the column of the last cell that contains the hyperlink", "tags": "METHOD", "url": "exp/setLastColumn.html"},
                {"title": "org.apache.poi.ss.usermodel.IconMultiStateFormatting.getIconSet()", "text": "Get the Icon Set used", "tags": "METHOD", "url": "exp/getIconSet.html"},
                {"title": "org.apache.poi.ss.usermodel.IconMultiStateFormatting.setIconSet(IconSet)", "text": "Changes the Icon Set used must", "tags": "METHOD", "url": "exp/setIconSet.html"},
                {"title": "org.apache.poi.ss.usermodel.IconMultiStateFormatting.isIconOnly()", "text": "Should Icon + Value be displayed, or only the Icon?", "tags": "METHOD", "url": "exp/isIconOnly.html"},
                {"title": "org.apache.poi.ss.usermodel.IconMultiStateFormatting.setIconOnly(boolean)", "text": "Control if only the Icon is shown, or Icon + Value", "tags": "METHOD", "url": "exp/setIconOnly.html"},
                {"title": "org.apache.poi.ss.usermodel.IconMultiStateFormatting.getThresholds()", "text": "Gets the list of thresholds", "tags": "METHOD", "url": "exp/getThresholds.html"},
                {"title": "org.apache.poi.ss.usermodel.IconMultiStateFormatting.setThresholds(ConditionalFormattingThreshold[])", "text": "Sets the of thresholds. The number must match {@link IconSet#num} for the current {@link #getIconSet()}", "tags": "METHOD", "url": "exp/setThresholds.html"},
                {"title": "org.apache.poi.ss.usermodel.IconMultiStateFormatting.createThreshold()", "text": "Creates a new, empty Threshold", "tags": "METHOD", "url": "exp/createThreshold.html"},
                {"title": "org.apache.poi.ss.usermodel.IconMultiStateFormatting.getIndex()", "text": "Returns index of this color", "tags": "METHOD", "url": "exp/getIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Name.getSheetName()", "text": "Get the sheets name which this named range is referenced to", "tags": "METHOD", "url": "exp/getSheetName.html"},
                {"title": "org.apache.poi.ss.usermodel.Name.getNameName()", "text": "Gets the name of the named range", "tags": "METHOD", "url": "exp/getNameName.html"},
                {"title": "org.apache.poi.ss.usermodel.Name.setNameName(String)", "text": "Sets the name of the named range", "tags": "METHOD", "url": "exp/setNameName.html"},
                {"title": "org.apache.poi.ss.usermodel.Name.getRefersToFormula()", "text": "Returns the formula that the name is defined to refer to.", "tags": "METHOD", "url": "exp/getRefersToFormula.html"},
                {"title": "org.apache.poi.ss.usermodel.Name.setRefersToFormula(String)", "text": "Sets the formula that the name is defined to refer to. The following are representative examples: -PMT(Interest_Rate12,Number_of_Payments,Loan_Amount)", "tags": "METHOD", "url": "exp/setRefersToFormula.html"},
                {"title": "org.apache.poi.ss.usermodel.Name.isFunctionName()", "text": "Checks if this name is a function name", "tags": "METHOD", "url": "exp/isFunctionName.html"},
                {"title": "org.apache.poi.ss.usermodel.Name.isDeleted()", "text": "Checks if this name points to a cell that no longer exists", "tags": "METHOD", "url": "exp/isDeleted.html"},
                {"title": "org.apache.poi.ss.usermodel.Name.setSheetIndex(int)", "text": "Tell Excel that this name applies to the worksheet with the specified index instead of the entire workbook.", "tags": "METHOD", "url": "exp/setSheetIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Name.getSheetIndex()", "text": "Returns the sheet index this name applies to.", "tags": "METHOD", "url": "exp/getSheetIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Name.getComment()", "text": "Returns the comment the user provided when the name was created.", "tags": "METHOD", "url": "exp/getComment.html"},
                {"title": "org.apache.poi.ss.usermodel.Name.setComment(String)", "text": "Sets the comment the user provided when the name was created.", "tags": "METHOD", "url": "exp/setComment.html"},
                {"title": "org.apache.poi.ss.usermodel.Name.setFunction(boolean)", "text": "Indicates that the defined name refers to a user-defined function. This attribute is used when there is an add-in or other code project associated with the file.", "tags": "METHOD", "url": "exp/setFunction.html"},
                {"title": "org.apache.poi.ss.usermodel.ObjectData.hasDirectoryEntry()", "text": "(Not all do, those that don't have a data portion)", "tags": "METHOD", "url": "exp/hasDirectoryEntry.html"},
                {"title": "org.apache.poi.ss.usermodel.ObjectData.getDirectory()", "text": "Gets the object data", "tags": "METHOD", "url": "exp/getDirectory.html"},
                {"title": "org.apache.poi.ss.usermodel.Picture.resize()", "text": "Reset the image to the dimension of the embedded image", "tags": "METHOD", "url": "exp/resize.html"},
                {"title": "org.apache.poi.ss.usermodel.Picture.resize(double)", "text": "Resize the image proportionally.", "tags": "METHOD", "url": "exp/resize.html"},
                {"title": "org.apache.poi.ss.usermodel.Picture.resize(double, double)", "text": "Resize the image", "tags": "METHOD", "url": "exp/resize.html"},
                {"title": "org.apache.poi.ss.usermodel.Picture.getPreferredSize()", "text": "Calculate the preferred size for this picture.", "tags": "METHOD", "url": "exp/getPreferredSize.html"},
                {"title": "org.apache.poi.ss.usermodel.Picture.getPreferredSize(double, double)", "text": "Calculate the preferred size for this picture.", "tags": "METHOD", "url": "exp/getPreferredSize.html"},
                {"title": "org.apache.poi.ss.usermodel.Picture.getImageDimension()", "text": "Return the dimension of the embedded image in pixel", "tags": "METHOD", "url": "exp/getImageDimension.html"},
                {"title": "org.apache.poi.ss.usermodel.Picture.getPictureData()", "text": "Return picture data for this picture", "tags": "METHOD", "url": "exp/getPictureData.html"},
                {"title": "org.apache.poi.ss.usermodel.PictureData.getData()", "text": "Gets the picture data.", "tags": "METHOD", "url": "exp/getData.html"},
                {"title": "org.apache.poi.ss.usermodel.PictureData.suggestFileExtension()", "text": "Suggests a file extension for this image.", "tags": "METHOD", "url": "exp/suggestFileExtension.html"},
                {"title": "org.apache.poi.ss.usermodel.PictureData.getMimeType()", "text": "Returns the mime type for the image", "tags": "METHOD", "url": "exp/getMimeType.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setPaperSize(short)", "text": "Set the paper size.", "tags": "METHOD", "url": "exp/setPaperSize.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setScale(short)", "text": "Set the scale.", "tags": "METHOD", "url": "exp/setScale.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setPageStart(short)", "text": "Set the page numbering start.", "tags": "METHOD", "url": "exp/setPageStart.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setFitWidth(short)", "text": "Set the number of pages wide to fit the sheet in", "tags": "METHOD", "url": "exp/setFitWidth.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setFitHeight(short)", "text": "Set the number of pages high to fit the sheet in", "tags": "METHOD", "url": "exp/setFitHeight.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setLeftToRight(boolean)", "text": "Set whether to go left to right or top down in ordering", "tags": "METHOD", "url": "exp/setLeftToRight.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setLandscape(boolean)", "text": "Set whether to print in landscape", "tags": "METHOD", "url": "exp/setLandscape.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setValidSettings(boolean)", "text": "Valid settings.  I'm not for sure.", "tags": "METHOD", "url": "exp/setValidSettings.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setNoColor(boolean)", "text": "Set whether it is black and white", "tags": "METHOD", "url": "exp/setNoColor.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setDraft(boolean)", "text": "Set whether it is in draft mode", "tags": "METHOD", "url": "exp/setDraft.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setNotes(boolean)", "text": "Print the include notes", "tags": "METHOD", "url": "exp/setNotes.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setNoOrientation(boolean)", "text": "Set no orientation. ?", "tags": "METHOD", "url": "exp/setNoOrientation.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setUsePage(boolean)", "text": "Set whether to use page start", "tags": "METHOD", "url": "exp/setUsePage.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setHResolution(short)", "text": "Sets the horizontal resolution.", "tags": "METHOD", "url": "exp/setHResolution.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setVResolution(short)", "text": "Sets the vertical resolution.", "tags": "METHOD", "url": "exp/setVResolution.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setHeaderMargin(double)", "text": "Sets the header margin.", "tags": "METHOD", "url": "exp/setHeaderMargin.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setFooterMargin(double)", "text": "Sets the footer margin.", "tags": "METHOD", "url": "exp/setFooterMargin.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.setCopies(short)", "text": "Sets the number of copies.", "tags": "METHOD", "url": "exp/setCopies.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getPaperSize()", "text": "Returns the paper size.", "tags": "METHOD", "url": "exp/getPaperSize.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getScale()", "text": "Returns the scale.", "tags": "METHOD", "url": "exp/getScale.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getPageStart()", "text": "Returns the page start.", "tags": "METHOD", "url": "exp/getPageStart.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getFitWidth()", "text": "Returns the number of pages wide to fit sheet in.", "tags": "METHOD", "url": "exp/getFitWidth.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getFitHeight()", "text": "Returns the number of pages high to fit the sheet in.", "tags": "METHOD", "url": "exp/getFitHeight.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getLeftToRight()", "text": "Returns the left to right print order.", "tags": "METHOD", "url": "exp/getLeftToRight.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getLandscape()", "text": "Returns the landscape mode.", "tags": "METHOD", "url": "exp/getLandscape.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getValidSettings()", "text": "Returns the valid settings.", "tags": "METHOD", "url": "exp/getValidSettings.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getNoColor()", "text": "Returns the black and white setting.", "tags": "METHOD", "url": "exp/getNoColor.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getDraft()", "text": "Returns the draft mode.", "tags": "METHOD", "url": "exp/getDraft.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getNotes()", "text": "Returns the print notes.", "tags": "METHOD", "url": "exp/getNotes.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getNoOrientation()", "text": "Returns the no orientation.", "tags": "METHOD", "url": "exp/getNoOrientation.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getUsePage()", "text": "Returns the use page numbers.", "tags": "METHOD", "url": "exp/getUsePage.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getHResolution()", "text": "Returns the horizontal resolution.", "tags": "METHOD", "url": "exp/getHResolution.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getVResolution()", "text": "Returns the vertical resolution.", "tags": "METHOD", "url": "exp/getVResolution.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getHeaderMargin()", "text": "Returns the header margin.", "tags": "METHOD", "url": "exp/getHeaderMargin.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getFooterMargin()", "text": "Returns the footer margin.", "tags": "METHOD", "url": "exp/getFooterMargin.html"},
                {"title": "org.apache.poi.ss.usermodel.PrintSetup.getCopies()", "text": "Returns the number of copies.", "tags": "METHOD", "url": "exp/getCopies.html"},
                {"title": "org.apache.poi.ss.usermodel.RichTextString.applyFont(int, int, short)", "text": "Applies a font to the specified characters of a string.", "tags": "METHOD", "url": "exp/applyFont.html"},
                {"title": "org.apache.poi.ss.usermodel.RichTextString.applyFont(int, int, Font)", "text": "Applies a font to the specified characters of a string.", "tags": "METHOD", "url": "exp/applyFont.html"},
                {"title": "org.apache.poi.ss.usermodel.RichTextString.applyFont(Font)", "text": "Sets the font of the entire string.", "tags": "METHOD", "url": "exp/applyFont.html"},
                {"title": "org.apache.poi.ss.usermodel.RichTextString.clearFormatting()", "text": "Removes any formatting that may have been applied to the string.", "tags": "METHOD", "url": "exp/clearFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.RichTextString.getString()", "text": "Returns the plain string representation.", "tags": "METHOD", "url": "exp/getString.html"},
                {"title": "org.apache.poi.ss.usermodel.RichTextString.getIndexOfFormattingRun(int)", "text": "The index within the string to which the specified formatting run applies.", "tags": "METHOD", "url": "exp/getIndexOfFormattingRun.html"},
                {"title": "org.apache.poi.ss.usermodel.RichTextString.applyFont(short)", "text": "Applies the specified font to the entire string.", "tags": "METHOD", "url": "exp/applyFont.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.createCell(int)", "text": "Use this to create new cells within the row and return it", "tags": "METHOD", "url": "exp/createCell.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.createCell(int, CellType)", "text": "Use this to create new cells within the row and return it", "tags": "METHOD", "url": "exp/createCell.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.removeCell(Cell)", "text": "Remove the Cell from this row.", "tags": "METHOD", "url": "exp/removeCell.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.setRowNum(int)", "text": "Set the row number of this row.", "tags": "METHOD", "url": "exp/setRowNum.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.getRowNum()", "text": "Get row number this row represents", "tags": "METHOD", "url": "exp/getRowNum.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.getCell(int)", "text": "Get the cell representing a given column (logical cell) 0-based.  If you ask for a cell that is not defined....you get a null.", "tags": "METHOD", "url": "exp/getCell.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.getCell(int, MissingCellPolicy)", "text": "Returns the cell at the given (0 based) index, with the specified {@link org.apache.poi.ss.usermodel.Row.MissingCellPolicy}", "tags": "METHOD", "url": "exp/getCell.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.getFirstCellNum()", "text": "Get the number of the first cell contained in this row. or -1 if the row does not contain any cells.", "tags": "METHOD", "url": "exp/getFirstCellNum.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.getLastCellNum()", "text": "Gets the index of the last cell contained in this row ", "tags": "METHOD", "url": "exp/getLastCellNum.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.getPhysicalNumberOfCells()", "text": "Gets the number of defined cells (NOT number of cells in the actual row!). That is to say if only columns 0,4,5 have values then there would be 3.", "tags": "METHOD", "url": "exp/getPhysicalNumberOfCells.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.setHeight(short)", "text": "Set the row's height or set to ff (-1) for undefineddefault-height.  Set the height in \"twips\" or 120th of a point.", "tags": "METHOD", "url": "exp/setHeight.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.setZeroHeight(boolean)", "text": "Set whether or not to display this row with 0 height", "tags": "METHOD", "url": "exp/setZeroHeight.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.getZeroHeight()", "text": "Get whether or not to display this row with 0 height", "tags": "METHOD", "url": "exp/getZeroHeight.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.setHeightInPoints(float)", "text": "Set the row's height in points.", "tags": "METHOD", "url": "exp/setHeightInPoints.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.getHeight()", "text": "Get the row's height measured in twips (120th of a point). If the height is not set, the default worksheet value is returned, See {@link Sheet#getDefaultRowHeightInPoints()}", "tags": "METHOD", "url": "exp/getHeight.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.getHeightInPoints()", "text": "Returns row height measured in point size. If the height is not set, the default worksheet value is returned, See {@link Sheet#getDefaultRowHeightInPoints()}", "tags": "METHOD", "url": "exp/getHeightInPoints.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.isFormatted()", "text": "Is this row formatted? Most aren't, but some rows", "tags": "METHOD", "url": "exp/isFormatted.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.getRowStyle()", "text": "Returns the whole-row cell styles", "tags": "METHOD", "url": "exp/getRowStyle.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.setRowStyle(CellStyle)", "text": "Applies a whole-row cell styling to the row.", "tags": "METHOD", "url": "exp/setRowStyle.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.cellIterator()", "text": "actually be row cell depending on how many are defined!", "tags": "METHOD", "url": "exp/cellIterator.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.getSheet()", "text": "Returns the Sheet this row belongs to", "tags": "METHOD", "url": "exp/getSheet.html"},
                {"title": "org.apache.poi.ss.usermodel.Row.getOutlineLevel()", "text": "Returns the rows outline level", "tags": "METHOD", "url": "exp/getOutlineLevel.html"},
                {"title": "org.apache.poi.ss.usermodel.Shape.isNoFill()", "text": "Whether this shape is not filled with a color", "tags": "METHOD", "url": "exp/isNoFill.html"},
                {"title": "org.apache.poi.ss.usermodel.Shape.setNoFill(boolean)", "text": "Sets whether this shape is filled or transparent.", "tags": "METHOD", "url": "exp/setNoFill.html"},
                {"title": "org.apache.poi.ss.usermodel.Shape.setFillColor(int, int, int)", "text": "Sets the color used to fill this shape using the solid fill pattern.", "tags": "METHOD", "url": "exp/setFillColor.html"},
                {"title": "org.apache.poi.ss.usermodel.Shape.setLineStyleColor(int, int, int)", "text": "The color applied to the lines of this shape.", "tags": "METHOD", "url": "exp/setLineStyleColor.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.createRow(int)", "text": "Create a new row within the sheet and return the high level representation", "tags": "METHOD", "url": "exp/createRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.removeRow(Row)", "text": "Remove a row from this sheet.  All cells contained in the row are removed as well", "tags": "METHOD", "url": "exp/removeRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getRow(int)", "text": "Returns the logical row (not physical) 0-based.  If you ask for a row that is not defined you get a null.  This is to say row 4 represents the fifth row on a sheet.", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getPhysicalNumberOfRows()", "text": "Returns the number of physically defined rows (NOT the number of rows in the sheet)", "tags": "METHOD", "url": "exp/getPhysicalNumberOfRows.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getFirstRowNum()", "text": "Gets the first row on the sheet", "tags": "METHOD", "url": "exp/getFirstRowNum.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getLastRowNum()", "text": "Gets the last row on the sheet", "tags": "METHOD", "url": "exp/getLastRowNum.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setColumnHidden(int, boolean)", "text": "Get the visibility state for a given column", "tags": "METHOD", "url": "exp/setColumnHidden.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.isColumnHidden(int)", "text": "Get the hidden state for a given column", "tags": "METHOD", "url": "exp/isColumnHidden.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setRightToLeft(boolean)", "text": "Sets whether the worksheet is displayed from right to left instead of from left to right.", "tags": "METHOD", "url": "exp/setRightToLeft.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.isRightToLeft()", "text": "Whether the text is displayed in right-to-left mode in the window", "tags": "METHOD", "url": "exp/isRightToLeft.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setColumnWidth(int, int)", "text": "Set the width (in units of 1256th of a character width)", "tags": "METHOD", "url": "exp/setColumnWidth.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getColumnWidth(int)", "text": "get the width (in units of 1256th of a character width ) 0, 1, 2, ... 9", "tags": "METHOD", "url": "exp/getColumnWidth.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getColumnWidthInPixels(int)", "text": "get the width in pixel", "tags": "METHOD", "url": "exp/getColumnWidthInPixels.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setDefaultColumnWidth(int)", "text": "Set the default column width for the sheet (if the columns do not define their own width) in characters", "tags": "METHOD", "url": "exp/setDefaultColumnWidth.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getDefaultColumnWidth()", "text": "Get the default column width for the sheet (if the columns do not define their own width) in characters", "tags": "METHOD", "url": "exp/getDefaultColumnWidth.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getDefaultRowHeight()", "text": "Get the default row height for the sheet (if the rows do not define their own height) in twips (120 of  a point)", "tags": "METHOD", "url": "exp/getDefaultRowHeight.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getDefaultRowHeightInPoints()", "text": "Get the default row height for the sheet (if the rows do not define their own height) in points.", "tags": "METHOD", "url": "exp/getDefaultRowHeightInPoints.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setDefaultRowHeight(short)", "text": "Set the default row height for the sheet (if the rows do not define their own height) in twips (120 of  a point)", "tags": "METHOD", "url": "exp/setDefaultRowHeight.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setDefaultRowHeightInPoints(float)", "text": "Set the default row height for the sheet (if the rows do not define their own height) in points", "tags": "METHOD", "url": "exp/setDefaultRowHeightInPoints.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getColumnStyle(int)", "text": "Returns the CellStyle that applies to the given", "tags": "METHOD", "url": "exp/getColumnStyle.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.addMergedRegion(CellRangeAddress)", "text": "Adds a merged region of cells (hence those cells form one)", "tags": "METHOD", "url": "exp/addMergedRegion.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.addMergedRegionUnsafe(CellRangeAddress)", "text": "Adds a merged region of cells (hence those cells form one)", "tags": "METHOD", "url": "exp/addMergedRegionUnsafe.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.validateMergedRegions()", "text": "Verify that merged regions do not intersect multi-cell array formulas and no merged regions intersect another merged region in this sheet.", "tags": "METHOD", "url": "exp/validateMergedRegions.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setVerticallyCenter(boolean)", "text": "Determines whether the output is vertically centered on the page.", "tags": "METHOD", "url": "exp/setVerticallyCenter.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setHorizontallyCenter(boolean)", "text": "Determines whether the output is horizontally centered on the page.", "tags": "METHOD", "url": "exp/setHorizontallyCenter.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getVerticallyCenter()", "text": "Determine whether printed output for this sheet will be vertically centered.", "tags": "METHOD", "url": "exp/getVerticallyCenter.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.removeMergedRegion(int)", "text": "Removes a merged region of cells (hence letting them free)", "tags": "METHOD", "url": "exp/removeMergedRegion.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.removeMergedRegions(Collection<Integer>)", "text": "Removes a number of merged regions of cells (hence letting them free)", "tags": "METHOD", "url": "exp/removeMergedRegions.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getNumMergedRegions()", "text": "Returns the number of merged regions", "tags": "METHOD", "url": "exp/getNumMergedRegions.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getMergedRegion(int)", "text": "Returns the merged region at the specified index", "tags": "METHOD", "url": "exp/getMergedRegion.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getMergedRegions()", "text": "Returns the list of merged regions.", "tags": "METHOD", "url": "exp/getMergedRegions.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.rowIterator()", "text": "Returns an iterator of the physical rows be the third row if say for instance the second row is undefined.", "tags": "METHOD", "url": "exp/rowIterator.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setForceFormulaRecalculation(boolean)", "text": "Control if Excel should be asked to recalculate all formulas on this sheet", "tags": "METHOD", "url": "exp/setForceFormulaRecalculation.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getForceFormulaRecalculation()", "text": "Whether Excel will be asked to recalculate all formulas in this sheet when the workbook is opened.", "tags": "METHOD", "url": "exp/getForceFormulaRecalculation.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setAutobreaks(boolean)", "text": "Flag indicating whether the sheet displays Automatic Page Breaks.", "tags": "METHOD", "url": "exp/setAutobreaks.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setDisplayGuts(boolean)", "text": "Set whether to display the guts or not", "tags": "METHOD", "url": "exp/setDisplayGuts.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setDisplayZeros(boolean)", "text": "Set whether the window should show 0 (zero) in cells containing zero value. When false, cells with zero value appear blank instead of showing the number zero.", "tags": "METHOD", "url": "exp/setDisplayZeros.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.isDisplayZeros()", "text": "Gets the flag indicating whether the window should show 0 (zero) in cells containing zero value. When false, cells with zero value appear blank instead of showing the number zero.", "tags": "METHOD", "url": "exp/isDisplayZeros.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setFitToPage(boolean)", "text": "Flag indicating whether the Fit to Page print option is enabled.", "tags": "METHOD", "url": "exp/setFitToPage.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setRowSumsBelow(boolean)", "text": "Flag indicating whether summary rows appear below detail in an outline, when applying an outline.", "tags": "METHOD", "url": "exp/setRowSumsBelow.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setRowSumsRight(boolean)", "text": "Flag indicating whether summary columns appear to the right of detail in an outline, when applying an outline.", "tags": "METHOD", "url": "exp/setRowSumsRight.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getAutobreaks()", "text": "Flag indicating whether the sheet displays Automatic Page Breaks.", "tags": "METHOD", "url": "exp/getAutobreaks.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getDisplayGuts()", "text": "Get whether to display the guts or not, default value is true", "tags": "METHOD", "url": "exp/getDisplayGuts.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getFitToPage()", "text": "Flag indicating whether the Fit to Page print option is enabled.", "tags": "METHOD", "url": "exp/getFitToPage.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getRowSumsBelow()", "text": "Flag indicating whether summary rows appear below detail in an outline, when applying an outline.", "tags": "METHOD", "url": "exp/getRowSumsBelow.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getRowSumsRight()", "text": "Flag indicating whether summary columns appear to the right of detail in an outline, when applying an outline.", "tags": "METHOD", "url": "exp/getRowSumsRight.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.isPrintGridlines()", "text": "Gets the flag indicating whether this sheet displays the lines between rows and columns to make editing and reading easier.", "tags": "METHOD", "url": "exp/isPrintGridlines.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setPrintGridlines(boolean)", "text": "Sets the flag indicating whether this sheet should print the lines between rows and columns to make editing and reading easier.", "tags": "METHOD", "url": "exp/setPrintGridlines.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.isPrintRowAndColumnHeadings()", "text": "Gets the flag indicating whether this sheet prints the row and column headings when printing.", "tags": "METHOD", "url": "exp/isPrintRowAndColumnHeadings.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setPrintRowAndColumnHeadings(boolean)", "text": "Sets the flag indicating whether this sheet should print row and columns headings when printing.", "tags": "METHOD", "url": "exp/setPrintRowAndColumnHeadings.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getPrintSetup()", "text": "Gets the print setup object.", "tags": "METHOD", "url": "exp/getPrintSetup.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getHeader()", "text": "Gets the user model for the default document header.null<code>", "tags": "METHOD", "url": "exp/getHeader.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getFooter()", "text": "Gets the user model for the default document footer.null<code>", "tags": "METHOD", "url": "exp/getFooter.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setSelected(boolean)", "text": "Sets a flag indicating whether this sheet is selected.true<code> if this sheet is selected", "tags": "METHOD", "url": "exp/setSelected.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getMargin(short)", "text": "Gets the size of the margin in inches.", "tags": "METHOD", "url": "exp/getMargin.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setMargin(short, double)", "text": "Sets the size of the margin in inches.", "tags": "METHOD", "url": "exp/setMargin.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getProtect()", "text": "Answer whether protection is enabled or disabled", "tags": "METHOD", "url": "exp/getProtect.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.protectSheet(String)", "text": "Sets the protection enabled as well as the password", "tags": "METHOD", "url": "exp/protectSheet.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getScenarioProtect()", "text": "Answer whether scenario protection is enabled or disabled", "tags": "METHOD", "url": "exp/getScenarioProtect.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setZoom(int)", "text": "Window zoom magnification for current view representing percent values", "tags": "METHOD", "url": "exp/setZoom.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getTopRow()", "text": "The top row in the visible view when the sheet is first viewed after opening it in a viewer", "tags": "METHOD", "url": "exp/getTopRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getLeftCol()", "text": "The left col in the visible view when the sheet is first viewed after opening it in a viewer", "tags": "METHOD", "url": "exp/getLeftCol.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.showInPane(int, int)", "text": "Sets desktop window pane display area, when the file is first opened in a viewer.", "tags": "METHOD", "url": "exp/showInPane.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.shiftRows(int, int, int)", "text": "Shifts rows between startRow and endRow n number of rows", "tags": "METHOD", "url": "exp/shiftRows.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.shiftRows(int, int, int, boolean, boolean)", "text": "Shifts rows between startRow and endRow n number of rows", "tags": "METHOD", "url": "exp/shiftRows.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.createFreezePane(int, int, int, int)", "text": "Creates a split (freezepane). Any existing freezepane or split pane is overwritten.", "tags": "METHOD", "url": "exp/createFreezePane.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.createFreezePane(int, int)", "text": "Creates a split (freezepane). Any existing freezepane or split pane is overwritten.", "tags": "METHOD", "url": "exp/createFreezePane.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.createSplitPane(int, int, int, int, int)", "text": "Creates a split pane. Any existing freezepane or split pane is overwritten. PANE_UPPER_RIGHT, PANE_LOWER_LEFT, PANE_UPPER_LEFT", "tags": "METHOD", "url": "exp/createSplitPane.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getPaneInformation()", "text": "Returns the information regarding the currently configured pane (split or freeze)", "tags": "METHOD", "url": "exp/getPaneInformation.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setDisplayGridlines(boolean)", "text": "Sets whether the gridlines are shown in a viewer", "tags": "METHOD", "url": "exp/setDisplayGridlines.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.isDisplayGridlines()", "text": "Returns if gridlines are displayed", "tags": "METHOD", "url": "exp/isDisplayGridlines.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setDisplayFormulas(boolean)", "text": "Sets whether the formulas are shown in a viewer", "tags": "METHOD", "url": "exp/setDisplayFormulas.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.isDisplayFormulas()", "text": "Returns if formulas are displayed", "tags": "METHOD", "url": "exp/isDisplayFormulas.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setDisplayRowColHeadings(boolean)", "text": "Sets whether the RowColHeadings are shown in a viewer", "tags": "METHOD", "url": "exp/setDisplayRowColHeadings.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.isDisplayRowColHeadings()", "text": "Returns if RowColHeadings are displayed.", "tags": "METHOD", "url": "exp/isDisplayRowColHeadings.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setRowBreak(int)", "text": "Sets a page break at the indicated row", "tags": "METHOD", "url": "exp/setRowBreak.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.isRowBroken(int)", "text": "Determines if there is a page break at the indicated row", "tags": "METHOD", "url": "exp/isRowBroken.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.removeRowBreak(int)", "text": "Removes the page break at the indicated row", "tags": "METHOD", "url": "exp/removeRowBreak.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getRowBreaks()", "text": "Retrieves all the horizontal page breaks", "tags": "METHOD", "url": "exp/getRowBreaks.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getColumnBreaks()", "text": "Retrieves all the vertical page breaks", "tags": "METHOD", "url": "exp/getColumnBreaks.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setColumnBreak(int)", "text": "Sets a page break at the indicated column", "tags": "METHOD", "url": "exp/setColumnBreak.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.isColumnBroken(int)", "text": "Determines if there is a page break at the indicated column", "tags": "METHOD", "url": "exp/isColumnBroken.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.removeColumnBreak(int)", "text": "Removes a page break at the indicated column", "tags": "METHOD", "url": "exp/removeColumnBreak.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setColumnGroupCollapsed(int, boolean)", "text": "Expands or collapses a column group.", "tags": "METHOD", "url": "exp/setColumnGroupCollapsed.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.groupColumn(int, int)", "text": "Create an outline for the provided column range.", "tags": "METHOD", "url": "exp/groupColumn.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.ungroupColumn(int, int)", "text": "Ungroup a range of columns that were previously grouped", "tags": "METHOD", "url": "exp/ungroupColumn.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.groupRow(int, int)", "text": "Tie a range of rows together so that they can be collapsed or expanded", "tags": "METHOD", "url": "exp/groupRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.ungroupRow(int, int)", "text": "Ungroup a range of rows that were previously grouped", "tags": "METHOD", "url": "exp/ungroupRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setRowGroupCollapsed(int, boolean)", "text": "Set view state of a grouped range of rows", "tags": "METHOD", "url": "exp/setRowGroupCollapsed.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setDefaultColumnStyle(int, CellStyle)", "text": "Sets the default column style for a given column.  POI will only apply this style to new cells added to the sheet.", "tags": "METHOD", "url": "exp/setDefaultColumnStyle.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.autoSizeColumn(int)", "text": "Adjusts the column width to fit the contents", "tags": "METHOD", "url": "exp/autoSizeColumn.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.autoSizeColumn(int, boolean)", "text": "Adjusts the column width to fit the contents", "tags": "METHOD", "url": "exp/autoSizeColumn.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getCellComment(CellAddress)", "text": "Returns cell comment for the specified location", "tags": "METHOD", "url": "exp/getCellComment.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getCellComments()", "text": "Returns all cell comments on this sheet. the comment is located.", "tags": "METHOD", "url": "exp/getCellComments.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getDrawingPatriarch()", "text": "Return the sheet's existing drawing, or null if there isn't yet one. Use {@link #createDrawingPatriarch()} to get or create", "tags": "METHOD", "url": "exp/getDrawingPatriarch.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.createDrawingPatriarch()", "text": "Creates the top-level drawing patriarch.", "tags": "METHOD", "url": "exp/createDrawingPatriarch.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getWorkbook()", "text": "Return the parent workbook", "tags": "METHOD", "url": "exp/getWorkbook.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getSheetName()", "text": "Returns the name of this sheet", "tags": "METHOD", "url": "exp/getSheetName.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.isSelected()", "text": "Note - this is not the same as whether the sheet is focused (isActive)", "tags": "METHOD", "url": "exp/isSelected.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setArrayFormula(String, CellRangeAddress)", "text": "Sets array formula to specified region for result.", "tags": "METHOD", "url": "exp/setArrayFormula.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.removeArrayFormula(Cell)", "text": "Remove a Array Formula from this sheet.  All cells contained in the Array Formula range are removed as well", "tags": "METHOD", "url": "exp/removeArrayFormula.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getDataValidations()", "text": "Returns the list of DataValidation in the sheet.", "tags": "METHOD", "url": "exp/getDataValidations.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.addValidationData(DataValidation)", "text": "Creates a data validation object", "tags": "METHOD", "url": "exp/addValidationData.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setAutoFilter(CellRangeAddress)", "text": "Enable filtering for a range of cells", "tags": "METHOD", "url": "exp/setAutoFilter.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getSheetConditionalFormatting()", "text": "The 'Conditional Formatting' facet for this", "tags": "METHOD", "url": "exp/getSheetConditionalFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getRepeatingRows()", "text": "Gets the repeating rows used when printing the sheet, as found in", "tags": "METHOD", "url": "exp/getRepeatingRows.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getRepeatingColumns()", "text": "Gets the repeating columns used when printing the sheet, as found in", "tags": "METHOD", "url": "exp/getRepeatingColumns.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setRepeatingRows(CellRangeAddress)", "text": "Sets the repeating rows used when printing the sheet, as found in", "tags": "METHOD", "url": "exp/setRepeatingRows.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setRepeatingColumns(CellRangeAddress)", "text": "Sets the repeating columns used when printing the sheet, as found in", "tags": "METHOD", "url": "exp/setRepeatingColumns.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getColumnOutlineLevel(int)", "text": "Returns the column outline level", "tags": "METHOD", "url": "exp/getColumnOutlineLevel.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getHyperlink(int, int)", "text": "Get a Hyperlink in this sheet anchored at row, column", "tags": "METHOD", "url": "exp/getHyperlink.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getHyperlink(CellAddress)", "text": "Get a Hyperlink in this sheet located in a cell specified by {code addr}", "tags": "METHOD", "url": "exp/getHyperlink.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getHyperlinkList()", "text": "Get a list of Hyperlinks in this sheet", "tags": "METHOD", "url": "exp/getHyperlinkList.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.getActiveCell()", "text": "Return location of the active cell, e.g. .", "tags": "METHOD", "url": "exp/getActiveCell.html"},
                {"title": "org.apache.poi.ss.usermodel.Sheet.setActiveCell(CellAddress)", "text": "Sets location of the active cell", "tags": "METHOD", "url": "exp/setActiveCell.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting.addConditionalFormatting(CellRangeAddress[], ConditionalFormattingRule)", "text": "Add a new Conditional Formatting to the sheet.", "tags": "METHOD", "url": "exp/addConditionalFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting.addConditionalFormatting(CellRangeAddress[], ConditionalFormattingRule, ConditionalFormattingRule)", "text": "Add a new Conditional Formatting consisting of two rules.", "tags": "METHOD", "url": "exp/addConditionalFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting.addConditionalFormatting(CellRangeAddress[], ConditionalFormattingRule[])", "text": "Add a new Conditional Formatting set to the sheet.", "tags": "METHOD", "url": "exp/addConditionalFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting.addConditionalFormatting(ConditionalFormatting)", "text": "Adds a copy of a ConditionalFormatting object to the sheet", "tags": "METHOD", "url": "exp/addConditionalFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting.createConditionalFormattingRule(byte, String, String)", "text": "A factory method allowing to create a conditional formatting rule", "tags": "METHOD", "url": "exp/createConditionalFormattingRule.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting.createConditionalFormattingRule(byte, String)", "text": "Create a conditional formatting rule that compares a cell value", "tags": "METHOD", "url": "exp/createConditionalFormattingRule.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting.createConditionalFormattingRule(String)", "text": "Create a conditional formatting rule based on a Boolean formula. When the formula result is true, the cell is highlighted.", "tags": "METHOD", "url": "exp/createConditionalFormattingRule.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting.createConditionalFormattingRule(ExtendedColor)", "text": "Create a Databar conditional formatting rule", "tags": "METHOD", "url": "exp/createConditionalFormattingRule.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting.createConditionalFormattingRule(IconSet)", "text": "Create an Icon Set  Multi-State conditional formatting rule", "tags": "METHOD", "url": "exp/createConditionalFormattingRule.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting.createConditionalFormattingColorScaleRule()", "text": "Create a Color Scale  Color Gradient conditional formatting rule", "tags": "METHOD", "url": "exp/createConditionalFormattingColorScaleRule.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting.getConditionalFormattingAt(int)", "text": "Gets Conditional Formatting object at a particular index", "tags": "METHOD", "url": "exp/getConditionalFormattingAt.html"},
                {"title": "org.apache.poi.ss.usermodel.SheetConditionalFormatting.removeConditionalFormatting(int)", "text": "Removes a Conditional Formatting object by index", "tags": "METHOD", "url": "exp/removeConditionalFormatting.html"},
                {"title": "org.apache.poi.ss.usermodel.Table.getStartColIndex()", "text": "Get the top-left column index relative to the sheet", "tags": "METHOD", "url": "exp/getStartColIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Table.getStartRowIndex()", "text": "Get the top-left row index on the sheet", "tags": "METHOD", "url": "exp/getStartRowIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Table.getEndColIndex()", "text": "Get the bottom-right column index on the sheet", "tags": "METHOD", "url": "exp/getEndColIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Table.getEndRowIndex()", "text": "Get the bottom-right row index", "tags": "METHOD", "url": "exp/getEndRowIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Table.getName()", "text": "Get the name of the table.", "tags": "METHOD", "url": "exp/getName.html"},
                {"title": "org.apache.poi.ss.usermodel.Table.findColumnIndex(String)", "text": "Returns the index of a given named column in the table (names are case insensitive in XSSF)", "tags": "METHOD", "url": "exp/findColumnIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Table.getSheetName()", "text": "Returns the sheet name that the table belongs to.", "tags": "METHOD", "url": "exp/getSheetName.html"},
                {"title": "org.apache.poi.ss.usermodel.Table.isHasTotalsRow()", "text": "Returns true iff the table has a 'Totals' row", "tags": "METHOD", "url": "exp/isHasTotalsRow.html"},
                {"title": "org.apache.poi.ss.usermodel.Textbox.setMarginLeft(int)", "text": "Sets the left margin within the textbox.", "tags": "METHOD", "url": "exp/setMarginLeft.html"},
                {"title": "org.apache.poi.ss.usermodel.Textbox.setMarginRight(int)", "text": "Sets the right margin within the textbox.", "tags": "METHOD", "url": "exp/setMarginRight.html"},
                {"title": "org.apache.poi.ss.usermodel.Textbox.setMarginTop(int)", "text": "Sets the top margin within the textbox.", "tags": "METHOD", "url": "exp/setMarginTop.html"},
                {"title": "org.apache.poi.ss.usermodel.Textbox.getMarginBottom()", "text": "Gets the bottom margin within the textbox.", "tags": "METHOD", "url": "exp/getMarginBottom.html"},
                {"title": "org.apache.poi.ss.usermodel.Textbox.setMarginBottom(int)", "text": "Sets the bottom margin within the textbox.", "tags": "METHOD", "url": "exp/setMarginBottom.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getActiveSheetIndex()", "text": "Convenience method to get the active sheet", "tags": "METHOD", "url": "exp/getActiveSheetIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.setActiveSheet(int)", "text": "Convenience method to set the active sheet", "tags": "METHOD", "url": "exp/setActiveSheet.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getFirstVisibleTab()", "text": "Gets the first tab that is displayed in the list of tabs in excel.", "tags": "METHOD", "url": "exp/getFirstVisibleTab.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.setFirstVisibleTab(int)", "text": "Sets the first tab that is displayed in the list of tabs in excel.", "tags": "METHOD", "url": "exp/setFirstVisibleTab.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.setSheetOrder(String, int)", "text": "Sets the order of appearance for a given sheet.", "tags": "METHOD", "url": "exp/setSheetOrder.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.setSelectedTab(int)", "text": "Sets the tab whose data is actually seen when the sheet is opened", "tags": "METHOD", "url": "exp/setSelectedTab.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.setSheetName(int, String)", "text": "Set the sheet name. or workbook already contains a sheet with this name", "tags": "METHOD", "url": "exp/setSheetName.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getSheetName(int)", "text": "Get the sheet name", "tags": "METHOD", "url": "exp/getSheetName.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getSheetIndex(String)", "text": "Returns the index of the sheet by his name", "tags": "METHOD", "url": "exp/getSheetIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getSheetIndex(Sheet)", "text": "Returns the index of the given sheet", "tags": "METHOD", "url": "exp/getSheetIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.createSheet()", "text": "Create a Sheet for this Workbook, adds it to the sheets and returns the high level representation.  Use this to create new sheets.", "tags": "METHOD", "url": "exp/createSheet.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.createSheet(String)", "text": "Create a new sheet for this Workbook and return the high level representation", "tags": "METHOD", "url": "exp/createSheet.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.cloneSheet(int)", "text": "Create an Sheet from an existing sheet in the Workbook.", "tags": "METHOD", "url": "exp/cloneSheet.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.sheetIterator()", "text": "Returns an iterator of the sheets in the workbook in sheet order. Includes hidden and very hidden sheets.", "tags": "METHOD", "url": "exp/sheetIterator.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getNumberOfSheets()", "text": "Get the number of spreadsheets in the workbook", "tags": "METHOD", "url": "exp/getNumberOfSheets.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getSheetAt(int)", "text": "Get the Sheet object at the given index. &lt; 0 || index &gt;= getNumberOfSheets()).", "tags": "METHOD", "url": "exp/getSheetAt.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getSheet(String)", "text": "Get sheet with the given name", "tags": "METHOD", "url": "exp/getSheet.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.removeSheetAt(int)", "text": "Removes sheet at the given index", "tags": "METHOD", "url": "exp/removeSheetAt.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.createFont()", "text": "Create a new Font and add it to the workbook's font table", "tags": "METHOD", "url": "exp/createFont.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.findFont(boolean, short, short, String, boolean, boolean, short, byte)", "text": "Finds a font that matches the one with the supplied attributes", "tags": "METHOD", "url": "exp/findFont.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getNumberOfFonts()", "text": "Get the number of fonts in the font table", "tags": "METHOD", "url": "exp/getNumberOfFonts.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getFontAt(short)", "text": "Get the font at the given index number", "tags": "METHOD", "url": "exp/getFontAt.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.createCellStyle()", "text": "Create a new Cell style and add it to the workbook's style table", "tags": "METHOD", "url": "exp/createCellStyle.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getNumCellStyles()", "text": "Get the number of styles the workbook contains", "tags": "METHOD", "url": "exp/getNumCellStyles.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getCellStyleAt(int)", "text": "Get the cell style object at the given index", "tags": "METHOD", "url": "exp/getCellStyleAt.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.write(OutputStream)", "text": "Write out this workbook to an Outputstream.", "tags": "METHOD", "url": "exp/write.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.close()", "text": "Close the underlying input resource (File or Stream),", "tags": "METHOD", "url": "exp/close.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getNames(String)", "text": "Returns all defined names with the given name.", "tags": "METHOD", "url": "exp/getNames.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getAllNames()", "text": "Returns all defined names.", "tags": "METHOD", "url": "exp/getAllNames.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.createName()", "text": "Creates a new (uninitialised) defined name in this workbook", "tags": "METHOD", "url": "exp/createName.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getNameIndex(String)", "text": "Gets the defined name index by nameNote:-1<tt> if not found.", "tags": "METHOD", "url": "exp/getNameIndex.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.removeName(int)", "text": "Remove the defined name at the specified index", "tags": "METHOD", "url": "exp/removeName.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.removeName(String)", "text": "Remove a defined name by name", "tags": "METHOD", "url": "exp/removeName.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.removeName(Name)", "text": "Remove a defined name", "tags": "METHOD", "url": "exp/removeName.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.linkExternalWorkbook(String, Workbook)", "text": "Adds the linking required to allow formulas referencing", "tags": "METHOD", "url": "exp/linkExternalWorkbook.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.setPrintArea(int, String)", "text": "Sets the printarea for the sheet provided", "tags": "METHOD", "url": "exp/setPrintArea.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.setPrintArea(int, int, int, int, int)", "text": "For the Convenience of Java Programmers maintaining pointers.", "tags": "METHOD", "url": "exp/setPrintArea.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getPrintArea(int)", "text": "Retrieves the reference for the printarea of the specified sheet, the sheet name is appended to the reference even if it was not specified.", "tags": "METHOD", "url": "exp/getPrintArea.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.removePrintArea(int)", "text": "Delete the printarea for the sheet specified", "tags": "METHOD", "url": "exp/removePrintArea.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getMissingCellPolicy()", "text": "Retrieves the current policy on what to do when getting missing or blank cells from a row.", "tags": "METHOD", "url": "exp/getMissingCellPolicy.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.setMissingCellPolicy(MissingCellPolicy)", "text": "Sets the policy on what to do when", "tags": "METHOD", "url": "exp/setMissingCellPolicy.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.createDataFormat()", "text": "Returns the instance of DataFormat for this workbook.", "tags": "METHOD", "url": "exp/createDataFormat.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.addPicture(byte[], int)", "text": "Adds a picture to the workbook.", "tags": "METHOD", "url": "exp/addPicture.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getAllPictures()", "text": "Gets all pictures from the Workbook.", "tags": "METHOD", "url": "exp/getAllPictures.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getCreationHelper()", "text": "Returns an object that handles instantiating concrete classes of the various instances one needs for  HSSF and XSSF.", "tags": "METHOD", "url": "exp/getCreationHelper.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.isSheetHidden(int)", "text": "Check whether a sheet is hidden.", "tags": "METHOD", "url": "exp/isSheetHidden.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.isSheetVeryHidden(int)", "text": "Check whether a sheet is very hidden.", "tags": "METHOD", "url": "exp/isSheetVeryHidden.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.setSheetHidden(int, boolean)", "text": "Hide or unhide a sheet", "tags": "METHOD", "url": "exp/setSheetHidden.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getSheetVisibility(int)", "text": "Get the visibility (visible, hidden, very hidden) of a sheet in this workbook", "tags": "METHOD", "url": "exp/getSheetVisibility.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.setSheetVisibility(int, SheetVisibility)", "text": "Hide or unhide a sheet", "tags": "METHOD", "url": "exp/setSheetVisibility.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.addToolPack(UDFFinder)", "text": "Register a new toolpack in this workbook.", "tags": "METHOD", "url": "exp/addToolPack.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.setForceFormulaRecalculation(boolean)", "text": "Whether the application shall perform a full recalculation when the workbook is opened", "tags": "METHOD", "url": "exp/setForceFormulaRecalculation.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getForceFormulaRecalculation()", "text": "Whether Excel will be asked to recalculate all formulas when the  workbook is opened.", "tags": "METHOD", "url": "exp/getForceFormulaRecalculation.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.getSpreadsheetVersion()", "text": "Returns the spreadsheet version of this workbook", "tags": "METHOD", "url": "exp/getSpreadsheetVersion.html"},
                {"title": "org.apache.poi.ss.usermodel.Workbook.addOlePackage(byte[], String, String, String)", "text": "Adds an OLE package manager object with the given content to the sheet", "tags": "METHOD", "url": "exp/addOlePackage.html"},
                {"title": "org.apache.poi.ss.util.AreaReference.isContiguous(String)", "text": "Is the reference for a contiguous (i", "tags": "METHOD", "url": "exp/isContiguous.html"},
                {"title": "org.apache.poi.ss.util.AreaReference.isWholeColumnReference(SpreadsheetVersion, CellReference, CellReference)", "text": "Is the reference for a whole-column reference, such as C:C or D:G ?", "tags": "METHOD", "url": "exp/isWholeColumnReference.html"},
                {"title": "org.apache.poi.ss.util.AreaReference.generateContiguous(String)", "text": "Takes a non-contiguous area reference, and returns an array of contiguous area references.", "tags": "METHOD", "url": "exp/generateContiguous.html"},
                {"title": "org.apache.poi.ss.util.AreaReference.getFirstCell()", "text": "left corner of the area (but this is not a requirement).", "tags": "METHOD", "url": "exp/getFirstCell.html"},
                {"title": "org.apache.poi.ss.util.AreaReference.getLastCell()", "text": "Note - if this area reference refers to a single cell, the return value of this method will", "tags": "METHOD", "url": "exp/getLastCell.html"},
                {"title": "org.apache.poi.ss.util.AreaReference.getAllReferencedCells()", "text": "Returns a reference to every cell covered by this area", "tags": "METHOD", "url": "exp/getAllReferencedCells.html"},
                {"title": "org.apache.poi.ss.util.AreaReference.formatAsString()", "text": "Returns a text representation of this area reference", "tags": "METHOD", "url": "exp/formatAsString.html"},
                {"title": "org.apache.poi.ss.util.AreaReference.separateAreaRefs(String)", "text": "Separates Area refs in two parts and returns them as separate elements in a String array, each qualified with the sheet name (if present)", "tags": "METHOD", "url": "exp/separateAreaRefs.html"},
                {"title": "org.apache.poi.ss.util.CellAddress.getRow()", "text": "Get the cell address row", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.ss.util.CellAddress.getColumn()", "text": "Get the cell address column", "tags": "METHOD", "url": "exp/getColumn.html"},
                {"title": "org.apache.poi.ss.util.CellAddress.compareTo(CellAddress)", "text": "Compare this CellAddress using the \"natural\" row-major, column-minor ordering. That is, top-left to bottom-right ordering.", "tags": "METHOD", "url": "exp/compareTo.html"},
                {"title": "org.apache.poi.ss.util.CellAddress.formatAsString()", "text": "Same as {@link #toString()}", "tags": "METHOD", "url": "exp/formatAsString.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddress.formatAsString()", "text": "like single cell references (e.g. 'A1' instead of 'A1:A1').", "tags": "METHOD", "url": "exp/formatAsString.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddress.valueOf(String)", "text": "Creates a CellRangeAddress from a cell range reference string", "tags": "METHOD", "url": "exp/valueOf.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddressBase.validate(SpreadsheetVersion)", "text": "Validate the range limits against the supplied version of Excel", "tags": "METHOD", "url": "exp/validate.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddressBase.validateRow(int, SpreadsheetVersion)", "text": "Runs a bounds check for row numbers", "tags": "METHOD", "url": "exp/validateRow.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddressBase.validateColumn(int, SpreadsheetVersion)", "text": "Runs a bounds check for column numbers", "tags": "METHOD", "url": "exp/validateColumn.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddressBase.isInRange(int, int)", "text": "Determines if the given coordinates lie within the bounds of this range.", "tags": "METHOD", "url": "exp/isInRange.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddressBase.containsRow(int)", "text": "Check if the row is in the specified cell range", "tags": "METHOD", "url": "exp/containsRow.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddressBase.containsColumn(int)", "text": "Check if the column is in the specified cell range", "tags": "METHOD", "url": "exp/containsColumn.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddressBase.intersects(CellRangeAddressBase)", "text": "Determines whether or not this CellRangeAddress and the specified CellRangeAddress intersect.", "tags": "METHOD", "url": "exp/intersects.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddressList.countRanges()", "text": "Get the number of following ADDR structures", "tags": "METHOD", "url": "exp/countRanges.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddressList.addCellRangeAddress(int, int, int, int)", "text": "Add a cell range structure.", "tags": "METHOD", "url": "exp/addCellRangeAddress.html"},
                {"title": "org.apache.poi.ss.util.CellRangeAddressList.getEncodedSize(int)", "text": "including the initial 2 byte range count", "tags": "METHOD", "url": "exp/getEncodedSize.html"},
                {"title": "org.apache.poi.ss.util.CellRangeUtil.intersect(CellRangeAddress, CellRangeAddress)", "text": "Get the type of intersection between two cell ranges <ul>", "tags": "METHOD", "url": "exp/intersect.html"},
                {"title": "org.apache.poi.ss.util.CellRangeUtil.mergeCellRanges(CellRangeAddress[])", "text": "Do all possible cell merges between cells of the list so that: <ul>", "tags": "METHOD", "url": "exp/mergeCellRanges.html"},
                {"title": "org.apache.poi.ss.util.CellRangeUtil.contains(CellRangeAddress, CellRangeAddress)", "text": "Check if cell range A contains cell range B (B <= A) TODO: move this into {@link CellRangeAddressBase}", "tags": "METHOD", "url": "exp/contains.html"},
                {"title": "org.apache.poi.ss.util.CellRangeUtil.hasExactSharedBorder(CellRangeAddress, CellRangeAddress)", "text": "Check if the two cell ranges have a shared border. the two ranges together make a simple rectangular region.", "tags": "METHOD", "url": "exp/hasExactSharedBorder.html"},
                {"title": "org.apache.poi.ss.util.CellRangeUtil.createEnclosingCellRange(CellRangeAddress, CellRangeAddress)", "text": "Create an enclosing CellRange for the two cell ranges.", "tags": "METHOD", "url": "exp/createEnclosingCellRange.html"},
                {"title": "org.apache.poi.ss.util.CellReference.getSheetName()", "text": "escaped or delimited", "tags": "METHOD", "url": "exp/getSheetName.html"},
                {"title": "org.apache.poi.ss.util.CellReference.convertColStringToIndex(String)", "text": "takes in a column reference portion of a CellRef and converts it from", "tags": "METHOD", "url": "exp/convertColStringToIndex.html"},
                {"title": "org.apache.poi.ss.util.CellReference.classifyCellReference(String, SpreadsheetVersion)", "text": "Classifies an identifier as either a simple (2D) cell reference or a named range name", "tags": "METHOD", "url": "exp/classifyCellReference.html"},
                {"title": "org.apache.poi.ss.util.CellReference.cellReferenceIsWithinRange(String, String, SpreadsheetVersion)", "text": "Used to decide whether a name of the form \"[A-Z][0-9]\" that appears in a formula can be", "tags": "METHOD", "url": "exp/cellReferenceIsWithinRange.html"},
                {"title": "org.apache.poi.ss.util.CellRefParts.separateRefParts(String)", "text": "Separates the sheet name, row, and columns from a cell reference string", "tags": "METHOD", "url": "exp/separateRefParts.html"},
                {"title": "org.apache.poi.ss.util.CellRefParts.convertNumToColString(int)", "text": "Takes in a 0-based base-10 column and returns a ALPHA-26", "tags": "METHOD", "url": "exp/convertNumToColString.html"},
                {"title": "org.apache.poi.ss.util.CellRefParts.formatAsString()", "text": "Returns a text representation of this cell reference", "tags": "METHOD", "url": "exp/formatAsString.html"},
                {"title": "org.apache.poi.ss.util.CellRefParts.getCellRefParts()", "text": "Returns the three parts of the cell reference, the", "tags": "METHOD", "url": "exp/getCellRefParts.html"},
                {"title": "org.apache.poi.ss.util.CellRefParts.equals(Object)", "text": "Checks whether this cell reference is equal to another object.", "tags": "METHOD", "url": "exp/equals.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.getRow(int, Sheet)", "text": "Get a row from the spreadsheet, and create it if it doesn't exist.", "tags": "METHOD", "url": "exp/getRow.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.getCell(Row, int)", "text": "Get a specific cell from a row. If the cell doesn't exist, then create it.", "tags": "METHOD", "url": "exp/getCell.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.createCell(Row, int, String, CellStyle)", "text": "Creates a cell, gives it a value, and applies a style if provided", "tags": "METHOD", "url": "exp/createCell.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.createCell(Row, int, String)", "text": "Create a cell, and give it a value.", "tags": "METHOD", "url": "exp/createCell.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.setAlignment(Cell, HorizontalAlignment)", "text": "Take a cell, and align it", "tags": "METHOD", "url": "exp/setAlignment.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.setVerticalAlignment(Cell, VerticalAlignment)", "text": "Take a cell, and vertically align it", "tags": "METHOD", "url": "exp/setVerticalAlignment.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.setFont(Cell, Font)", "text": "Take a cell, and apply a font to it", "tags": "METHOD", "url": "exp/setFont.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.setCellStyleProperties(Cell, Map<String, Object>)", "text": "cellproperties", "tags": "METHOD", "url": "exp/setCellStyleProperties.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.setCellStyleProperty(Cell, String, Object)", "text": "cellpropertyNamepropertyValue cell", "tags": "METHOD", "url": "exp/setCellStyleProperty.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.getFormatProperties(CellStyle)", "text": "Returns a map containing the format properties of the given cell style", "tags": "METHOD", "url": "exp/getFormatProperties.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.putAll(Map<String, Object>, Map<String, Object>)", "text": "Copies the entries in src to dest, using the preferential data type so that maps can be compared for equality", "tags": "METHOD", "url": "exp/putAll.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.setFormatProperties(CellStyle, Workbook, Map<String, Object>)", "text": "Sets the format properties of the given style based on the given map.", "tags": "METHOD", "url": "exp/setFormatProperties.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.getShort(Map<String, Object>, String)", "text": "Utility method that returns the named short value form the given map. otherwise the property value", "tags": "METHOD", "url": "exp/getShort.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.getBorderStyle(Map<String, Object>, String)", "text": "Utility method that returns the named BorderStyle value form the given map.", "tags": "METHOD", "url": "exp/getBorderStyle.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.getFillPattern(Map<String, Object>, String)", "text": "Utility method that returns the named FillPatternType value form the given map.", "tags": "METHOD", "url": "exp/getFillPattern.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.getHorizontalAlignment(Map<String, Object>, String)", "text": "Utility method that returns the named HorizontalAlignment value form the given map.", "tags": "METHOD", "url": "exp/getHorizontalAlignment.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.getVerticalAlignment(Map<String, Object>, String)", "text": "Utility method that returns the named VerticalAlignment value form the given map.", "tags": "METHOD", "url": "exp/getVerticalAlignment.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.getBoolean(Map<String, Object>, String)", "text": "Utility method that returns the named boolean value form the given map. true otherwise", "tags": "METHOD", "url": "exp/getBoolean.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.put(Map<String, Object>, String, Object)", "text": "Utility method that puts the given value to the given map.", "tags": "METHOD", "url": "exp/put.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.putShort(Map<String, Object>, String, short)", "text": "Utility method that puts the named short value to the given map.", "tags": "METHOD", "url": "exp/putShort.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.putEnum(Map<String, Object>, String, Enum<?>)", "text": "Utility method that puts the named BorderStyle, HorizontalAlignment, VerticalAlignment, etc value to the given map.", "tags": "METHOD", "url": "exp/putEnum.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.putBoolean(Map<String, Object>, String, boolean)", "text": "Utility method that puts the named boolean value to the given map.", "tags": "METHOD", "url": "exp/putBoolean.html"},
                {"title": "org.apache.poi.ss.util.UnicodeMapping.translateUnicodeValues(Cell)", "text": "Looks for text in the cell that should be unicode, like &alpha; and provides the unicode version of it.", "tags": "METHOD", "url": "exp/translateUnicodeValues.html"},
                {"title": "org.apache.poi.ss.util.cellwalk.CellWalk.isTraverseEmptyCells()", "text": "Should we call handler on empty (blank) cells", "tags": "METHOD", "url": "exp/isTraverseEmptyCells.html"},
                {"title": "org.apache.poi.ss.util.cellwalk.CellWalk.setTraverseEmptyCells(boolean)", "text": "Sets the traverseEmptyCells property.", "tags": "METHOD", "url": "exp/setTraverseEmptyCells.html"},
                {"title": "org.apache.poi.ss.util.cellwalk.CellWalk.traverse(CellHandler)", "text": "Traverse cell range from top left to bottom right cell.", "tags": "METHOD", "url": "exp/traverse.html"},
                {"title": "org.apache.poi.ss.util.cellwalk.CellWalkContext.getOrdinalNumber()", "text": "Returns ordinal number of cell in range", "tags": "METHOD", "url": "exp/getOrdinalNumber.html"},
                {"title": "org.apache.poi.ss.util.cellwalk.CellWalkContext.getRowNumber()", "text": "Returns number of current row.", "tags": "METHOD", "url": "exp/getRowNumber.html"},
                {"title": "org.apache.poi.ss.util.cellwalk.CellWalkContext.getColumnNumber()", "text": "Returns number of current column.", "tags": "METHOD", "url": "exp/getColumnNumber.html"},
                {"title": "org.apache.poi.ss.util.ExpandedDouble.normaliseBaseTen()", "text": "Convert to an equivalent {@link NormalisedDecimal} representation having 15 decimal digits of precision in the non-fractional bits of the significand.", "tags": "METHOD", "url": "exp/normaliseBaseTen.html"},
                {"title": "org.apache.poi.ss.util.ImageUtils.getImageDimension(InputStream, int)", "text": "Return the dimension of this image {@link org.apache.poi.ss.usermodel.Workbook#PICTURE_TYPE_PNG} or {@link org.apache.poi.ss.usermodel.Workbook#PICTURE_TYPE_DIB}", "tags": "METHOD", "url": "exp/getImageDimension.html"},
                {"title": "org.apache.poi.ss.util.ImageUtils.getResolution(ImageReader)", "text": "The metadata of PNG and JPEG can contain the width of a pixel in millimeters", "tags": "METHOD", "url": "exp/getResolution.html"},
                {"title": "org.apache.poi.ss.util.ImageUtils.setPreferredSize(Picture, double, double)", "text": "Calculate and set the preferred size (anchor) for this picture.", "tags": "METHOD", "url": "exp/setPreferredSize.html"},
                {"title": "org.apache.poi.ss.util.ImageUtils.getDimensionFromAnchor(Picture)", "text": "Calculates the dimensions in EMUs for the anchor of the given picture", "tags": "METHOD", "url": "exp/getDimensionFromAnchor.html"},
                {"title": "org.apache.poi.ss.util.NormalisedDecimal.roundUnits()", "text": "Rounds at the digit with value 10", "tags": "METHOD", "url": "exp/roundUnits.html"},
                {"title": "org.apache.poi.ss.util.NormalisedDecimal.normaliseBaseTwo()", "text": "Convert to an equivalent {@link ExpandedDouble} representation (binary frac and exponent)", "tags": "METHOD", "url": "exp/normaliseBaseTwo.html"},
                {"title": "org.apache.poi.ss.util.NormalisedDecimal.getSignificantDecimalDigitsLastDigitRounded()", "text": "Rounds the first whole digit position (considers only units digit, not frational part)", "tags": "METHOD", "url": "exp/getSignificantDecimalDigitsLastDigitRounded.html"},
                {"title": "org.apache.poi.ss.util.NormalisedDecimal.compareNormalised(NormalisedDecimal)", "text": "assumes both this and other are normalised", "tags": "METHOD", "url": "exp/compareNormalised.html"},
                {"title": "org.apache.poi.ss.util.NumberComparer.compare(double, double)", "text": "This class attempts to reproduce Excel's behaviour for comparing numbers", "tags": "METHOD", "url": "exp/compare.html"},
                {"title": "org.apache.poi.ss.util.NumberComparer.compareSubnormalNumbers(long, long, boolean)", "text": "If both numbers are subnormal, Excel seems to use standard comparison rules", "tags": "METHOD", "url": "exp/compareSubnormalNumbers.html"},
                {"title": "org.apache.poi.ss.util.NumberComparer.compareAcrossSubnormalThreshold(long, long, boolean)", "text": "Usually any normal number is greater (in magnitude) than any subnormal number. However there are some anomalous cases around the threshold where Excel produces screwy results", "tags": "METHOD", "url": "exp/compareAcrossSubnormalThreshold.html"},
                {"title": "org.apache.poi.ss.util.NumberComparer.toHex(double)", "text": "for formatting double values in error messages", "tags": "METHOD", "url": "exp/toHex.html"},
                {"title": "org.apache.poi.ss.util.NumberToTextConverter.toText(double)", "text": "Converts the supplied  to the text representation that Excel would give if", "tags": "METHOD", "url": "exp/toText.html"},
                {"title": "org.apache.poi.ss.util.PaneInformation.getVerticalSplitPosition()", "text": "Returns the vertical position of the split", "tags": "METHOD", "url": "exp/getVerticalSplitPosition.html"},
                {"title": "org.apache.poi.ss.util.PaneInformation.getHorizontalSplitPosition()", "text": "Returns the horizontal position of the split", "tags": "METHOD", "url": "exp/getHorizontalSplitPosition.html"},
                {"title": "org.apache.poi.ss.util.PaneInformation.getHorizontalSplitTopRow()", "text": "For a horizontal split returns the top row in the BOTTOM pane.", "tags": "METHOD", "url": "exp/getHorizontalSplitTopRow.html"},
                {"title": "org.apache.poi.ss.util.PaneInformation.getVerticalSplitLeftColumn()", "text": "For a vertical split returns the left column in the RIGHT pane.", "tags": "METHOD", "url": "exp/getVerticalSplitLeftColumn.html"},
                {"title": "org.apache.poi.ss.util.PaneInformation.getActivePane()", "text": "Returns the active pane", "tags": "METHOD", "url": "exp/getActivePane.html"},
                {"title": "org.apache.poi.ss.util.PaneInformation.isFreezePane()", "text": "Returns true if this is a Freeze pane, false if it is a split pane.", "tags": "METHOD", "url": "exp/isFreezePane.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawBorders(CellRangeAddress, BorderStyle, BorderExtent)", "text": "Draws a group of cell borders for a cell range", "tags": "METHOD", "url": "exp/drawBorders.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawBorders(CellRangeAddress, BorderStyle, short, BorderExtent)", "text": "Draws a group of cell borders for a cell range", "tags": "METHOD", "url": "exp/drawBorders.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawTopBorder(CellRangeAddress, BorderStyle)", "text": "- {@link CellRangeAddress} range of cells on which borders are", "tags": "METHOD", "url": "exp/drawTopBorder.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawBottomBorder(CellRangeAddress, BorderStyle)", "text": "- {@link CellRangeAddress} range of cells on which borders are", "tags": "METHOD", "url": "exp/drawBottomBorder.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawLeftBorder(CellRangeAddress, BorderStyle)", "text": "- {@link CellRangeAddress} range of cells on which borders are", "tags": "METHOD", "url": "exp/drawLeftBorder.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawRightBorder(CellRangeAddress, BorderStyle)", "text": "- {@link CellRangeAddress} range of cells on which borders are", "tags": "METHOD", "url": "exp/drawRightBorder.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawOutsideBorders(CellRangeAddress, BorderStyle, BorderExtent)", "text": "- {@link CellRangeAddress} range of cells on which borders are", "tags": "METHOD", "url": "exp/drawOutsideBorders.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawHorizontalBorders(CellRangeAddress, BorderStyle, BorderExtent)", "text": "- {@link CellRangeAddress} range of cells on which borders are", "tags": "METHOD", "url": "exp/drawHorizontalBorders.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawVerticalBorders(CellRangeAddress, BorderStyle, BorderExtent)", "text": "- {@link CellRangeAddress} range of cells on which borders are", "tags": "METHOD", "url": "exp/drawVerticalBorders.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.removeBorders(CellRangeAddress)", "text": "Removes all border properties from this {@link PropertyTemplate} for the specified range.", "tags": "METHOD", "url": "exp/removeBorders.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.applyBorders(Sheet)", "text": "Applies the drawn borders to a Sheet", "tags": "METHOD", "url": "exp/applyBorders.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawBorderColors(CellRangeAddress, short, BorderExtent)", "text": "Sets the color for a group of cell borders for a cell range", "tags": "METHOD", "url": "exp/drawBorderColors.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawTopBorderColor(CellRangeAddress, short)", "text": "- {@link CellRangeAddress} range of cells on which colors are", "tags": "METHOD", "url": "exp/drawTopBorderColor.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawBottomBorderColor(CellRangeAddress, short)", "text": "- {@link CellRangeAddress} range of cells on which colors are", "tags": "METHOD", "url": "exp/drawBottomBorderColor.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawLeftBorderColor(CellRangeAddress, short)", "text": "- {@link CellRangeAddress} range of cells on which colors are", "tags": "METHOD", "url": "exp/drawLeftBorderColor.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawRightBorderColor(CellRangeAddress, short)", "text": "- {@link CellRangeAddress} range of cells on which colors are", "tags": "METHOD", "url": "exp/drawRightBorderColor.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawOutsideBorderColors(CellRangeAddress, short, BorderExtent)", "text": "- {@link CellRangeAddress} range of cells on which colors are", "tags": "METHOD", "url": "exp/drawOutsideBorderColors.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawHorizontalBorderColors(CellRangeAddress, short, BorderExtent)", "text": "- {@link CellRangeAddress} range of cells on which colors are", "tags": "METHOD", "url": "exp/drawHorizontalBorderColors.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.drawVerticalBorderColors(CellRangeAddress, short, BorderExtent)", "text": "- {@link CellRangeAddress} range of cells on which colors are", "tags": "METHOD", "url": "exp/drawVerticalBorderColors.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.removeBorderColors(CellRangeAddress)", "text": "Removes all border properties from this {@link PropertyTemplate} for the specified range.", "tags": "METHOD", "url": "exp/removeBorderColors.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.addProperty(int, int, String, short)", "text": "Adds a property to this {@link PropertyTemplate} for a given cell", "tags": "METHOD", "url": "exp/addProperty.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.addProperty(int, int, String, Object)", "text": "Adds a property to this {@link PropertyTemplate} for a given cell", "tags": "METHOD", "url": "exp/addProperty.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.removeProperties(int, int, Set<String>)", "text": "Removes a set of properties from this {@link PropertyTemplate} for a given cell", "tags": "METHOD", "url": "exp/removeProperties.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.getNumBorders(CellAddress)", "text": "Retrieves the number of borders assigned to a cell", "tags": "METHOD", "url": "exp/getNumBorders.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.getNumBorders(int, int)", "text": "Retrieves the number of borders assigned to a cell", "tags": "METHOD", "url": "exp/getNumBorders.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.getNumBorderColors(CellAddress)", "text": "Retrieves the number of border colors assigned to a cell", "tags": "METHOD", "url": "exp/getNumBorderColors.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.getNumBorderColors(int, int)", "text": "Retrieves the number of border colors assigned to a cell", "tags": "METHOD", "url": "exp/getNumBorderColors.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.getBorderStyle(CellAddress, String)", "text": "Retrieves the border style for a given cell", "tags": "METHOD", "url": "exp/getBorderStyle.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.getBorderStyle(int, int, String)", "text": "Retrieves the border style for a given cell", "tags": "METHOD", "url": "exp/getBorderStyle.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.getTemplateProperty(CellAddress, String)", "text": "Retrieves the border style for a given cell", "tags": "METHOD", "url": "exp/getTemplateProperty.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.getTemplateProperty(int, int, String)", "text": "Retrieves the border style for a given cell", "tags": "METHOD", "url": "exp/getTemplateProperty.html"},
                {"title": "org.apache.poi.ss.util.PropertyTemplate.getShort(Object)", "text": "Converts a Short object to a short value or 0 if the object is not a Short", "tags": "METHOD", "url": "exp/getShort.html"},
                {"title": "org.apache.poi.ss.util.CellPropertySetter.setBorderLeft(BorderStyle, CellRangeAddress, Sheet)", "text": "Sets the left border style for a region of cells by manipulating the cell style of the individual cells on the left", "tags": "METHOD", "url": "exp/setBorderLeft.html"},
                {"title": "org.apache.poi.ss.util.CellPropertySetter.setLeftBorderColor(int, CellRangeAddress, Sheet)", "text": "Sets the left border color for a region of cells by manipulating the cell style of the individual cells on the left", "tags": "METHOD", "url": "exp/setLeftBorderColor.html"},
                {"title": "org.apache.poi.ss.util.CellPropertySetter.setBorderRight(BorderStyle, CellRangeAddress, Sheet)", "text": "Sets the right border style for a region of cells by manipulating the cell style of the individual cells on the right", "tags": "METHOD", "url": "exp/setBorderRight.html"},
                {"title": "org.apache.poi.ss.util.CellPropertySetter.setRightBorderColor(int, CellRangeAddress, Sheet)", "text": "Sets the right border color for a region of cells by manipulating the cell style of the individual cells on the right", "tags": "METHOD", "url": "exp/setRightBorderColor.html"},
                {"title": "org.apache.poi.ss.util.CellPropertySetter.setBorderBottom(BorderStyle, CellRangeAddress, Sheet)", "text": "Sets the bottom border style for a region of cells by manipulating the cell style of the individual cells on the bottom", "tags": "METHOD", "url": "exp/setBorderBottom.html"},
                {"title": "org.apache.poi.ss.util.CellPropertySetter.setBottomBorderColor(int, CellRangeAddress, Sheet)", "text": "Sets the bottom border color for a region of cells by manipulating the cell style of the individual cells on the bottom", "tags": "METHOD", "url": "exp/setBottomBorderColor.html"},
                {"title": "org.apache.poi.ss.util.CellPropertySetter.setBorderTop(BorderStyle, CellRangeAddress, Sheet)", "text": "Sets the top border style for a region of cells by manipulating the cell style of the individual cells on the top", "tags": "METHOD", "url": "exp/setBorderTop.html"},
                {"title": "org.apache.poi.ss.util.CellPropertySetter.setTopBorderColor(int, CellRangeAddress, Sheet)", "text": "Sets the top border color for a region of cells by manipulating the cell style of the individual cells on the top", "tags": "METHOD", "url": "exp/setTopBorderColor.html"},
                {"title": "org.apache.poi.ss.util.SheetBuilder.getCreateEmptyCells()", "text": "Returns {@code true} if null array elements should be treated as empty", "tags": "METHOD", "url": "exp/getCreateEmptyCells.html"},
                {"title": "org.apache.poi.ss.util.SheetBuilder.setCreateEmptyCells(boolean)", "text": "Specifies if null array elements should be treated as empty cells. treated as empty cells", "tags": "METHOD", "url": "exp/setCreateEmptyCells.html"},
                {"title": "org.apache.poi.ss.util.SheetBuilder.setSheetName(String)", "text": "Specifies name of the sheet to build. If not specified, default name (provided by workbook) will be used instead.", "tags": "METHOD", "url": "exp/setSheetName.html"},
                {"title": "org.apache.poi.ss.util.SheetBuilder.build()", "text": "Builds sheet from parent workbook and 2D array with cell", "tags": "METHOD", "url": "exp/build.html"},
                {"title": "org.apache.poi.ss.util.SheetBuilder.setCellValue(Cell, Object)", "text": "Sets the cell value using object type information.", "tags": "METHOD", "url": "exp/setCellValue.html"},
                {"title": "org.apache.poi.ss.util.SheetUtil.getCellWidth(Cell, int, DataFormatter, boolean)", "text": "Compute width of a single cell", "tags": "METHOD", "url": "exp/getCellWidth.html"},
                {"title": "org.apache.poi.ss.util.SheetUtil.getCellWidth(int, int, CellStyle, double, AttributedString)", "text": "Calculate the best-fit width for a cell If a merged cell spans multiple columns, evenly distribute the column width among those columns", "tags": "METHOD", "url": "exp/getCellWidth.html"},
                {"title": "org.apache.poi.ss.util.SheetUtil.getColumnWidth(Sheet, int, boolean)", "text": "Compute width of a column and return the result", "tags": "METHOD", "url": "exp/getColumnWidth.html"},
                {"title": "org.apache.poi.ss.util.SheetUtil.getColumnWidth(Sheet, int, boolean, int, int)", "text": "Compute width of a column based on a subset of the rows and return the result", "tags": "METHOD", "url": "exp/getColumnWidth.html"},
                {"title": "org.apache.poi.ss.util.SheetUtil.getDefaultCharWidth(Workbook)", "text": "Get default character width using the Workbook's default font", "tags": "METHOD", "url": "exp/getDefaultCharWidth.html"},
                {"title": "org.apache.poi.ss.util.SheetUtil.getColumnWidthForRow(Row, int, int, DataFormatter, boolean)", "text": "Compute width of a single cell in a row Convenience method for {@link #getCellWidth}", "tags": "METHOD", "url": "exp/getColumnWidthForRow.html"},
                {"title": "org.apache.poi.ss.util.SheetUtil.canComputeColumnWidth(Font)", "text": "Check if the Fonts are installed correctly so that Java can compute the size of", "tags": "METHOD", "url": "exp/canComputeColumnWidth.html"},
                {"title": "org.apache.poi.ss.util.SheetUtil.copyAttributes(Font, AttributedString, int, int)", "text": "Copy text attributes from the supplied Font to Java2D AttributedString", "tags": "METHOD", "url": "exp/copyAttributes.html"},
                {"title": "org.apache.poi.ss.util.SheetUtil.getCellWithMerges(Sheet, int, int)", "text": "Return the cell, taking account of merged regions", "tags": "METHOD", "url": "exp/getCellWithMerges.html"},
                {"title": "org.apache.poi.ss.util.WorkbookUtil.createSafeSheetName(String)", "text": "Creates a valid sheet name, which is conform to the rules", "tags": "METHOD", "url": "exp/createSafeSheetName.html"},
                {"title": "org.apache.poi.ss.util.WorkbookUtil.createSafeSheetName(String, char)", "text": "Creates a valid sheet name, which is conform to the rules", "tags": "METHOD", "url": "exp/createSafeSheetName.html"},
                {"title": "org.apache.poi.ss.util.WorkbookUtil.validateSheetName(String)", "text": "Validates sheet name. MUST", "tags": "METHOD", "url": "exp/validateSheetName.html"},
                {"title": "org.apache.poi.util.ArrayUtil.arraycopy(byte[], int, byte[], int, int)", "text": "This is really a debugging version of ", "tags": "METHOD", "url": "exp/arraycopy.html"},
                {"title": "org.apache.poi.util.ArrayUtil.arrayMoveWithin(Object[], int, int, int)", "text": "Moves a number of entries in an array to another point in the array, shifting those inbetween as required.", "tags": "METHOD", "url": "exp/arrayMoveWithin.html"},
                {"title": "org.apache.poi.util.BoundedInputStream.read()", "text": "Invokes the delegate's  method if", "tags": "METHOD", "url": "exp/read.html"},
                {"title": "org.apache.poi.util.BoundedInputStream.read(byte[])", "text": "Invokes the delegate's  method. the limit has been reached.", "tags": "METHOD", "url": "exp/read.html"},
                {"title": "org.apache.poi.util.BoundedInputStream.read(byte[], int, int)", "text": "Invokes the delegate's  method. the limit has been reached.", "tags": "METHOD", "url": "exp/read.html"},
                {"title": "org.apache.poi.util.BoundedInputStream.skip(long)", "text": "Invokes the delegate's  method.", "tags": "METHOD", "url": "exp/skip.html"},
                {"title": "org.apache.poi.util.BoundedInputStream.available()", "text": "{@inheritDoc}", "tags": "METHOD", "url": "exp/available.html"},
                {"title": "org.apache.poi.util.BoundedInputStream.toString()", "text": "Invokes the delegate's  method.", "tags": "METHOD", "url": "exp/toString.html"},
                {"title": "org.apache.poi.util.BoundedInputStream.close()", "text": "Invokes the delegate's  method if {@link #isPropagateClose()} is .", "tags": "METHOD", "url": "exp/close.html"},
                {"title": "org.apache.poi.util.BoundedInputStream.reset()", "text": "Invokes the delegate's  method.", "tags": "METHOD", "url": "exp/reset.html"},
                {"title": "org.apache.poi.util.BoundedInputStream.mark(int)", "text": "Invokes the delegate's  method.", "tags": "METHOD", "url": "exp/mark.html"},
                {"title": "org.apache.poi.util.BoundedInputStream.markSupported()", "text": "Invokes the delegate's  method.", "tags": "METHOD", "url": "exp/markSupported.html"},
                {"title": "org.apache.poi.util.BoundedInputStream.isPropagateClose()", "text": "Indicates whether the {@link #close()} method", "tags": "METHOD", "url": "exp/isPropagateClose.html"},
                {"title": "org.apache.poi.util.BoundedInputStream.setPropagateClose(boolean)", "text": "Set whether the {@link #close()} method", "tags": "METHOD", "url": "exp/setPropagateClose.html"},
                {"title": "org.apache.poi.util.CodePageUtil.getBytesInCodePage(String, int)", "text": "Converts a string into bytes, in the equivalent character encoding to the supplied codepage number.", "tags": "METHOD", "url": "exp/getBytesInCodePage.html"},
                {"title": "org.apache.poi.util.CodePageUtil.getStringFromCodePage(byte[], int)", "text": "Converts the bytes into a String, based on the equivalent character encoding to the supplied codepage number.", "tags": "METHOD", "url": "exp/getStringFromCodePage.html"},
                {"title": "org.apache.poi.util.CodePageUtil.getStringFromCodePage(byte[], int, int, int)", "text": "Converts the bytes into a String, based on the equivalent character encoding to the supplied codepage number.", "tags": "METHOD", "url": "exp/getStringFromCodePage.html"},
                {"title": "org.apache.poi.util.CodePageUtil.codepageToEncoding(int)", "text": "the encoding name is \"UTF-8\"", "tags": "METHOD", "url": "exp/codepageToEncoding.html"},
                {"title": "org.apache.poi.util.CodePageUtil.codepageToEncoding(int, boolean)", "text": "(eg Cp1251, ISO8859_5) or Java NIO format (eg windows-1252, ISO-8859-9) less than zero.", "tags": "METHOD", "url": "exp/codepageToEncoding.html"},
                {"title": "org.apache.poi.util.CommonsLogger._log(int, Object)", "text": "Log a message", "tags": "METHOD", "url": "exp/_log.html"},
                {"title": "org.apache.poi.util.CommonsLogger._log(int, Object, Throwable)", "text": "Log a message", "tags": "METHOD", "url": "exp/_log.html"},
                {"title": "org.apache.poi.util.CommonsLogger.check(int)", "text": "Check if a logger is enabled to log at the specified level", "tags": "METHOD", "url": "exp/check.html"},
                {"title": "org.apache.poi.util.DefaultTempFileCreationStrategy.createTempDirectory(File)", "text": "Attempt to create a directory, including any necessary parent directories. Does nothing if directory already exists.", "tags": "METHOD", "url": "exp/createTempDirectory.html"},
                {"title": "org.apache.poi.util.DelayableLittleEndianOutput.createDelayedOutput(int)", "text": "Creates an output stream intended for outputting a sequence of  bytes.", "tags": "METHOD", "url": "exp/createDelayedOutput.html"},
                {"title": "org.apache.poi.util.HexDump.dump(byte[], long, OutputStream, int, int)", "text": "dump an array of bytes to an OutputStream", "tags": "METHOD", "url": "exp/dump.html"},
                {"title": "org.apache.poi.util.HexDump.toHex(byte[])", "text": "Converts the parameter to a hex value.", "tags": "METHOD", "url": "exp/toHex.html"},
                {"title": "org.apache.poi.util.HexDump.toHex(short[])", "text": "Converts the parameter to a hex value.", "tags": "METHOD", "url": "exp/toHex.html"},
                {"title": "org.apache.poi.util.HexDump.toHex(byte[], int)", "text": "will be written to a new line", "tags": "METHOD", "url": "exp/toHex.html"},
                {"title": "org.apache.poi.util.HexDump.toHex(short)", "text": "Converts the parameter to a hex value.", "tags": "METHOD", "url": "exp/toHex.html"},
                {"title": "org.apache.poi.util.HexDump.toHex(byte)", "text": "Converts the parameter to a hex value.", "tags": "METHOD", "url": "exp/toHex.html"},
                {"title": "org.apache.poi.util.HexDump.toHex(int)", "text": "Converts the parameter to a hex value.", "tags": "METHOD", "url": "exp/toHex.html"},
                {"title": "org.apache.poi.util.HexDump.toHex(long)", "text": "Converts the parameter to a hex value.", "tags": "METHOD", "url": "exp/toHex.html"},
                {"title": "org.apache.poi.util.HexDump.toHex(String)", "text": "Converts the string to a string of hex values.", "tags": "METHOD", "url": "exp/toHex.html"},
                {"title": "org.apache.poi.util.HexDump.dump(InputStream, PrintStream, int, int)", "text": "Dumps  bytes to an output stream.", "tags": "METHOD", "url": "exp/dump.html"},
                {"title": "org.apache.poi.util.HexRead.readData(String)", "text": "This method reads hex data from a filename and returns a byte array. The file may contain line comments that are preceded with a # symbol.", "tags": "METHOD", "url": "exp/readData.html"},
                {"title": "org.apache.poi.util.HexRead.readData(InputStream, String)", "text": "Same as readData(String) except that this method allows you to specify sections within a file.  Sections are referenced using section headers in the form:", "tags": "METHOD", "url": "exp/readData.html"},
                {"title": "org.apache.poi.util.IntMapper.add(T)", "text": "Appends the specified element to the end of this list method).", "tags": "METHOD", "url": "exp/add.html"},
                {"title": "org.apache.poi.util.IOUtils.peekFirst8Bytes(InputStream)", "text": "Peeks at the first 8 bytes of the stream", "tags": "METHOD", "url": "exp/peekFirst8Bytes.html"},
                {"title": "org.apache.poi.util.IOUtils.peekFirstNBytes(InputStream, int)", "text": "Peeks at the first N bytes of the stream", "tags": "METHOD", "url": "exp/peekFirstNBytes.html"},
                {"title": "org.apache.poi.util.IOUtils.toByteArray(InputStream)", "text": "Reads all the data from the input stream, and returns the bytes read.", "tags": "METHOD", "url": "exp/toByteArray.html"},
                {"title": "org.apache.poi.util.IOUtils.toByteArray(InputStream, int)", "text": "Reads up to {@code length} bytes from the input stream, and returns the bytes read.", "tags": "METHOD", "url": "exp/toByteArray.html"},
                {"title": "org.apache.poi.util.IOUtils.toByteArray(ByteBuffer, int)", "text": "Returns an array (that shouldn't be written to!) of the", "tags": "METHOD", "url": "exp/toByteArray.html"},
                {"title": "org.apache.poi.util.IOUtils.readFully(InputStream, byte[])", "text": "Helper method, just calls", "tags": "METHOD", "url": "exp/readFully.html"},
                {"title": "org.apache.poi.util.IOUtils.readFully(InputStream, byte[], int, int)", "text": "-1lenlen", "tags": "METHOD", "url": "exp/readFully.html"},
                {"title": "org.apache.poi.util.IOUtils.readFully(ReadableByteChannel, ByteBuffer)", "text": "Same as the normal , but tries to ensure", "tags": "METHOD", "url": "exp/readFully.html"},
                {"title": "org.apache.poi.util.IOUtils.copy(InputStream, OutputStream)", "text": "Copies all the data from the given InputStream to the OutputStream. It leaves both streams open, so you will still need to close them once done.", "tags": "METHOD", "url": "exp/copy.html"},
                {"title": "org.apache.poi.util.IOUtils.calculateChecksum(byte[])", "text": "Calculate checksum on input data", "tags": "METHOD", "url": "exp/calculateChecksum.html"},
                {"title": "org.apache.poi.util.IOUtils.calculateChecksum(InputStream)", "text": "Calculate checksum on all the data read from input stream", "tags": "METHOD", "url": "exp/calculateChecksum.html"},
                {"title": "org.apache.poi.util.IOUtils.closeQuietly(Closeable)", "text": "Quietly (no exceptions) close Closable resource", "tags": "METHOD", "url": "exp/closeQuietly.html"},
                {"title": "org.apache.poi.util.IOUtils.skipFully(InputStream, long)", "text": "Skips bytes from a stream.  Returns -1L if EOF was hit before the end of the stream.", "tags": "METHOD", "url": "exp/skipFully.html"},
                {"title": "org.apache.poi.util.JvmBugs.hasLineBreakMeasurerBug()", "text": "The LineBreakMeasurer is used for calculating text bounds", "tags": "METHOD", "url": "exp/hasLineBreakMeasurerBug.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getByteArray(byte[], int, int)", "text": "Copy a portion of a byte array", "tags": "METHOD", "url": "exp/getByteArray.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getDouble(byte[])", "text": "get a double value from a byte array, reads it in little endian format", "tags": "METHOD", "url": "exp/getDouble.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getDouble(byte[], int)", "text": "get a double value from a byte array, reads it in little endian format", "tags": "METHOD", "url": "exp/getDouble.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getFloat(byte[])", "text": "get a float value from a byte array, reads it in little endian format", "tags": "METHOD", "url": "exp/getFloat.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getFloat(byte[], int)", "text": "get a float value from a byte array, reads it in little endian format", "tags": "METHOD", "url": "exp/getFloat.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getInt(byte[])", "text": "get an int value from the beginning of a byte array the byte array", "tags": "METHOD", "url": "exp/getInt.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getInt(byte[], int)", "text": "get an int value from a byte array", "tags": "METHOD", "url": "exp/getInt.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getLong(byte[])", "text": "get a long value from a byte array the byte array", "tags": "METHOD", "url": "exp/getLong.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getLong(byte[], int)", "text": "get a long value from a byte array", "tags": "METHOD", "url": "exp/getLong.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getShort(byte[])", "text": "get a short value from the beginning of a byte array the byte array", "tags": "METHOD", "url": "exp/getShort.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getShort(byte[], int)", "text": "get a short value from a byte array", "tags": "METHOD", "url": "exp/getShort.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getShortArray(byte[], int, int)", "text": "Read short array", "tags": "METHOD", "url": "exp/getShortArray.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getUByte(byte[])", "text": "get the unsigned value of a byte. the byte array.", "tags": "METHOD", "url": "exp/getUByte.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getUByte(byte[], int)", "text": "get the unsigned value of a byte", "tags": "METHOD", "url": "exp/getUByte.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getUInt(byte[])", "text": "get an unsigned int value from a byte array the byte array", "tags": "METHOD", "url": "exp/getUInt.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getUInt(byte[], int)", "text": "get an unsigned int value from a byte array", "tags": "METHOD", "url": "exp/getUInt.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getUShort(byte[])", "text": "get an unsigned short value from the beginning of a byte array the byte array", "tags": "METHOD", "url": "exp/getUShort.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.getUShort(byte[], int)", "text": "get an unsigned short value from a byte array", "tags": "METHOD", "url": "exp/getUShort.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putByte(byte[], int, int)", "text": "executes:", "tags": "METHOD", "url": "exp/putByte.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putDouble(byte[], int, double)", "text": "put a double value into a byte array", "tags": "METHOD", "url": "exp/putDouble.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putDouble(double, OutputStream)", "text": "put a double value into a byte array", "tags": "METHOD", "url": "exp/putDouble.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putFloat(byte[], int, float)", "text": "put a float value into a byte array", "tags": "METHOD", "url": "exp/putFloat.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putFloat(float, OutputStream)", "text": "put a float value into a byte array", "tags": "METHOD", "url": "exp/putFloat.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putInt(byte[], int, int)", "text": "put an int value into a byte array", "tags": "METHOD", "url": "exp/putInt.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putInt(int, OutputStream)", "text": "Put int into output stream", "tags": "METHOD", "url": "exp/putInt.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putLong(byte[], int, long)", "text": "put a long value into a byte array", "tags": "METHOD", "url": "exp/putLong.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putLong(long, OutputStream)", "text": "Put long into output stream", "tags": "METHOD", "url": "exp/putLong.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putShort(byte[], int, short)", "text": "put a short value into a byte array", "tags": "METHOD", "url": "exp/putShort.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putShort(OutputStream, short)", "text": "Put signed short into output stream", "tags": "METHOD", "url": "exp/putShort.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putShortArray(byte[], int, short[])", "text": "Stores short array in buffer", "tags": "METHOD", "url": "exp/putShortArray.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putUByte(byte[], int, short)", "text": "put an unsigned byte value into a byte array", "tags": "METHOD", "url": "exp/putUByte.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putUInt(byte[], int, long)", "text": "put an unsigned int value into a byte array", "tags": "METHOD", "url": "exp/putUInt.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putUInt(long, OutputStream)", "text": "Put unsigned int into output stream", "tags": "METHOD", "url": "exp/putUInt.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putUShort(byte[], int, int)", "text": "put an unsigned short value into a byte array", "tags": "METHOD", "url": "exp/putUShort.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.putUShort(int, OutputStream)", "text": "Put unsigned short into output stream", "tags": "METHOD", "url": "exp/putUShort.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.readInt(InputStream)", "text": "get an int value from an InputStream", "tags": "METHOD", "url": "exp/readInt.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.readUInt(InputStream)", "text": "get an unsigned int value from an InputStream", "tags": "METHOD", "url": "exp/readUInt.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.readLong(InputStream)", "text": "get a long value from an InputStream", "tags": "METHOD", "url": "exp/readLong.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.readShort(InputStream)", "text": "get a short value from an InputStream", "tags": "METHOD", "url": "exp/readShort.html"},
                {"title": "org.apache.poi.util.BufferUnderrunException.ubyteToInt(byte)", "text": "Convert an 'unsigned' byte to an integer", "tags": "METHOD", "url": "exp/ubyteToInt.html"},
                {"title": "org.apache.poi.util.LittleEndianInput.readPlain(byte[], int, int)", "text": "Usually acts the same as {@link #readFully(byte[], int, int)}, but for an encrypted stream the raw (unencrypted) data is filled", "tags": "METHOD", "url": "exp/readPlain.html"},
                {"title": "org.apache.poi.util.LittleEndianInputStream.readUInt()", "text": "get an unsigned int value from an InputStream wraps any IOException thrown from reading the stream.", "tags": "METHOD", "url": "exp/readUInt.html"},
                {"title": "org.apache.poi.util.LocaleUtil.setUserTimeZone(TimeZone)", "text": "As time zone information is not stored in any format, it can be", "tags": "METHOD", "url": "exp/setUserTimeZone.html"},
                {"title": "org.apache.poi.util.LocaleUtil.resetUserTimeZone()", "text": "Clear the thread-local user time zone.", "tags": "METHOD", "url": "exp/resetUserTimeZone.html"},
                {"title": "org.apache.poi.util.LocaleUtil.setUserLocale(Locale)", "text": "Sets default user locale. This setting is specific to the current thread.", "tags": "METHOD", "url": "exp/setUserLocale.html"},
                {"title": "org.apache.poi.util.LocaleUtil.getLocaleCalendar(int, int, int)", "text": "Convenience method - month is 0-based as in java.util.Calendar", "tags": "METHOD", "url": "exp/getLocaleCalendar.html"},
                {"title": "org.apache.poi.util.LocaleUtil.getLocaleCalendar(int, int, int, int, int, int)", "text": "Convenience method - month is 0-based as in java.util.Calendar", "tags": "METHOD", "url": "exp/getLocaleCalendar.html"},
                {"title": "org.apache.poi.util.LZWDecompresser.populateDictionary(byte[])", "text": "Populates the dictionary, and returns where in it", "tags": "METHOD", "url": "exp/populateDictionary.html"},
                {"title": "org.apache.poi.util.LZWDecompresser.adjustDictionaryOffset(int)", "text": "Adjusts the position offset if needed when looking something up in the dictionary.", "tags": "METHOD", "url": "exp/adjustDictionaryOffset.html"},
                {"title": "org.apache.poi.util.LZWDecompresser.decompress(InputStream)", "text": "Decompresses the given input stream, returning the array of bytes of the decompressed input.", "tags": "METHOD", "url": "exp/decompress.html"},
                {"title": "org.apache.poi.util.LZWDecompresser.decompress(InputStream, OutputStream)", "text": "Perform a streaming decompression of the input", "tags": "METHOD", "url": "exp/decompress.html"},
                {"title": "org.apache.poi.util.LZWDecompresser.fromInt(int)", "text": "Given an integer, turn it into a java byte, handling", "tags": "METHOD", "url": "exp/fromInt.html"},
                {"title": "org.apache.poi.util.LZWDecompresser.fromByte(byte)", "text": "Given a java byte, turn it into an integer between 0", "tags": "METHOD", "url": "exp/fromByte.html"},
                {"title": "org.apache.poi.util.NullLogger._log(int, Object, Throwable)", "text": "Log a message", "tags": "METHOD", "url": "exp/_log.html"},
                {"title": "org.apache.poi.util.NullLogger.log(int, Object)", "text": "Log a message. Lazily appends Object parameters together. If the last parameter is a {@link Throwable} it is logged specially.", "tags": "METHOD", "url": "exp/log.html"},
                {"title": "org.apache.poi.util.NullLogger.check(int)", "text": "Check if a logger is enabled to log at the specified level", "tags": "METHOD", "url": "exp/check.html"},
                {"title": "org.apache.poi.util.PngUtils.matchesPngHeader(byte[], int)", "text": "Checks if the offset matches the PNG header.", "tags": "METHOD", "url": "exp/matchesPngHeader.html"},
                {"title": "org.apache.poi.util.POILogFactory.getLogger(Class<?>)", "text": "Get a logger, based on a class name", "tags": "METHOD", "url": "exp/getLogger.html"},
                {"title": "org.apache.poi.util.POILogFactory.getLogger(String)", "text": "Get a logger, based on a String", "tags": "METHOD", "url": "exp/getLogger.html"},
                {"title": "org.apache.poi.util.POILogger._log(int, Object)", "text": "Log a message", "tags": "METHOD", "url": "exp/_log.html"},
                {"title": "org.apache.poi.util.POILogger._log(int, Object, Throwable)", "text": "Log a message", "tags": "METHOD", "url": "exp/_log.html"},
                {"title": "org.apache.poi.util.POILogger.check(int)", "text": "Check if a logger is enabled to log at the specified level", "tags": "METHOD", "url": "exp/check.html"},
                {"title": "org.apache.poi.util.POILogger.log(int, Object)", "text": "Log a message. Lazily appends Object parameters together. If the last parameter is a {@link Throwable} it is logged specially.", "tags": "METHOD", "url": "exp/log.html"},
                {"title": "org.apache.poi.util.RLEDecompressingInputStream.readChunk()", "text": "Reads a single chunk from the underlying inputstream.", "tags": "METHOD", "url": "exp/readChunk.html"},
                {"title": "org.apache.poi.util.RLEDecompressingInputStream.getCopyLenBits(int)", "text": "Helper method to determine how many bits in the CopyToken are used for the CopyLength.", "tags": "METHOD", "url": "exp/getCopyLenBits.html"},
                {"title": "org.apache.poi.util.RLEDecompressingInputStream.readShort()", "text": "Convenience method for read a 2-bytes short in little endian encoding.", "tags": "METHOD", "url": "exp/readShort.html"},
                {"title": "org.apache.poi.util.RLEDecompressingInputStream.readInt()", "text": "Convenience method for read a 4-bytes int in little endian encoding.", "tags": "METHOD", "url": "exp/readInt.html"},
                {"title": "org.apache.poi.util.StringUtil.getFromUnicodeLE(byte[], int, int)", "text": "Given a byte array of 16-bit unicode characters in Little Endian", "tags": "METHOD", "url": "exp/getFromUnicodeLE.html"},
                {"title": "org.apache.poi.util.StringUtil.getFromUnicodeLE(byte[])", "text": "Given a byte array of 16-bit unicode characters in little endian", "tags": "METHOD", "url": "exp/getFromUnicodeLE.html"},
                {"title": "org.apache.poi.util.StringUtil.getToUnicodeLE(String)", "text": "Convert String to 16-bit unicode characters in little endian format", "tags": "METHOD", "url": "exp/getToUnicodeLE.html"},
                {"title": "org.apache.poi.util.StringUtil.getFromCompressedUnicode(byte[], int, int)", "text": "Read 8 bit data (in ISO-8859-1 codepage) into a (unicode) Java", "tags": "METHOD", "url": "exp/getFromCompressedUnicode.html"},
                {"title": "org.apache.poi.util.StringUtil.readUnicodeString(LittleEndianInput)", "text": "InputStream  is expected to contain:", "tags": "METHOD", "url": "exp/readUnicodeString.html"},
                {"title": "org.apache.poi.util.StringUtil.readUnicodeString(LittleEndianInput, int)", "text": "InputStream  is expected to contain:", "tags": "METHOD", "url": "exp/readUnicodeString.html"},
                {"title": "org.apache.poi.util.StringUtil.writeUnicodeString(LittleEndianOutput, String)", "text": "OutputStream  will get:", "tags": "METHOD", "url": "exp/writeUnicodeString.html"},
                {"title": "org.apache.poi.util.StringUtil.writeUnicodeStringFlagAndData(LittleEndianOutput, String)", "text": "OutputStream  will get:", "tags": "METHOD", "url": "exp/writeUnicodeStringFlagAndData.html"},
                {"title": "org.apache.poi.util.StringUtil.putCompressedUnicode(String, byte[], int)", "text": "Takes a unicode (java) string, and returns it as 8 bit data (in ISO-8859-1", "tags": "METHOD", "url": "exp/putCompressedUnicode.html"},
                {"title": "org.apache.poi.util.StringUtil.putUnicodeLE(String, byte[], int)", "text": "Takes a unicode string, and returns it as little endian (most", "tags": "METHOD", "url": "exp/putUnicodeLE.html"},
                {"title": "org.apache.poi.util.StringUtil.hasMultibyte(String)", "text": "check the parameter has multibyte character", "tags": "METHOD", "url": "exp/hasMultibyte.html"},
                {"title": "org.apache.poi.util.StringUtil.isUnicodeString(String)", "text": "Checks to see if a given String needs to be represented as Unicode", "tags": "METHOD", "url": "exp/isUnicodeString.html"},
                {"title": "org.apache.poi.util.StringUtil.startsWithIgnoreCase(String, String)", "text": "Tests if the string starts with the specified prefix, ignoring case consideration.", "tags": "METHOD", "url": "exp/startsWithIgnoreCase.html"},
                {"title": "org.apache.poi.util.StringUtil.endsWithIgnoreCase(String, String)", "text": "Tests if the string ends with the specified suffix, ignoring case consideration.", "tags": "METHOD", "url": "exp/endsWithIgnoreCase.html"},
                {"title": "org.apache.poi.util.StringsIterator.mapMsCodepointString(String)", "text": "Some strings may contain encoded characters of the unicode private use area", "tags": "METHOD", "url": "exp/mapMsCodepointString.html"},
                {"title": "org.apache.poi.util.StringsIterator.countMatches(CharSequence, char)", "text": "Count number of occurrences of needle in haystack Has same signature as org.apache.commons.lang3.StringUtils#countMatches", "tags": "METHOD", "url": "exp/countMatches.html"},
                {"title": "org.apache.poi.util.SystemOutLogger._log(int, Object)", "text": "Log a message", "tags": "METHOD", "url": "exp/_log.html"},
                {"title": "org.apache.poi.util.SystemOutLogger._log(int, Object, Throwable)", "text": "Log a message", "tags": "METHOD", "url": "exp/_log.html"},
                {"title": "org.apache.poi.util.SystemOutLogger.check(int)", "text": "Check if a logger is enabled to log at the specified level", "tags": "METHOD", "url": "exp/check.html"},
                {"title": "org.apache.poi.util.TempFile.setTempFileCreationStrategy(TempFileCreationStrategy)", "text": "Configures the strategy used by {@link #createTempFile(String, String)} to create the temporary files.", "tags": "METHOD", "url": "exp/setTempFileCreationStrategy.html"},
                {"title": "org.apache.poi.util.TempFile.createTempFile(String, String)", "text": "Creates a new and empty temporary file", "tags": "METHOD", "url": "exp/createTempFile.html"},
                {"title": "org.apache.poi.util.TempFileCreationStrategy.createTempFile(String, String)", "text": "Creates a new and empty temporary file.", "tags": "METHOD", "url": "exp/createTempFile.html"},
                {"title": "org.apache.poi.util.TempFileCreationStrategy.createTempDirectory(String)", "text": "Creates a new and empty temporary directory.", "tags": "METHOD", "url": "exp/createTempDirectory.html"},
                {"title": "org.apache.poi.util.Units.toEMU(double)", "text": "Converts points to EMUs", "tags": "METHOD", "url": "exp/toEMU.html"},
                {"title": "org.apache.poi.util.Units.pixelToEMU(int)", "text": "Converts pixels to EMUs", "tags": "METHOD", "url": "exp/pixelToEMU.html"},
                {"title": "org.apache.poi.util.Units.toPoints(long)", "text": "Converts EMUs to points", "tags": "METHOD", "url": "exp/toPoints.html"},
                {"title": "org.apache.poi.util.Units.fixedPointToDouble(int)", "text": "Converts a value of type FixedPoint to a floating point", "tags": "METHOD", "url": "exp/fixedPointToDouble.html"},
                {"title": "org.apache.poi.util.Units.doubleToFixedPoint(double)", "text": "Converts a value of type floating point to a FixedPoint", "tags": "METHOD", "url": "exp/doubleToFixedPoint.html"},
                {"title": "org.apache.poi.util.XMLHelper.getDocumentBuilderFactory()", "text": "Creates a new DocumentBuilderFactory, with sensible defaults", "tags": "METHOD", "url": "exp/getDocumentBuilderFactory.html"},
                {"title": "org.apache.poi.wp.usermodel.CharacterRun.getFontName()", "text": "Gets the fonts which shall be used to display the text contents of", "tags": "METHOD", "url": "exp/getFontName.html"}
        ]}